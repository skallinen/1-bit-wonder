shadow$provide.module$node_modules$google_maps$lib$cjs$loader=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Loader=void 0;class Loader{constructor(apiKey=null,options={}){this.apiKey=apiKey;this.options=options;if("undefined"===typeof window)throw Error("google-maps is supported only in browser environment");}load(){if("undefined"!==typeof this.api)return Promise.resolve(this.api);if("undefined"!==typeof this.loader)return this.loader;window[Loader.CALLBACK_NAME]=
()=>{this.api=window.google;if("undefined"===typeof this.resolve)throw Error("Should not happen");this.resolve(this.api)};window.gm_authFailure=()=>{if("undefined"===typeof this.reject)throw Error("Should not happen");this.reject(Error("google-maps: authentication error"))};return this.loader=new Promise((resolve,reject)=>{this.resolve=resolve;this.reject=reject;resolve=document.createElement("script");resolve.src=this.createUrl();resolve.async=!0;resolve.onerror=e=>reject(e);document.head.appendChild(resolve)})}createUrl(){const parameters=
[`callback=${Loader.CALLBACK_NAME}`];this.apiKey&&parameters.push(`key=${this.apiKey}`);for(let name in this.options)if(this.options.hasOwnProperty(name)){let value=this.options[name];"version"===name&&(name="v");"libraries"===name&&(value=value.join(","));parameters.push(`${name}=${value}`)}return`https://maps.googleapis.com/maps/api/js?${parameters.join("\x26")}`}}exports.Loader=Loader;Loader.CALLBACK_NAME="_dk_google_maps_loader_cb"}
//# sourceMappingURL=module$node_modules$google_maps$lib$cjs$loader.js.map

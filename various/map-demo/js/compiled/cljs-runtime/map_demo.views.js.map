{"version":3,"sources":["map_demo/views.cljs"],"mappings":"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","names":["map-demo.views/gmap-inner","update","comp","map__38942","cljs.core/--destructure-map","cljs.core.get","markers","reagent.core/props","map-demo.map-effects/delete-markers!","cljs.core.doall","cljs.core.map","marker","map__38943","lat","lng","name","map-demo.map-effects/create-marker!","reagent.core.create_class","map-demo.map-effects/create-map!","map-demo.config/lat","map-demo.config/lng","map-demo.config/apiKey","map-demo.views/gmap-outer","re_frame.core.subscribe","cljs.core/deref","map-demo.views/jobs-listing","job-list","p__38944","map__38945","estimated-traffic-effect","comment","status","type","map-demo.map-effects/center","map-demo.config/zoomed-in","map-demo.views/ta-checkbox-input","is-checked","re-frame.core/dispatch","cljs.core/not","map-demo.views/traffic-effects-checkbox-input","map-demo.views/main-panel","jobs-loaded?","loading?","map-demo.config/zoom"],"sourcesContent":["(ns map-demo.views\n  (:require\n   [re-frame.core :as re-frame]\n   [map-demo.subs :as subs]\n   [map-demo.events :as events]\n   [map-demo.config :as config]\n   [map-demo.map-effects :as map-effects]\n   [reagent.core :as reagent]))\n\n(defn gmap-inner\n  \"Inner counterpart of the main component for the keeping the stateful map\"\n  []\n  (let [update\n        (fn [comp]\n          (let [{:keys [markers]} (reagent/props comp)]\n            (map-effects/delete-markers!)\n            (doall (map (fn [marker]\n                          (let [{:keys [lat lng name]} marker]\n                            (map-effects/create-marker! lat lng name)))\n                        markers))))]\n\n    (reagent/create-class\n     {:reagent-render (fn [comp]\n                        [:div\n                         [:div#map-canvas {:style {:height \"80vh\"}}]])\n\n      :component-did-mount (fn []\n                             (map-effects/create-map!\n                              {:lat config/lat\n                               :lng config/lng\n                               :api-key config/apiKey\n                               :el \"map-canvas\"}))\n\n      :component-did-update update\n      :display-name \"gmap-inner\"})))\n\n\n(defn gmap-outer\n  \"Wrapper component for the (stateful) map\"\n  []\n  (let [markers (re-frame/subscribe [::subs/markers-filtered])]\n    (fn []\n      [gmap-inner {:markers @markers}])))\n\n\n(defn jobs-listing\n  \"Listing the selected jobs.\"\n  []\n  (let [job-list (deref (re-frame/subscribe [::subs/markers-filtered]))]\n    [:div.job-list\n     (when job-list\n       (doall\n        (map (fn [{:keys [lat\n                          lng\n                          estimated-traffic-effect\n                          comment\n                          name\n                          status\n                          type]}]\n               ^{:key name} [:button.job\n                             {:on-click #(map-effects/center\n                                          lat\n                                          lng\n                                          config/zoomed-in)}\n                             [:p name]\n                             [:p (str \"Traffic effect: \"\n                                      estimated-traffic-effect)]\n                             [:p \"Type: \" type]\n                             [:p status]\n                             [:p comment]]) job-list)))]))\n\n\n(defn ta-checkbox-input\n  \"Component for filtering job list where :type is 'ta'\"\n  []\n  (let [is-checked (re-frame/subscribe [::subs/ta-is-checked])]\n    [:button {:on-click\n              #(re-frame/dispatch\n                [::events/ta-change-checkbox (not @is-checked)])\n              :style (when @is-checked {:background-color \"#CCC\"})}\n     (str  (if @is-checked \" \u2611 \" \" \u2610 \")\n           \"Show only TAs\")]))\n\n\n(defn traffic-effects-checkbox-input\n  \"Component for filtering job list where :estimated-trafffic-effect is '3'\"\n  []\n  (let [is-checked (re-frame/subscribe [::subs/traffic-effects-is-checked])]\n    [:button {:on-click\n              #(re-frame/dispatch\n                [::events/traffic-effects-change-checkbox (not @is-checked)])\n              :style (when @is-checked {:background-color \"#CCC\"})}\n     (str  (if @is-checked \" \u2611 \" \" \u2610 \")\n           \"Show only Traffic Effects 3\")]))\n\n\n(defn main-panel\n  []\n  (let [jobs-loaded? (deref (re-frame/subscribe [::subs/loaded?]))\n        loading? (re-frame/subscribe [::subs/loading?])]\n    [:div\n     (if @loading? [:h1 \"Loading Demo Map Job Browser...\"]\n           [:h1  \"Demo Map Job Browser\"])\n     (when-not jobs-loaded?\n       [:button\n        {:on-click #(re-frame/dispatch [::events/fetch-jobs])}\n        \"Show jobs\"])\n     [:button {:on-click #(map-effects/center\n                           config/lat\n                           config/lng\n                           config/zoom)}\n      \"Recenter Map\"]\n     (when jobs-loaded? [ta-checkbox-input])\n     (when jobs-loaded? [traffic-effects-checkbox-input])\n     [:div.main-panel\n      [gmap-outer]\n      [:div\n       [jobs-listing]]]]))\n\n"]}
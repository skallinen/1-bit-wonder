{"version":3,"sources":["map_demo/views.cljs"],"mappings":"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","names":["map-demo.views/apiKey","map-demo.views/global-map","cljs.core.atom","map-demo.views/with-map","key","js/module$node_modules$google_maps$lib$cjs$index.Loader","cljs.core/clj->js","map-demo.views/latlng","lat","lng","p__39958","map__39959","cljs.core/--destructure-map","cljs.core.get","map-demo.views/create-map!","api-key","el","wrapper","themap","js/document","cljs.core/reset!","map-demo.views/create-marker!","map__39960","cljs.core/deref","marker","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/conj","map-demo.views/delete-markers!","markers","cljs.core/empty?","cljs.core.doall","cljs.core.map","mrk","cljs.core/assoc","p__39961","map__39962","map__39963","map-demo.views/display-feature","coordinates","cljs.core/first","map-demo.views/gmap-inner","update","comp","map__39964","reagent.core/props","map__39965","cljs.core.prn","reagent.core.create_class","map-demo.views/gmap-outer","re_frame.core.subscribe","map-demo.views/styles","map-demo.views/main-panel","loading","re-frame.core/dispatch"],"sourcesContent":["(ns map-demo.views\n  (:require\n   [re-frame.core :as re-frame]\n   [map-demo.subs :as subs]\n   [map-demo.events :as events]\n   [reagent.core :as reagent]\n   ;;[\"google-maps\" :refer [Loader]]\n   [\"google-maps\" :as gmaps]))\n\n(def apiKey \"AIzaSyAtiNz4AG_kKIAc3jA-kBssJCrdjv0olsg\")\n\n(def global-map (atom nil))\n\n\n(defn with-map [key]\n  (-> key\n      clj->js\n      gmaps/Loader.\n      .load))\n\n(defn latlng\n  [lat lng]\n  {\"lat\" lat \"lng\" lng})\n\n  \n  \n  (defn create-map! [{:keys [lat lng api-key el]}]\n  (.then (with-map api-key)\n         (fn [wrapper] (let [themap (wrapper.maps.Map. (.getElementById js/document el)\n                                                       (clj->js {\"center\" (latlng lat lng) \"zoom\" 9}))]\n                         (reset! global-map {:map themap :wrapper wrapper :markers []})))))\n\n\n  \n\n  (defn create-marker!\n  [lat lng]\n  (let [{themap :map\n         wrapper :wrapper} @global-map]\n    (let [marker (wrapper.maps.Marker.\n                  (clj->js\n                   {\"position\" (latlng lat lng)  \"map\" themap \"title\" \"whaaa?\"}))]\n      (swap! global-map update-in [:markers] conj marker))))\n  \n\n(defn delete-markers!\n  []\n  (let [markers (:markers @global-map)]\n    (when-not (empty? markers)\n      (doall     (map\n                  (fn [mrk] (mrk.setMap nil))\n                  markers)))\n    (swap! global-map assoc :markers [])))  \n\n(comment\n  (create-marker! 61 23)\n  (create-map! {:lat 50 :lng 25 :api-key apiKey :el \"map-div\" :globa-map global-map})\n\n  (.panTo (:map @global)\n          (clj->js {\"lat\" 60 \"lng\" 23}))\n\n  (.setCenter *map* (js/google.maps.LatLng. 60 30))\n  (.panTo *map* (js/google.maps.LatLng. 60 15))\n  (.setZoom *map* 3))\n\n\n(defn display-feature\n  [{{:keys [coordinates]} :geometry}]\n  [:div (first coordinates)])\n\n\n\n\n  (defn gmap-inner []\n  (let [update\n        (fn [comp]\n          (let [{:keys [markers]} (reagent/props comp)\n                lat (:lat (first markers))\n                lng (:lng (first markers))]\n            (delete-markers!)\n            (doall (map (fn [marker]\n                          (let [{:keys [lat lng]} marker]\n                            (create-marker! lat lng)\n                            (prn \"marker\" lat lng))) markers))))]\n\n    (reagent/create-class\n\n     {:reagent-render (fn [comp]\n                        [:div\n                         [:h4 \"Map\"]\n                         [:div#map-canvas {:style {:height \"80vh\"}}]])\n\n      :component-did-mount (fn []\n                             (create-map! {:lat 55.42 :lng 13.11 :api-key apiKey :el \"map-canvas\"}))\n\n      :component-did-update update\n      :display-name \"gmap-inner\"})))\n\n  (defn gmap-outer []\n  (let [markers (re-frame/subscribe [::subs/markers])]   ;; obtain the data\n    (fn []\n      ;; Note: @pos is a map here, so it gets passed as props.\n      ;; Non-props values can be accessed via (reagent/argv comp)\n      ;;(prn \"gmap-outer \" @markers)\n      [gmap-inner {:markers @markers}])))\n\n\n\n\n(def styles\n  {:root-container {:height \"100%\"}\n   :map {:border 0\n         :align-self \"flex-end\"\n         :height \"100vh\"\n         :width \"100%\"\n         :zIndex 0}})\n\n\n(defn main-panel []\n  (let [loading (re-frame/subscribe [::subs/loading])]\n\n    [:div\n     [:h1\n      \"Hello from yay\"]\n\n     (when @loading \"loading...\")\n     #_(map display-feature @features)\n     [:button {:on-click #(re-frame/dispatch [::events/fetch-tickets])} \"Load data\"]\n     #_[:div {:style {:height \"100vh\"}}\n        [:div#map-div  \"aha\"]]\n     [gmap-outer]]))\n"]}
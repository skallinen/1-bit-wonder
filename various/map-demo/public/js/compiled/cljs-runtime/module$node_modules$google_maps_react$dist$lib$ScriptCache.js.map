{
"version":3,
"file":"module$node_modules$google_maps_react$dist$lib$ScriptCache.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/google-maps-react/dist/lib/ScriptCache.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$google_maps_react$dist$lib$ScriptCache\"] = function(global,require,module,exports) {\n(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', './windowOrGlobal'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('./windowOrGlobal'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.windowOrGlobal);\n        global.ScriptCache = mod.exports;\n    }\n})(this, function (exports, window) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    var counter = 0;\n    var scriptMap = typeof window !== 'undefined' && window._scriptMap || new Map();\n    var ScriptCache = exports.ScriptCache = function (global) {\n        global._scriptMap = global._scriptMap || scriptMap;\n        return function ScriptCache(scripts) {\n            var Cache = {};\n\n            Cache._onLoad = function (key) {\n                return function (cb) {\n                    var registered = true;\n\n                    function unregister() {\n                        registered = false;\n                    }\n\n                    var stored = scriptMap.get(key);\n\n                    if (stored) {\n                        stored.promise.then(function () {\n                            if (registered) {\n                                stored.error ? cb(stored.error) : cb(null, stored);\n                            }\n\n                            return stored;\n                        }).catch(function (error) {\n                            return cb(error);\n                        });\n                    } else {\n                        // TODO:\n                    }\n\n                    return unregister;\n                };\n            };\n\n            Cache._scriptTag = function (key, src) {\n                if (!scriptMap.has(key)) {\n                    // Server side rendering environments don't always have access to the `document` global.\n                    // In these cases, we're not going to be able to return a script tag, so just return null.\n                    if (typeof document === 'undefined') return null;\n\n                    var tag = document.createElement('script');\n                    var promise = new Promise(function (resolve, reject) {\n                        var body = document.getElementsByTagName('body')[0];\n\n                        tag.type = 'text/javascript';\n                        tag.async = false; // Load in order\n\n                        var cbName = 'loaderCB' + counter++ + Date.now();\n                        var cb = void 0;\n\n                        var handleResult = function handleResult(state) {\n                            return function (evt) {\n                                var stored = scriptMap.get(key);\n                                if (state === 'loaded') {\n                                    stored.resolved = true;\n                                    resolve(src);\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = []\n                                } else if (state === 'error') {\n                                    stored.errored = true;\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = [];\n                                    reject(evt);\n                                }\n                                stored.loaded = true;\n\n                                cleanup();\n                            };\n                        };\n\n                        var cleanup = function cleanup() {\n                            if (global[cbName] && typeof global[cbName] === 'function') {\n                                global[cbName] = null;\n                                delete global[cbName];\n                            }\n                        };\n\n                        tag.onload = handleResult('loaded');\n                        tag.onerror = handleResult('error');\n                        tag.onreadystatechange = function () {\n                            handleResult(tag.readyState);\n                        };\n\n                        // Pick off callback, if there is one\n                        if (src.match(/callback=CALLBACK_NAME/)) {\n                            src = src.replace(/(callback=)[^\\&]+/, '$1' + cbName);\n                            cb = window[cbName] = tag.onload;\n                        } else {\n                            tag.addEventListener('load', tag.onload);\n                        }\n                        tag.addEventListener('error', tag.onerror);\n\n                        tag.src = src;\n                        body.appendChild(tag);\n\n                        return tag;\n                    });\n                    var initialState = {\n                        loaded: false,\n                        error: false,\n                        promise: promise,\n                        tag: tag\n                    };\n                    scriptMap.set(key, initialState);\n                }\n                return scriptMap.get(key).tag;\n            };\n\n            // let scriptTags = document.querySelectorAll('script')\n            //\n            // NodeList.prototype.filter = Array.prototype.filter;\n            // NodeList.prototype.map = Array.prototype.map;\n            // const initialScripts = scriptTags\n            //   .filter(s => !!s.src)\n            //   .map(s => s.src.split('?')[0])\n            //   .reduce((memo, script) => {\n            //     memo[script] = script;\n            //     return memo;\n            //   }, {});\n\n            Object.keys(scripts).forEach(function (key) {\n                var script = scripts[key];\n\n                var tag = window._scriptMap.has(key) ? window._scriptMap.get(key).tag : Cache._scriptTag(key, script);\n\n                Cache[key] = {\n                    tag: tag,\n                    onLoad: Cache._onLoad(key)\n                };\n            });\n\n            return Cache;\n        };\n    }(window);\n\n    exports.default = ScriptCache;\n});\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","windowOrGlobal","ScriptCache","window","Object","defineProperty","value","counter","scriptMap","_scriptMap","Map","scripts","Cache","Cache._onLoad","key","cb","registered","stored","get","promise","then","error","catch","unregister","Cache._scriptTag","src","has","document","tag","createElement","initialState","loaded","Promise","resolve","reject","body","getElementsByTagName","type","async","cbName","Date","now","handleResult","state","evt","resolved","errored","onload","onerror","onreadystatechange","tag.onreadystatechange","readyState","match","replace","addEventListener","appendChild","set","keys","forEach","script","_scriptTag","onLoad","_onLoad","default"]
}

shadow$provide.module$node_modules$readable_stream$errors=function(global,require,module,exports){function createErrorType(code,message,Base){Base||(Base=Error);class NodeError extends Base{constructor(arg1,arg2,arg3){arg1="string"===typeof message?message:message(arg1,arg2,arg3);super(arg1)}}NodeError.prototype.name=Base.name;NodeError.prototype.code=code;codes[code]=NodeError}function oneOf(expected,thing){if(Array.isArray(expected)){const len=expected.length;expected=expected.map(i=>String(i));
return 2<len?`one of ${thing} ${expected.slice(0,len-1).join(", ")}, or `+expected[len-1]:2===len?`one of ${thing} ${expected[0]} or ${expected[1]}`:`of ${thing} ${expected[0]}`}return`of ${thing} ${String(expected)}`}const codes={};createErrorType("ERR_INVALID_OPT_VALUE",function(name,value){return'The value "'+value+'" is invalid for option "'+name+'"'},TypeError);createErrorType("ERR_INVALID_ARG_TYPE",function(name,expected,actual){var determiner;if(determiner="string"===typeof expected)determiner=
"not "===expected.substr(0,4);determiner?(determiner="must not be",expected=expected.replace(/^not /,"")):determiner="must be";var this_len=void 0;if(void 0===this_len||this_len>name.length)this_len=name.length;" argument"===name.substring(this_len-9,this_len)?name=`The ${name} ${determiner} ${oneOf(expected,"type")}`:(this_len=void 0,"number"!==typeof this_len&&(this_len=0),this_len=this_len+1>name.length?!1:-1!==name.indexOf(".",this_len),name=`The "${name}" ${this_len?"property":"argument"} ${determiner} ${oneOf(expected,
"type")}`);return name+`. Received type ${typeof actual}`},TypeError);createErrorType("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF");createErrorType("ERR_METHOD_NOT_IMPLEMENTED",function(name){return"The "+name+" method is not implemented"});createErrorType("ERR_STREAM_PREMATURE_CLOSE","Premature close");createErrorType("ERR_STREAM_DESTROYED",function(name){return"Cannot call "+name+" after a stream was destroyed"});createErrorType("ERR_MULTIPLE_CALLBACK","Callback called multiple times");
createErrorType("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable");createErrorType("ERR_STREAM_WRITE_AFTER_END","write after end");createErrorType("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError);createErrorType("ERR_UNKNOWN_ENCODING",function(arg){return"Unknown encoding: "+arg},TypeError);createErrorType("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event");module.exports.codes=codes}
//# sourceMappingURL=module$node_modules$readable_stream$errors.js.map

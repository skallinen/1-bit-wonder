shadow$provide.module$node_modules$bip174$src$lib$psbt=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const combiner_1=require("module$node_modules$bip174$src$lib$combiner$index"),parser_1=require("module$node_modules$bip174$src$lib$parser$index"),typeFields_1=require("module$node_modules$bip174$src$lib$typeFields"),utils_1=require("module$node_modules$bip174$src$lib$utils");
class Psbt{constructor(tx){this.inputs=[];this.outputs=[];this.globalMap={unsignedTx:tx}}static fromBase64(data,txFromBuffer){data=Buffer.from(data,"base64");return this.fromBuffer(data,txFromBuffer)}static fromHex(data,txFromBuffer){data=Buffer.from(data,"hex");return this.fromBuffer(data,txFromBuffer)}static fromBuffer(buffer,txFromBuffer){buffer=parser_1.psbtFromBuffer(buffer,txFromBuffer);txFromBuffer=new this(buffer.globalMap.unsignedTx);Object.assign(txFromBuffer,buffer);return txFromBuffer}toBase64(){return this.toBuffer().toString("base64")}toHex(){return this.toBuffer().toString("hex")}toBuffer(){return parser_1.psbtToBuffer(this)}updateGlobal(updateData){utils_1.updateGlobal(updateData,
this.globalMap);return this}updateInput(inputIndex,updateData){inputIndex=utils_1.checkForInput(this.inputs,inputIndex);utils_1.updateInput(updateData,inputIndex);return this}updateOutput(outputIndex,updateData){outputIndex=utils_1.checkForOutput(this.outputs,outputIndex);utils_1.updateOutput(updateData,outputIndex);return this}addUnknownKeyValToGlobal(keyVal){utils_1.checkHasKey(keyVal,this.globalMap.unknownKeyVals,utils_1.getEnumLength(typeFields_1.GlobalTypes));this.globalMap.unknownKeyVals||(this.globalMap.unknownKeyVals=
[]);this.globalMap.unknownKeyVals.push(keyVal);return this}addUnknownKeyValToInput(inputIndex,keyVal){inputIndex=utils_1.checkForInput(this.inputs,inputIndex);utils_1.checkHasKey(keyVal,inputIndex.unknownKeyVals,utils_1.getEnumLength(typeFields_1.InputTypes));inputIndex.unknownKeyVals||(inputIndex.unknownKeyVals=[]);inputIndex.unknownKeyVals.push(keyVal);return this}addUnknownKeyValToOutput(outputIndex,keyVal){outputIndex=utils_1.checkForOutput(this.outputs,outputIndex);utils_1.checkHasKey(keyVal,
outputIndex.unknownKeyVals,utils_1.getEnumLength(typeFields_1.OutputTypes));outputIndex.unknownKeyVals||(outputIndex.unknownKeyVals=[]);outputIndex.unknownKeyVals.push(keyVal);return this}addInput(inputData){this.globalMap.unsignedTx.addInput(inputData);this.inputs.push({unknownKeyVals:[]});const addKeyVals=inputData.unknownKeyVals||[],inputIndex=this.inputs.length-1;if(!Array.isArray(addKeyVals))throw Error("unknownKeyVals must be an Array");addKeyVals.forEach(keyVal=>this.addUnknownKeyValToInput(inputIndex,
keyVal));utils_1.addInputAttributes(this.inputs,inputData);return this}addOutput(outputData){this.globalMap.unsignedTx.addOutput(outputData);this.outputs.push({unknownKeyVals:[]});const addKeyVals=outputData.unknownKeyVals||[],outputIndex=this.outputs.length-1;if(!Array.isArray(addKeyVals))throw Error("unknownKeyVals must be an Array");addKeyVals.forEach(keyVal=>this.addUnknownKeyValToInput(outputIndex,keyVal));utils_1.addOutputAttributes(this.outputs,outputData);return this}clearFinalizedInput(inputIndex){const input=
utils_1.checkForInput(this.inputs,inputIndex);utils_1.inputCheckUncleanFinalized(inputIndex,input);for(const key of Object.keys(input))["witnessUtxo","nonWitnessUtxo","finalScriptSig","finalScriptWitness","unknownKeyVals"].includes(key)||delete input[key];return this}combine(...those){those=combiner_1.combine([this].concat(those));Object.assign(this,those);return this}getTransaction(){return this.globalMap.unsignedTx.toBuffer()}}exports.Psbt=Psbt}
//# sourceMappingURL=module$node_modules$bip174$src$lib$psbt.js.map

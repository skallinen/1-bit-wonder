{
"version":3,
"file":"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$payments$p2ms.js",
"lineCount":8,
"mappings":"AAAAA,cAAA,CAAA,0FAAA,CAA+G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAUvJC,QAASA,YAAY,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAC1B,MAAID,EAAEE,CAAAA,MAAN,GAAiBD,CAAEC,CAAAA,MAAnB,CAAkC,CAAA,CAAlC,CAEOF,CAAEG,CAAAA,KAAF,CAAQ,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CAC7B,MAAOD,EAAEE,CAAAA,MAAF,CAASL,CAAA,CAAEI,CAAF,CAAT,CADsB,CAAxB,CAHmB,CAT5B,MAAME,KAAOX,OAAA,CAAQ,4FAAR,CAAb,CACMY,MAAQZ,OAAA,CAAQ,qCAAR,CADd,CAEMa,IAAMb,OAAA,CAAQ,4CAAR,CAFZ,CAGMc,IAAMd,OAAA,CAAQ,uCAAR,CAHZ;AAKMe,QAAUf,OAAA,CAAQ,qFAAR,CALhB,CAMMgB,gBAAkBhB,OAAA,CAAQ,uFAAR,CAAuBiB,CAAAA,OAN/C,CAOMC,YAAcL,GAAIM,CAAAA,WAoIxBlB,OAAOC,CAAAA,OAAP,CAxHAkB,QAAc,CAAChB,CAAD,CAAIiB,IAAJ,CAAU,CAStBC,QAASA,sBAAsB,CAACd,CAAD,CAAI,CACjC,MAAOO,QAAQQ,CAAAA,0BAAR,CAAmCf,CAAnC,CAAP,EAAiDa,IAAKG,CAAAA,eAAtD,EAA0EhB,CAA1E,GAAgFK,GAAIY,CAAAA,IADnD,CAoBnCC,QAASA,OAAO,CAACC,MAAD,CAAS,CACnBC,OAAJ,GACAA,OAIA,CAJU,CAAA,CAIV,CAHAC,MAGA,CAHSd,OAAQe,CAAAA,SAAR,CAAkBH,MAAlB,CAGT,CAFAI,CAAEC,CAAAA,CAEF,CAFMH,MAAA,CAAO,CAAP,CAEN,CAFkBX,WAElB;AADAa,CAAEE,CAAAA,CACF,CADMJ,MAAA,CAAOA,MAAOvB,CAAAA,MAAd,CAAuB,CAAvB,CACN,CADkCY,WAClC,CAAAa,CAAEG,CAAAA,OAAF,CAAYL,MAAOM,CAAAA,KAAP,CAAa,CAAb,CAAgB,CAAC,CAAjB,CALZ,CADuB,CA5BzB,GACE,EAAC/B,CAAEgC,CAAAA,KAAH,EACChC,CAAEuB,CAAAA,MADH,EAEEvB,CAAE8B,CAAAA,OAFJ,EAEuBG,IAAAA,EAFvB,GAEejC,CAAE4B,CAAAA,CAFjB,EAGC5B,CAAEkC,CAAAA,UAHH,CADF,CAKE,KAAM,KAAIC,SAAJ,CAAc,iBAAd,CAAN,CACFlB,IAAA,CAAOmB,MAAOC,CAAAA,MAAP,CAAc,CAAEC,SAAU,CAAA,CAAZ,CAAd,CAAkCrB,IAAlC,EAA0C,EAA1C,CAMPT,MAAA,CAAM,CACJ+B,QAAS/B,KAAMgC,CAAAA,KAAN,CAAYhC,KAAM4B,CAAAA,MAAlB,CADL,CAEJR,EAAGpB,KAAMgC,CAAAA,KAAN,CAAYhC,KAAMiC,CAAAA,MAAlB,CAFC,CAGJZ,EAAGrB,KAAMgC,CAAAA,KAAN,CAAYhC,KAAMiC,CAAAA,MAAlB,CAHC,CAIJlB,OAAQf,KAAMgC,CAAAA,KAAN,CAAYhC,KAAMkC,CAAAA,MAAlB,CAJJ,CAKJZ,QAAStB,KAAMgC,CAAAA,KAAN,CAAYhC,KAAMmC,CAAAA,OAAN,CAAcjC,GAAIkC,CAAAA,OAAlB,CAAZ,CALL,CAOJV,WAAY1B,KAAMgC,CAAAA,KAAN,CAAYhC,KAAMmC,CAAAA,OAAN,CAAczB,qBAAd,CAAZ,CAPR,CAQJc,MAAOxB,KAAMgC,CAAAA,KAAN,CAAYhC,KAAMkC,CAAAA,MAAlB,CARH,CAAN,CASG1C,CATH,CAYA,OAAM2B,EAAI,CAAEY,QADIvC,CAAEuC,CAAAA,OACNA;AADiB3B,eACnB,CAEV,KAAIa,MAAJ,CACID,QAAU,CAAA,CAUdjB,KAAKsC,CAAAA,IAAL,CAAUlB,CAAV,CAAa,QAAb,CAAuB,QAAS,EAAG,CACjC,GAAK3B,CAAE4B,CAAAA,CAAP,EACKD,CAAEE,CAAAA,CADP,EAEK7B,CAAE8B,CAAAA,OAFP,CAGA,MAAOnB,QAAQmC,CAAAA,OAAR,CAAgB,EAAGC,CAAAA,MAAH,CACrBjC,WADqB,CACPd,CAAE4B,CAAAA,CADK,CAErB5B,CAAE8B,CAAAA,OAFmB,CAGrBhB,WAHqB,CAGPa,CAAEE,CAAAA,CAHK,CAIrBpB,GAAIuC,CAAAA,gBAJiB,CAAhB,CAJ0B,CAAnC,CAWAzC,KAAKsC,CAAAA,IAAL,CAAUlB,CAAV,CAAa,GAAb,CAAkB,QAAS,EAAG,CAC5B,GAAKA,CAAEJ,CAAAA,MAAP,CAEA,MADAD,OAAA,CAAOK,CAAEJ,CAAAA,MAAT,CACSK,CAAFD,CAAEC,CAAAA,CAHmB,CAA9B,CAKArB,KAAKsC,CAAAA,IAAL,CAAUlB,CAAV,CAAa,GAAb,CAAkB,QAAS,EAAG,CAC5B,GAAKA,CAAEG,CAAAA,OAAP,CACA,MAAOH,EAAEG,CAAAA,OAAQ5B,CAAAA,MAFW,CAA9B,CAIAK,KAAKsC,CAAAA,IAAL,CAAUlB,CAAV,CAAa,SAAb,CAAwB,QAAS,EAAG,CAClC,GAAK3B,CAAEuB,CAAAA,MAAP,CAEA,MADAD,OAAA,CAAOtB,CAAEuB,CAAAA,MAAT,CACSO,CAAFH,CAAEG,CAAAA,OAHyB,CAApC,CAKAvB,KAAKsC,CAAAA,IAAL,CAAUlB,CAAV,CAAa,YAAb,CAA2B,QAAS,EAAG,CACrC,GAAK3B,CAAEgC,CAAAA,KAAP,CACA,MAAOrB,QAAQe,CAAAA,SAAR,CAAkB1B,CAAEgC,CAAAA,KAApB,CAA2BD,CAAAA,KAA3B,CAAiC,CAAjC,CAF8B,CAAvC,CAIAxB;IAAKsC,CAAAA,IAAL,CAAUlB,CAAV,CAAa,OAAb,CAAsB,QAAS,EAAG,CAChC,GAAK3B,CAAEkC,CAAAA,UAAP,CACA,MAAOvB,QAAQmC,CAAAA,OAAR,CAAgB,CAACrC,GAAIY,CAAAA,IAAL,CAAW0B,CAAAA,MAAX,CAAkB/C,CAAEkC,CAAAA,UAApB,CAAhB,CAFyB,CAAlC,CAIA3B,KAAKsC,CAAAA,IAAL,CAAUlB,CAAV,CAAa,SAAb,CAAwB,QAAS,EAAG,CAClC,GAAKA,CAAEK,CAAAA,KAAP,CACA,MAAO,EAF2B,CAApC,CAMA,IAAIf,IAAKqB,CAAAA,QAAT,CAAmB,CACjB,GAAItC,CAAEuB,CAAAA,MAAN,CAAc,CACZD,MAAA,CAAOtB,CAAEuB,CAAAA,MAAT,CACA,IAAI,CAACf,KAAMiC,CAAAA,MAAN,CAAahB,MAAA,CAAO,CAAP,CAAb,CAAL,CAA8B,KAAM,KAAIU,SAAJ,CAAc,mBAAd,CAAN,CAC9B,GAAI,CAAC3B,KAAMiC,CAAAA,MAAN,CAAahB,MAAA,CAAOA,MAAOvB,CAAAA,MAAd,CAAuB,CAAvB,CAAb,CAAL,CAA8C,KAAM,KAAIiC,SAAJ,CAAc,mBAAd,CAAN,CAC9C,GAAIV,MAAA,CAAOA,MAAOvB,CAAAA,MAAd,CAAuB,CAAvB,CAAJ,GAAkCO,GAAIuC,CAAAA,gBAAtC,CAAwD,KAAM,KAAIb,SAAJ,CAAc,mBAAd,CAAN,CAExD,GACS,CADT,EACER,CAAEC,CAAAA,CADJ,EAEQ,EAFR,CAEED,CAAEE,CAAAA,CAFJ,EAGEF,CAAEC,CAAAA,CAHJ,CAGQD,CAAEE,CAAAA,CAHV,EAIEF,CAAEE,CAAAA,CAJJ,GAIUJ,MAAOvB,CAAAA,MAJjB,CAI0B,CAJ1B,CAI6B,KAAM,KAAIiC,SAAJ,CAAc,mBAAd,CAAN;AAC7B,GAAI,CAACR,CAAEG,CAAAA,OAAQ3B,CAAAA,KAAV,CAAgBC,CAAA,EAAKM,GAAIkC,CAAAA,OAAJ,CAAYxC,CAAZ,CAArB,CAAL,CAA2C,KAAM,KAAI+B,SAAJ,CAAc,mBAAd,CAAN,CAE3C,GAAYF,IAAAA,EAAZ,GAAIjC,CAAE4B,CAAAA,CAAN,EAAyB5B,CAAE4B,CAAAA,CAA3B,GAAiCD,CAAEC,CAAAA,CAAnC,CAAsC,KAAM,KAAIO,SAAJ,CAAc,YAAd,CAAN,CACtC,GAAYF,IAAAA,EAAZ,GAAIjC,CAAE6B,CAAAA,CAAN,EAAyB7B,CAAE6B,CAAAA,CAA3B,GAAiCF,CAAEE,CAAAA,CAAnC,CAAsC,KAAM,KAAIM,SAAJ,CAAc,YAAd,CAAN,CACtC,GAAInC,CAAE8B,CAAAA,OAAN,EAAiB,CAAC/B,WAAA,CAAYC,CAAE8B,CAAAA,OAAd,CAAuBH,CAAEG,CAAAA,OAAzB,CAAlB,CAAqD,KAAM,KAAIK,SAAJ,CAAc,kBAAd,CAAN,CAfzC,CAkBd,GAAInC,CAAE8B,CAAAA,OAAN,CAAe,CACb,GAAYG,IAAAA,EAAZ,GAAIjC,CAAE6B,CAAAA,CAAN,EAAyB7B,CAAE6B,CAAAA,CAA3B,GAAiC7B,CAAE8B,CAAAA,OAAQ5B,CAAAA,MAA3C,CAAmD,KAAM,KAAIiC,SAAJ,CAAc,uBAAd,CAAN,CACnDR,CAAEE,CAAAA,CAAF,CAAM7B,CAAE8B,CAAAA,OAAQ5B,CAAAA,MAEhB,IAAIyB,CAAEE,CAAAA,CAAN,CAAUF,CAAEC,CAAAA,CAAZ,CAAe,KAAM,KAAIO,SAAJ,CAAc,oCAAd,CAAN,CAJF,CAOf,GAAInC,CAAEkC,CAAAA,UAAN,CAAkB,CAChB,GAAIlC,CAAEkC,CAAAA,UAAWhC,CAAAA,MAAjB;AAA0ByB,CAAEC,CAAAA,CAA5B,CAA+B,KAAM,KAAIO,SAAJ,CAAc,gCAAd,CAAN,CAC/B,GAAInC,CAAEkC,CAAAA,UAAWhC,CAAAA,MAAjB,CAA0ByB,CAAEC,CAAAA,CAA5B,CAA+B,KAAM,KAAIO,SAAJ,CAAc,8BAAd,CAAN,CAFf,CAKlB,GAAInC,CAAEgC,CAAAA,KAAN,CAAa,CACX,GAAIhC,CAAEgC,CAAAA,KAAF,CAAQ,CAAR,CAAJ,GAAmBvB,GAAIY,CAAAA,IAAvB,CAA6B,KAAM,KAAIc,SAAJ,CAAc,kBAAd,CAAN,CAC7B,GAA4B,CAA5B,GAAIR,CAAEO,CAAAA,UAAWhC,CAAAA,MAAjB,EAAiC,CAACyB,CAAEO,CAAAA,UAAW/B,CAAAA,KAAb,CAAmBe,qBAAnB,CAAlC,CAA6E,KAAM,KAAIiB,SAAJ,CAAc,gCAAd,CAAN,CAE7E,GAAInC,CAAEkC,CAAAA,UAAN,EAAoB,CAACnC,WAAA,CAAYC,CAAEkC,CAAAA,UAAd,CAA0BP,CAAEO,CAAAA,UAA5B,CAArB,CAA8D,KAAM,KAAIC,SAAJ,CAAc,oBAAd,CAAN,CAC9D,GAAYF,IAAAA,EAAZ,GAAIjC,CAAE4B,CAAAA,CAAN,EAAyB5B,CAAE4B,CAAAA,CAA3B,GAAiC5B,CAAEkC,CAAAA,UAAWhC,CAAAA,MAA9C,CAAsD,KAAM,KAAIiC,SAAJ,CAAc,0BAAd,CAAN;AAL3C,CA/BI,CAwCnB,MAAOC,OAAOC,CAAAA,MAAP,CAAcV,CAAd,CAAiB3B,CAAjB,CArHe,CApB+H;",
"sources":["node_modules/bitcoin-address-generator/node_modules/bitcoinjs-lib/src/payments/p2ms.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$payments$p2ms\"] = function(global,require,module,exports) {\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\nconst ecc = require('tiny-secp256k1')\n\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\nconst OP_INT_BASE = OPS.OP_RESERVED // OP_1 - 1\n\nfunction stacksEqual (a, b) {\n  if (a.length !== b.length) return false\n\n  return a.every(function (x, i) {\n    return x.equals(b[i])\n  })\n}\n\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\nfunction p2ms (a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  function isAcceptableSignature (x) {\n    return bscript.isCanonicalScriptSignature(x) || (opts.allowIncomplete && (x === OPS.OP_0))\n  }\n\n  typef({\n    network: typef.maybe(typef.Object),\n    m: typef.maybe(typef.Number),\n    n: typef.maybe(typef.Number),\n    output: typef.maybe(typef.Buffer),\n    pubkeys: typef.maybe(typef.arrayOf(ecc.isPoint)),\n\n    signatures: typef.maybe(typef.arrayOf(isAcceptableSignature)),\n    input: typef.maybe(typef.Buffer)\n  }, a)\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  let chunks\n  let decoded = false\n  function decode (output) {\n    if (decoded) return\n    decoded = true\n    chunks = bscript.decompile(output)\n    o.m = chunks[0] - OP_INT_BASE\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE\n    o.pubkeys = chunks.slice(1, -2)\n  }\n\n  lazy.prop(o, 'output', function () {\n    if (!a.m) return\n    if (!o.n) return\n    if (!a.pubkeys) return\n    return bscript.compile([].concat(\n      OP_INT_BASE + a.m,\n      a.pubkeys,\n      OP_INT_BASE + o.n,\n      OPS.OP_CHECKMULTISIG\n    ))\n  })\n  lazy.prop(o, 'm', function () {\n    if (!o.output) return\n    decode(o.output)\n    return o.m\n  })\n  lazy.prop(o, 'n', function () {\n    if (!o.pubkeys) return\n    return o.pubkeys.length\n  })\n  lazy.prop(o, 'pubkeys', function () {\n    if (!a.output) return\n    decode(a.output)\n    return o.pubkeys\n  })\n  lazy.prop(o, 'signatures', function () {\n    if (!a.input) return\n    return bscript.decompile(a.input).slice(1)\n  })\n  lazy.prop(o, 'input', function () {\n    if (!a.signatures) return\n    return bscript.compile([OPS.OP_0].concat(a.signatures))\n  })\n  lazy.prop(o, 'witness', function () {\n    if (!o.input) return\n    return []\n  })\n\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output)\n      if (!typef.Number(chunks[0])) throw new TypeError('Output is invalid')\n      if (!typef.Number(chunks[chunks.length - 2])) throw new TypeError('Output is invalid')\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG) throw new TypeError('Output is invalid')\n\n      if (\n        o.m <= 0 ||\n        o.n > 16 ||\n        o.m > o.n ||\n        o.n !== chunks.length - 3) throw new TypeError('Output is invalid')\n      if (!o.pubkeys.every(x => ecc.isPoint(x))) throw new TypeError('Output is invalid')\n\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch')\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch')\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys)) throw new TypeError('Pubkeys mismatch')\n    }\n\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length) throw new TypeError('Pubkey count mismatch')\n      o.n = a.pubkeys.length\n\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m')\n    }\n\n    if (a.signatures) {\n      if (a.signatures.length < o.m) throw new TypeError('Not enough signatures provided')\n      if (a.signatures.length > o.m) throw new TypeError('Too many signatures provided')\n    }\n\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid')\n      if (o.signatures.length === 0 || !o.signatures.every(isAcceptableSignature)) throw new TypeError('Input has invalid signature(s)')\n\n      if (a.signatures && !stacksEqual(a.signatures, o.signatures)) throw new TypeError('Signature mismatch')\n      if (a.m !== undefined && a.m !== a.signatures.length) throw new TypeError('Signature count mismatch')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2ms\n\n};"],
"names":["shadow$provide","global","require","module","exports","stacksEqual","a","b","length","every","x","i","equals","lazy","typef","OPS","ecc","bscript","BITCOIN_NETWORK","bitcoin","OP_INT_BASE","OP_RESERVED","p2ms","opts","isAcceptableSignature","isCanonicalScriptSignature","allowIncomplete","OP_0","decode","output","decoded","chunks","decompile","o","m","n","pubkeys","slice","input","undefined","signatures","TypeError","Object","assign","validate","network","maybe","Number","Buffer","arrayOf","isPoint","prop","compile","concat","OP_CHECKMULTISIG"]
}

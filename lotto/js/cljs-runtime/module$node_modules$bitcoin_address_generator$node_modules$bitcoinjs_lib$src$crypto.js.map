{
"version":3,
"file":"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$crypto.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mFAAA,CAAwG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhJC,QAASA,UAAU,CAACC,MAAD,CAAS,CAC1B,GAAI,CACF,MAAOC,WAAA,CAAW,QAAX,CAAqBC,CAAAA,MAArB,CAA4BF,MAA5B,CAAoCG,CAAAA,MAApC,EADL,CAEF,MAAOC,GAAP,CAAY,CACZ,MAAOH,WAAA,CAAW,WAAX,CAAwBC,CAAAA,MAAxB,CAA+BF,MAA/B,CAAuCG,CAAAA,MAAvC,EADK,CAHY,CAY5BE,QAASA,OAAO,CAACL,MAAD,CAAS,CACvB,MAAOC,WAAA,CAAW,QAAX,CAAqBC,CAAAA,MAArB,CAA4BF,MAA5B,CAAoCG,CAAAA,MAApC,EADgB,CAdzB,MAAMF,WAAaL,OAAA,CAAQ,yCAAR,CA0BnBC,OAAOC,CAAAA,OAAP,CAAiB,CACfQ,QATFA,QAAiB,CAACN,MAAD,CAAS,CACxB,MAAOD,UAAA,CAAUM,MAAA,CAAOL,MAAP,CAAV,CADiB,CAQT;AAEfO,QANFA,QAAiB,CAACP,MAAD,CAAS,CACxB,MAAOK,OAAA,CAAOA,MAAA,CAAOL,MAAP,CAAP,CADiB,CAIT,CAGJD,SAHI,CAIfS,KApBFA,QAAc,CAACR,MAAD,CAAS,CACrB,MAAOC,WAAA,CAAW,MAAX,CAAmBC,CAAAA,MAAnB,CAA0BF,MAA1B,CAAkCG,CAAAA,MAAlC,EADc,CAgBN,CAKPE,MALO,CA3B+H;",
"sources":["node_modules/bitcoin-address-generator/node_modules/bitcoinjs-lib/src/crypto.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$crypto\"] = function(global,require,module,exports) {\nconst createHash = require('create-hash')\n\nfunction ripemd160 (buffer) {\n  try {\n    return createHash('rmd160').update(buffer).digest()\n  } catch (err) {\n    return createHash('ripemd160').update(buffer).digest()\n  }\n}\n\nfunction sha1 (buffer) {\n  return createHash('sha1').update(buffer).digest()\n}\n\nfunction sha256 (buffer) {\n  return createHash('sha256').update(buffer).digest()\n}\n\nfunction hash160 (buffer) {\n  return ripemd160(sha256(buffer))\n}\n\nfunction hash256 (buffer) {\n  return sha256(sha256(buffer))\n}\n\nmodule.exports = {\n  hash160: hash160,\n  hash256: hash256,\n  ripemd160: ripemd160,\n  sha1: sha1,\n  sha256: sha256\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","ripemd160","buffer","createHash","update","digest","err","sha256","hash160","hash256","sha1"]
}

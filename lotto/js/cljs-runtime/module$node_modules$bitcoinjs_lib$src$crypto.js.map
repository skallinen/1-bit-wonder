{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$crypto.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAazGC,QAASA,UAAS,CAACC,MAAD,CAAS,CACzB,GAAI,CACF,MAAOC,WAAA,CAAW,QAAX,CAAqBC,CAAAA,MAArB,CAA4BF,MAA5B,CAAoCG,CAAAA,MAApC,EADL,CAEF,MAAOC,GAAP,CAAY,CACZ,GAAI,CACF,MAAOH,WAAA,CAAW,WAAX,CAAwBC,CAAAA,MAAxB,CAA+BF,MAA/B,CAAuCG,CAAAA,MAAvC,EADL,CAEF,MAAOE,IAAP,CAAa,CACb,MAAuBH,CAAhB,IAAII,SAAYJ,EAAAA,MAAhB,CAAuBF,MAAvB,CAA+BG,CAAAA,MAA/B,EADM,CAHH,CAHW,CAgB3BI,QAASA,OAAM,CAACP,MAAD,CAAS,CACtB,MAAOC,WAAA,CAAW,QAAX,CAAqBC,CAAAA,MAArB,CAA4BF,MAA5B,CAAoCG,CAAAA,MAApC,EADe,CA5BxB,IAAIK,OAASZ,OAAA,CAAQ,kCAAR,CAAkBY,CAAAA,MAC/B,aACAC,OAAOC,CAAAA,cAAP,CAAsBZ,OAAtB,CAA+B,YAA/B;AAA6C,CAAEa,MAAO,CAAA,CAAT,CAA7C,CACAb,QAAQc,CAAAA,UAAR,CACEd,OAAQe,CAAAA,OADV,CAEEf,OAAQgB,CAAAA,OAFV,CAGEhB,OAAQS,CAAAA,MAHV,CAIET,OAAQiB,CAAAA,IAJV,CAKEjB,OAAQC,CAAAA,SALV,CAMI,IAAK,EACT,OAAME,WAAaL,OAAA,CAAQ,yCAAR,CAAnB,CACMU,UAAYV,OAAA,CAAQ,qCAAR,CAYlBE,QAAQC,CAAAA,SAAR,CAAoBA,SAIpBD,QAAQiB,CAAAA,IAAR,CAHAA,QAAa,CAACf,MAAD,CAAS,CACpB,MAAOC,WAAA,CAAW,MAAX,CAAmBC,CAAAA,MAAnB,CAA0BF,MAA1B,CAAkCG,CAAAA,MAAlC,EADa,CAOtBL,QAAQS,CAAAA,MAAR,CAAiBA,MAIjBT,QAAQgB,CAAAA,OAAR,CAHAA,QAAgB,CAACd,MAAD,CAAS,CACvB,MAAOD,UAAA,CAAUQ,MAAA,CAAOP,MAAP,CAAV,CADgB,CAOzBF,QAAQe,CAAAA,OAAR,CAHAA,QAAgB,CAACb,MAAD,CAAS,CACvB,MAAOO,OAAA,CAAOA,MAAA,CAAOP,MAAP,CAAP,CADgB,CAgBzB;MAAMgB,qBAAuBP,MAAOQ,CAAAA,WAAP,CAZhBC,kHAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAaNC,CAAAA,GAAL,CAASC,GAAA,EAAO,CACd,MAAMC,QAAUd,MAAA,CAAOC,MAAOc,CAAAA,IAAP,CAAYF,GAAZ,CAAP,CAChB,OAAO,CAACA,GAAD,CAAMZ,MAAOe,CAAAA,MAAP,CAAc,CAACF,OAAD,CAAUA,OAAV,CAAd,CAAN,CAFO,CAAhB,CAD2B,CAS7BvB,QAAQc,CAAAA,UAAR,CAHAA,QAAmB,CAACY,MAAD,CAASC,IAAT,CAAe,CAChC,MAAOlB,OAAA,CAAOC,MAAOe,CAAAA,MAAP,CAAc,CAACP,oBAAA,CAAqBQ,MAArB,CAAD,CAA+BC,IAA/B,CAAd,CAAP,CADyB,CA3DuE;",
"sources":["node_modules/bitcoinjs-lib/src/crypto.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$crypto\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.taggedHash =\n  exports.hash256 =\n  exports.hash160 =\n  exports.sha256 =\n  exports.sha1 =\n  exports.ripemd160 =\n    void 0;\nconst createHash = require('create-hash');\nconst RipeMd160 = require('ripemd160');\nfunction ripemd160(buffer) {\n  try {\n    return createHash('rmd160').update(buffer).digest();\n  } catch (err) {\n    try {\n      return createHash('ripemd160').update(buffer).digest();\n    } catch (err2) {\n      return new RipeMd160().update(buffer).digest();\n    }\n  }\n}\nexports.ripemd160 = ripemd160;\nfunction sha1(buffer) {\n  return createHash('sha1').update(buffer).digest();\n}\nexports.sha1 = sha1;\nfunction sha256(buffer) {\n  return createHash('sha256').update(buffer).digest();\n}\nexports.sha256 = sha256;\nfunction hash160(buffer) {\n  return ripemd160(sha256(buffer));\n}\nexports.hash160 = hash160;\nfunction hash256(buffer) {\n  return sha256(sha256(buffer));\n}\nexports.hash256 = hash256;\nconst TAGS = [\n  'BIP0340/challenge',\n  'BIP0340/aux',\n  'BIP0340/nonce',\n  'TapLeaf',\n  'TapBranch',\n  'TapSighash',\n  'TapTweak',\n  'KeyAgg list',\n  'KeyAgg coefficient',\n];\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = Object.fromEntries(\n  TAGS.map(tag => {\n    const tagHash = sha256(Buffer.from(tag));\n    return [tag, Buffer.concat([tagHash, tagHash])];\n  }),\n);\nfunction taggedHash(prefix, data) {\n  return sha256(Buffer.concat([TAGGED_HASH_PREFIXES[prefix], data]));\n}\nexports.taggedHash = taggedHash;\n\n};"],
"names":["shadow$provide","global","require","module","exports","ripemd160","buffer","createHash","update","digest","err","err2","RipeMd160","sha256","Buffer","Object","defineProperty","value","taggedHash","hash256","hash160","sha1","TAGGED_HASH_PREFIXES","fromEntries","TAGS","map","tag","tagHash","from","concat","prefix","data"]
}

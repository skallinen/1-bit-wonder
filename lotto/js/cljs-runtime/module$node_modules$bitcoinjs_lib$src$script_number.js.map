{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$script_number.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAChH,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAAkBG,CAAAA,MAC/B,aACAC,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAAEI,MAAO,CAAA,CAAT,CAA7C,CACAJ,QAAQK,CAAAA,MAAR,CAAiBL,OAAQM,CAAAA,MAAzB,CAAkC,IAAK,EA6BvCN,QAAQM,CAAAA,MAAR,CA5BAA,QAAe,CAACC,MAAD,CAASC,SAAT,CAAoBC,OAApB,CAA6B,CAE1CA,OAAA,CAAsBC,IAAAA,EAAZ,GAAAD,OAAA,CAAwB,CAAA,CAAxB,CAA+BA,OACzC,KAAME,OAASJ,MAAOI,CAAAA,MACtB,IAAe,CAAf,GAAIA,MAAJ,CAAkB,MAAO,EACzB,IAAIA,MAAJ,EAJYH,SAIZ,EAJyB,CAIzB,EAAwB,KAAM,KAAII,SAAJ,CAAc,wBAAd,CAAN,CACxB,GAAIH,OAAJ,EACsC,CADtC,IACOF,MAAA,CAAOI,MAAP;AAAgB,CAAhB,CADP,CAC4B,GAD5B,IAEkB,CAFlB,EAEQA,MAFR,EAEuD,CAFvD,IAEwBJ,MAAA,CAAOI,MAAP,CAAgB,CAAhB,CAFxB,CAE6C,GAF7C,GAGM,KAAUE,MAAJ,CAAU,qCAAV,CAAN,CAIN,GAAe,CAAf,GAAIF,MAAJ,CAGE,MAFMG,OAEN,CAFUP,MAAOQ,CAAAA,YAAP,CAAoB,CAApB,CAEV,CADMC,MACN,CADUT,MAAOU,CAAAA,SAAP,CAAiB,CAAjB,CACV,CAAID,MAAJ,CAAQ,GAAR,CAAqB,EAAgB,UAAhB,EAAGA,MAAH,CAAQ,CAAA,GAAR,EAA8BF,MAA9B,CAArB,CACW,UADX,CACOE,MADP,CACyBF,MAGvBI,UAAAA,CAAS,CACb,KAASC,OAAT,CAAa,CAAb,CAAgBA,OAAhB,CAAoBR,MAApB,CAA4B,EAAEQ,OAA9B,CACED,SAAA,EAAUX,MAAA,CAAOY,OAAP,CAAV,EAAwB,CAAxB,CAA4BA,OAE9B,OAAIZ,OAAA,CAAOI,MAAP,CAAgB,CAAhB,CAAJ,CAAyB,GAAzB,CACS,EAAEO,SAAF,CAAW,EAAE,GAAF,EAAW,CAAX,EAAgBP,MAAhB,CAAyB,CAAzB,EAAX,CADT,CAEOO,SA1BmC,CA0D5ClB,QAAQK,CAAAA,MAAR,CAhBAA,QAAe,CAACe,OAAD,CAAU,CACvB,IAAIhB,MAAQiB,IAAKC,CAAAA,GAAL,CAASF,OAAT,CACZ,OAAMG,KAdK,UAAJ,CAcoBnB,KAdpB,CACH,CADG;AAEC,OAAJ,CAYuBA,KAZvB,CACA,CADA,CAEI,KAAJ,CAUuBA,KAVvB,CACA,CADA,CAEI,GAAJ,CAQuBA,KARvB,CACA,CADA,CAEI,CAAJ,CAMuBA,KANvB,CACA,CADA,CAEA,CAIJ,CACMG,OAASN,MAAOuB,CAAAA,WAAP,CAAmBD,IAAnB,CACTE,QAAAA,CAAqB,CAArBA,CAAWL,OACjB,KAAK,IAAID,EAAI,CAAb,CAAgBA,CAAhB,CAAoBI,IAApB,CAA0B,EAAEJ,CAA5B,CACEZ,MAAOmB,CAAAA,UAAP,CAAkBtB,KAAlB,CAA0B,GAA1B,CAAgCe,CAAhC,CACA,CAAAf,KAAA,GAAU,CAERG,OAAA,CAAOgB,IAAP,CAAc,CAAd,CAAJ,CAAuB,GAAvB,CACEhB,MAAOmB,CAAAA,UAAP,CAAkBD,OAAA,CAAW,GAAX,CAAkB,CAApC,CAA0CF,IAA1C,CAAiD,CAAjD,CADF,CAEWE,OAFX,GAGElB,MAAA,CAAOgB,IAAP,CAAc,CAAd,CAHF,EAGsB,GAHtB,CAKA,OAAOhB,OAdgB,CA/CuF;",
"sources":["node_modules/bitcoinjs-lib/src/script_number.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$script_number\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = void 0;\nfunction decode(buffer, maxLength, minimal) {\n  maxLength = maxLength || 4;\n  minimal = minimal === undefined ? true : minimal;\n  const length = buffer.length;\n  if (length === 0) return 0;\n  if (length > maxLength) throw new TypeError('Script number overflow');\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0)\n        throw new Error('Non-minimally encoded script number');\n    }\n  }\n  // 40-bit\n  if (length === 5) {\n    const a = buffer.readUInt32LE(0);\n    const b = buffer.readUInt8(4);\n    if (b & 0x80) return -((b & ~0x80) * 0x100000000 + a);\n    return b * 0x100000000 + a;\n  }\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  let result = 0;\n  for (let i = 0; i < length; ++i) {\n    result |= buffer[i] << (8 * i);\n  }\n  if (buffer[length - 1] & 0x80)\n    return -(result & ~(0x80 << (8 * (length - 1))));\n  return result;\n}\nexports.decode = decode;\nfunction scriptNumSize(i) {\n  return i > 0x7fffffff\n    ? 5\n    : i > 0x7fffff\n    ? 4\n    : i > 0x7fff\n    ? 3\n    : i > 0x7f\n    ? 2\n    : i > 0x00\n    ? 1\n    : 0;\n}\nfunction encode(_number) {\n  let value = Math.abs(_number);\n  const size = scriptNumSize(value);\n  const buffer = Buffer.allocUnsafe(size);\n  const negative = _number < 0;\n  for (let i = 0; i < size; ++i) {\n    buffer.writeUInt8(value & 0xff, i);\n    value >>= 8;\n  }\n  if (buffer[size - 1] & 0x80) {\n    buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1);\n  } else if (negative) {\n    buffer[size - 1] |= 0x80;\n  }\n  return buffer;\n}\nexports.encode = encode;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","encode","decode","buffer","maxLength","minimal","undefined","length","TypeError","Error","a","readUInt32LE","b","readUInt8","result","i","_number","Math","abs","size","allocUnsafe","negative","writeUInt8"]
}

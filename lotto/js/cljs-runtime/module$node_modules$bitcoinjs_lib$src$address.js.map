{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$address.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/address.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$address\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.toOutputScript =\n  exports.fromOutputScript =\n  exports.toBech32 =\n  exports.toBase58Check =\n  exports.fromBech32 =\n  exports.fromBase58Check =\n    void 0;\nconst networks = require('./networks');\nconst payments = require('./payments');\nconst bscript = require('./script');\nconst types_1 = require('./types');\nconst bech32_1 = require('bech32');\nconst bs58check = require('bs58check');\nconst FUTURE_SEGWIT_MAX_SIZE = 40;\nconst FUTURE_SEGWIT_MIN_SIZE = 2;\nconst FUTURE_SEGWIT_MAX_VERSION = 16;\nconst FUTURE_SEGWIT_MIN_VERSION = 2;\nconst FUTURE_SEGWIT_VERSION_DIFF = 0x50;\nconst FUTURE_SEGWIT_VERSION_WARNING =\n  'WARNING: Sending to a future segwit version address can lead to loss of funds. ' +\n  'End users MUST be warned carefully in the GUI and asked if they wish to proceed ' +\n  'with caution. Wallets should verify the segwit version from the output of fromBech32, ' +\n  'then decide when it is safe to use which version of segwit.';\nfunction _toFutureSegwitAddress(output, network) {\n  const data = output.slice(2);\n  if (\n    data.length < FUTURE_SEGWIT_MIN_SIZE ||\n    data.length > FUTURE_SEGWIT_MAX_SIZE\n  )\n    throw new TypeError('Invalid program length for segwit address');\n  const version = output[0] - FUTURE_SEGWIT_VERSION_DIFF;\n  if (\n    version < FUTURE_SEGWIT_MIN_VERSION ||\n    version > FUTURE_SEGWIT_MAX_VERSION\n  )\n    throw new TypeError('Invalid version for segwit address');\n  if (output[1] !== data.length)\n    throw new TypeError('Invalid script for segwit address');\n  console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n  return toBech32(data, version, network.bech32);\n}\nfunction fromBase58Check(address) {\n  const payload = bs58check.decode(address);\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 21) throw new TypeError(address + ' is too long');\n  const version = payload.readUInt8(0);\n  const hash = payload.slice(1);\n  return { version, hash };\n}\nexports.fromBase58Check = fromBase58Check;\nfunction fromBech32(address) {\n  let result;\n  let version;\n  try {\n    result = bech32_1.bech32.decode(address);\n  } catch (e) {}\n  if (result) {\n    version = result.words[0];\n    if (version !== 0) throw new TypeError(address + ' uses wrong encoding');\n  } else {\n    result = bech32_1.bech32m.decode(address);\n    version = result.words[0];\n    if (version === 0) throw new TypeError(address + ' uses wrong encoding');\n  }\n  const data = bech32_1.bech32.fromWords(result.words.slice(1));\n  return {\n    version,\n    prefix: result.prefix,\n    data: Buffer.from(data),\n  };\n}\nexports.fromBech32 = fromBech32;\nfunction toBase58Check(hash, version) {\n  (0, types_1.typeforce)(\n    (0, types_1.tuple)(types_1.Hash160bit, types_1.UInt8),\n    arguments,\n  );\n  const payload = Buffer.allocUnsafe(21);\n  payload.writeUInt8(version, 0);\n  hash.copy(payload, 1);\n  return bs58check.encode(payload);\n}\nexports.toBase58Check = toBase58Check;\nfunction toBech32(data, version, prefix) {\n  const words = bech32_1.bech32.toWords(data);\n  words.unshift(version);\n  return version === 0\n    ? bech32_1.bech32.encode(prefix, words)\n    : bech32_1.bech32m.encode(prefix, words);\n}\nexports.toBech32 = toBech32;\nfunction fromOutputScript(output, network) {\n  // TODO: Network\n  network = network || networks.bitcoin;\n  try {\n    return payments.p2pkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2sh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wpkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wsh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2tr({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _toFutureSegwitAddress(output, network);\n  } catch (e) {}\n  throw new Error(bscript.toASM(output) + ' has no matching Address');\n}\nexports.fromOutputScript = fromOutputScript;\nfunction toOutputScript(address, network) {\n  network = network || networks.bitcoin;\n  let decodeBase58;\n  let decodeBech32;\n  try {\n    decodeBase58 = fromBase58Check(address);\n  } catch (e) {}\n  if (decodeBase58) {\n    if (decodeBase58.version === network.pubKeyHash)\n      return payments.p2pkh({ hash: decodeBase58.hash }).output;\n    if (decodeBase58.version === network.scriptHash)\n      return payments.p2sh({ hash: decodeBase58.hash }).output;\n  } else {\n    try {\n      decodeBech32 = fromBech32(address);\n    } catch (e) {}\n    if (decodeBech32) {\n      if (decodeBech32.prefix !== network.bech32)\n        throw new Error(address + ' has an invalid prefix');\n      if (decodeBech32.version === 0) {\n        if (decodeBech32.data.length === 20)\n          return payments.p2wpkh({ hash: decodeBech32.data }).output;\n        if (decodeBech32.data.length === 32)\n          return payments.p2wsh({ hash: decodeBech32.data }).output;\n      } else if (decodeBech32.version === 1) {\n        if (decodeBech32.data.length === 32)\n          return payments.p2tr({ pubkey: decodeBech32.data }).output;\n      } else if (\n        decodeBech32.version >= FUTURE_SEGWIT_MIN_VERSION &&\n        decodeBech32.version <= FUTURE_SEGWIT_MAX_VERSION &&\n        decodeBech32.data.length >= FUTURE_SEGWIT_MIN_SIZE &&\n        decodeBech32.data.length <= FUTURE_SEGWIT_MAX_SIZE\n      ) {\n        console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n        return bscript.compile([\n          decodeBech32.version + FUTURE_SEGWIT_VERSION_DIFF,\n          decodeBech32.data,\n        ]);\n      }\n    }\n  }\n  throw new Error(address + ' has no matching Script');\n}\nexports.toOutputScript = toOutputScript;\n\n};"],
"names":["shadow$provide","global","require","module","exports","fromBase58Check","address","payload","bs58check","decode","length","TypeError","version","readUInt8","hash","slice","fromBech32","result","bech32_1","bech32","e","words","bech32m","data","fromWords","prefix","Buffer","from","toBech32","toWords","unshift","encode","Object","defineProperty","value","toOutputScript","fromOutputScript","toBase58Check","networks","payments","bscript","types_1","typeforce","tuple","Hash160bit","UInt8","arguments","allocUnsafe","writeUInt8","copy","output","network","bitcoin","p2pkh","p2sh","p2wpkh","p2wsh","p2tr","FUTURE_SEGWIT_MIN_SIZE","FUTURE_SEGWIT_MAX_SIZE","FUTURE_SEGWIT_VERSION_DIFF","FUTURE_SEGWIT_MIN_VERSION","FUTURE_SEGWIT_MAX_VERSION","console","warn","FUTURE_SEGWIT_VERSION_WARNING","Error","toASM","decodeBase58","decodeBech32","pubKeyHash","scriptHash","pubkey","compile"]
}

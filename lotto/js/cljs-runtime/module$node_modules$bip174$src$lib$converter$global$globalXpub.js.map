{
"version":3,
"file":"module$node_modules$bip174$src$lib$converter$global$globalXpub.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/bip174/src/lib/converter/global/globalXpub.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip174$src$lib$converter$global$globalXpub\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst range = n => [...Array(n).keys()];\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.GlobalTypes.GLOBAL_XPUB) {\n    throw new Error(\n      'Decode Error: could not decode globalXpub with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (keyVal.key.length !== 79 || ![2, 3].includes(keyVal.key[46])) {\n    throw new Error(\n      'Decode Error: globalXpub has invalid extended pubkey in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if ((keyVal.value.length / 4) % 1 !== 0) {\n    throw new Error(\n      'Decode Error: Global GLOBAL_XPUB value length should be multiple of 4',\n    );\n  }\n  const extendedPubkey = keyVal.key.slice(1);\n  const data = {\n    masterFingerprint: keyVal.value.slice(0, 4),\n    extendedPubkey,\n    path: 'm',\n  };\n  for (const i of range(keyVal.value.length / 4 - 1)) {\n    const val = keyVal.value.readUInt32LE(i * 4 + 4);\n    const isHard = !!(val & 0x80000000);\n    const idx = val & 0x7fffffff;\n    data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n  }\n  return data;\n}\nexports.decode = decode;\nfunction encode(data) {\n  const head = Buffer.from([typeFields_1.GlobalTypes.GLOBAL_XPUB]);\n  const key = Buffer.concat([head, data.extendedPubkey]);\n  const splitPath = data.path.split('/');\n  const value = Buffer.allocUnsafe(splitPath.length * 4);\n  data.masterFingerprint.copy(value, 0);\n  let offset = 4;\n  splitPath.slice(1).forEach(level => {\n    const isHard = level.slice(-1) === \"'\";\n    let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n    if (isHard) num += 0x80000000;\n    value.writeUInt32LE(num, offset);\n    offset += 4;\n  });\n  return {\n    key,\n    value,\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ masterFingerprint: Buffer; extendedPubkey: Buffer; path: string; }';\nfunction check(data) {\n  const epk = data.extendedPubkey;\n  const mfp = data.masterFingerprint;\n  const p = data.path;\n  return (\n    Buffer.isBuffer(epk) &&\n    epk.length === 78 &&\n    [2, 3].indexOf(epk[45]) > -1 &&\n    Buffer.isBuffer(mfp) &&\n    mfp.length === 4 &&\n    typeof p === 'string' &&\n    !!p.match(/^m(\\/\\d+'?)*$/)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.extendedPubkey.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => v.extendedPubkey.equals(item.extendedPubkey)).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","typeFields_1","decode","keyVal","key","GlobalTypes","GLOBAL_XPUB","Error","toString","length","includes","extendedPubkey","slice","data","masterFingerprint","path","i","Array","keys","val","readUInt32LE","isHard","encode","head","from","concat","splitPath","split","allocUnsafe","copy","offset","forEach","level","num","parseInt","writeUInt32LE","expected","check","epk","mfp","p","isBuffer","indexOf","match","canAddToArray","array","item","dupeSet","dupeString","has","add","filter","v","equals"]
}

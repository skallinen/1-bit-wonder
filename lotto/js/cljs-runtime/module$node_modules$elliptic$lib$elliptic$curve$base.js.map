{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$curve$base.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/curve/base.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$curve$base\"] = function(global,require,module,exports) {\n'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","BaseCurve","type","conf","p","BN","red","prime","mont","zero","toRed","one","two","n","g","pointFromJSON","gRed","_wnafT1","Array","_wnafT2","_wnafT3","_wnafT4","_bitLength","bitLength","adjustCount","div","cmpn","redN","_maxwellTrick","BasePoint","curve","precomputed","utils","getNAF","getJSF","assert","prototype","point","BaseCurve.prototype.point","Error","validate","BaseCurve.prototype.validate","_fixedNafMul","BaseCurve.prototype._fixedNafMul","k","doubles","_getDoubles","naf","I","step","repr","j","length","nafW","l","push","a","jpoint","b","i","mixedAdd","points","neg","add","toP","_wnafMul","BaseCurve.prototype._wnafMul","nafPoints","_getNAFPoints","w","wnd","acc","dblp","z","_wnafMulAdd","BaseCurve.prototype._wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","max","Math","comb","y","cmp","toJ","redNeg","index","jsf","tmp","eq","BasePoint.prototype.eq","BasePoint.prototype.validate","decodePoint","BaseCurve.prototype.decodePoint","bytes","enc","toArray","byteLength","res","slice","pointFromX","encodeCompressed","BasePoint.prototype.encodeCompressed","encode","_encode","BasePoint.prototype._encode","compact","x","getX","getY","isEven","concat","BasePoint.prototype.encode","precompute","BasePoint.prototype.precompute","power","beta","_getBeta","_hasDoubles","BasePoint.prototype._hasDoubles","ceil","BasePoint.prototype._getDoubles","dbl","BasePoint.prototype._getNAFPoints","BasePoint.prototype._getBeta","BasePoint.prototype.dblp","r"]
}

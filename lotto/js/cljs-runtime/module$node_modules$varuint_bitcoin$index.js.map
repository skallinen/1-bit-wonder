{
"version":3,
"file":"module$node_modules$varuint_bitcoin$index.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/varuint-bitcoin/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$varuint_bitcoin$index\"] = function(global,require,module,exports) {\n'use strict'\nvar Buffer = require('safe-buffer').Buffer\n\n// Number.MAX_SAFE_INTEGER\nvar MAX_SAFE_INTEGER = 9007199254740991\n\nfunction checkUInt53 (n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError('value out of range')\n}\n\nfunction encode (number, buffer, offset) {\n  checkUInt53(number)\n\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(number))\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance')\n  if (!offset) offset = 0\n\n  // 8 bit\n  if (number < 0xfd) {\n    buffer.writeUInt8(number, offset)\n    encode.bytes = 1\n\n  // 16 bit\n  } else if (number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset)\n    buffer.writeUInt16LE(number, offset + 1)\n    encode.bytes = 3\n\n  // 32 bit\n  } else if (number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset)\n    buffer.writeUInt32LE(number, offset + 1)\n    encode.bytes = 5\n\n  // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset)\n    buffer.writeUInt32LE(number >>> 0, offset + 1)\n    buffer.writeUInt32LE((number / 0x100000000) | 0, offset + 5)\n    encode.bytes = 9\n  }\n\n  return buffer\n}\n\nfunction decode (buffer, offset) {\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance')\n  if (!offset) offset = 0\n\n  var first = buffer.readUInt8(offset)\n\n  // 8 bit\n  if (first < 0xfd) {\n    decode.bytes = 1\n    return first\n\n  // 16 bit\n  } else if (first === 0xfd) {\n    decode.bytes = 3\n    return buffer.readUInt16LE(offset + 1)\n\n  // 32 bit\n  } else if (first === 0xfe) {\n    decode.bytes = 5\n    return buffer.readUInt32LE(offset + 1)\n\n  // 64 bit\n  } else {\n    decode.bytes = 9\n    var lo = buffer.readUInt32LE(offset + 1)\n    var hi = buffer.readUInt32LE(offset + 5)\n    var number = hi * 0x0100000000 + lo\n    checkUInt53(number)\n\n    return number\n  }\n}\n\nfunction encodingLength (number) {\n  checkUInt53(number)\n\n  return (\n    number < 0xfd ? 1\n      : number <= 0xffff ? 3\n        : number <= 0xffffffff ? 5\n          : 9\n  )\n}\n\nmodule.exports = { encode: encode, decode: decode, encodingLength: encodingLength }\n\n};"],
"names":["shadow$provide","global","require","module","exports","checkUInt53","n","MAX_SAFE_INTEGER","RangeError","encode","number","buffer","offset","Buffer","allocUnsafe","encodingLength","isBuffer","TypeError","writeUInt8","bytes","writeUInt16LE","writeUInt32LE","decode","first","readUInt8","readUInt16LE","readUInt32LE","lo","hi"]
}

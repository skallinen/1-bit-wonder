{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$push_data.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/push_data.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$push_data\"] = function(global,require,module,exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.decode = exports.encode = exports.encodingLength = void 0;\nconst ops_1 = require('./ops');\nfunction encodingLength(i) {\n  return i < ops_1.OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\nexports.encodingLength = encodingLength;\nfunction encode(buffer, num, offset) {\n  const size = encodingLength(num);\n  // ~6 bit\n  if (size === 1) {\n    buffer.writeUInt8(num, offset);\n    // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA1, offset);\n    buffer.writeUInt8(num, offset + 1);\n    // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA2, offset);\n    buffer.writeUInt16LE(num, offset + 1);\n    // 32 bit\n  } else {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA4, offset);\n    buffer.writeUInt32LE(num, offset + 1);\n  }\n  return size;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n  const opcode = buffer.readUInt8(offset);\n  let num;\n  let size;\n  // ~6 bit\n  if (opcode < ops_1.OPS.OP_PUSHDATA1) {\n    num = opcode;\n    size = 1;\n    // 8 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    num = buffer.readUInt8(offset + 1);\n    size = 2;\n    // 16 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    num = buffer.readUInt16LE(offset + 1);\n    size = 3;\n    // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== ops_1.OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n    num = buffer.readUInt32LE(offset + 1);\n    size = 5;\n  }\n  return {\n    opcode,\n    number: num,\n    size,\n  };\n}\nexports.decode = decode;\n\n};"],
"names":["shadow$provide","global","require","module","exports","encodingLength","i","ops_1","OPS","OP_PUSHDATA1","Object","defineProperty","value","decode","encode","buffer","num","offset","size","writeUInt8","OP_PUSHDATA2","writeUInt16LE","OP_PUSHDATA4","writeUInt32LE","opcode","readUInt8","length","readUInt16LE","Error","readUInt32LE","number"]
}

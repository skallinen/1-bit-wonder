{
"version":3,
"file":"module$node_modules$hmac_drbg$lib$hmac_drbg.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/hmac-drbg/lib/hmac-drbg.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$hmac_drbg$lib$hmac_drbg\"] = function(global,require,module,exports) {\n'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","HmacDRBG","options","hash","predResist","outLen","outSize","minEntropy","hmacStrength","V","K","reseedInterval","_reseed","entropy","utils","toArray","entropyEnc","nonce","nonceEnc","pers","persEnc","assert","length","_init","prototype","HmacDRBG.prototype._init","seed","concat","Array","i","_update","_hmac","HmacDRBG.prototype._hmac","hmac","HmacDRBG.prototype._update","kmac","update","digest","reseed","HmacDRBG.prototype.reseed","add","addEnc","generate","HmacDRBG.prototype.generate","len","enc","Error","temp","res","slice","encode"]
}

{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$p2pkh.js",
"lineCount":8,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACjH,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAAkBG,CAAAA,MAC/B,aACAC,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAAEI,MAAO,CAAA,CAAT,CAA7C,CACAJ,QAAQK,CAAAA,KAAR,CAAgB,IAAK,EACrB,OAAMC,QAAUR,OAAA,CAAQ,8CAAR,CAAhB,CACMS,WAAaT,OAAA,CAAQ,gDAAR,CADnB,CAEMU,QAAUV,OAAA,CAAQ,8CAAR,CAFhB,CAGMW,QAAUX,OAAA,CAAQ,6CAAR,CAHhB;AAIMY,KAAOZ,OAAA,CAAQ,qDAAR,CAJb,CAKMa,UAAYb,OAAA,CAAQ,qCAAR,CALlB,CAMMc,IAAMJ,OAAQI,CAAAA,GA0HpBZ,QAAQK,CAAAA,KAAR,CAvHAA,QAAc,CAACQ,CAAD,CAAIC,IAAJ,CAAU,CACtB,GAAI,EAACD,CAAEE,CAAAA,OAAH,EAAeF,CAAEG,CAAAA,IAAjB,EAA0BH,CAAEI,CAAAA,MAA5B,EAAuCJ,CAAEK,CAAAA,MAAzC,EAAoDL,CAAEM,CAAAA,KAAtD,CAAJ,CACE,KAAM,KAAIC,SAAJ,CAAc,iBAAd,CAAN,CACFN,IAAA,CAAOZ,MAAOmB,CAAAA,MAAP,CAAc,CAAEC,SAAU,CAAA,CAAZ,CAAd,CAAkCR,IAAlC,EAA0C,EAA1C,CACP,IAAIL,OAAQc,CAAAA,SAAZ,EACE,CACEC,QAASf,OAAQc,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBhB,OAAQc,CAAAA,SAAUrB,CAAAA,MAA1C,CADX,CAEEa,QAASN,OAAQc,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBhB,OAAQc,CAAAA,SAAUG,CAAAA,MAA1C,CAFX,CAGEV,KAAMP,OAAQc,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBhB,OAAQc,CAAAA,SAAUI,CAAAA,OAAlB,CAA0B,EAA1B,CAAxB,CAHR;AAIEV,OAAQR,OAAQc,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBhB,OAAQc,CAAAA,SAAUI,CAAAA,OAAlB,CAA0B,EAA1B,CAAxB,CAJV,CAKET,OAAQT,OAAQc,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBhB,OAAQmB,CAAAA,OAAhC,CALV,CAMEC,UAAWpB,OAAQc,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBjB,OAAQsB,CAAAA,0BAAhC,CANb,CAOEX,MAAOV,OAAQc,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBhB,OAAQc,CAAAA,SAAUtB,CAAAA,MAA1C,CAPT,CADF,CAUEY,CAVF,CAYA,OAAMkB,SAAWrB,IAAKN,CAAAA,KAAL,CAAW,EAAA,EAAM,CAChC,IAAM4B,QAAUrB,SAAUsB,CAAAA,MAAV,CAAiBpB,CAAEE,CAAAA,OAAnB,CAChB,OAAMmB,QAAUF,OAAQG,CAAAA,SAAR,CAAkB,CAAlB,CACVnB,QAAAA,CAAOgB,OAAQI,CAAAA,KAAR,CAAc,CAAd,CACb,OAAO,CAAEF,OAAF,CAAWlB,KAAAA,OAAX,CAJyB,CAAjB,CAAjB,CAMMqB,QAAU3B,IAAKN,CAAAA,KAAL,CAAW,EAAA,EAClBI,OAAQ8B,CAAAA,SAAR,CAAkBzB,CAAEM,CAAAA,KAApB,CADO,CANhB,CASMK,QAAUX,CAAEW,CAAAA,OAAZA,EAAuBjB,UAAWgC,CAAAA,OATxC,CAUMC,EAAI,CAAEC,KAAM,OAAR;AAAiBjB,OAAjB,CACVd,KAAKgC,CAAAA,IAAL,CAAUF,CAAV,CAAa,SAAb,CAAwB,EAAA,EAAM,CAC5B,GAAKA,CAAExB,CAAAA,IAAP,CAAA,CACA,IAAMgB,QAAU/B,MAAO0C,CAAAA,WAAP,CAAmB,EAAnB,CAChBX,QAAQY,CAAAA,UAAR,CAAmBpB,OAAQqB,CAAAA,UAA3B,CAAuC,CAAvC,CACAL,EAAExB,CAAAA,IAAK8B,CAAAA,IAAP,CAAYd,OAAZ,CAAqB,CAArB,CACA,OAAOrB,UAAUoC,CAAAA,MAAV,CAAiBf,OAAjB,CAJP,CAD4B,CAA9B,CAOAtB,KAAKgC,CAAAA,IAAL,CAAUF,CAAV,CAAa,MAAb,CAAqB,EAAA,EAAM,CACzB,GAAI3B,CAAEI,CAAAA,MAAN,CAAc,MAAOJ,EAAEI,CAAAA,MAAOmB,CAAAA,KAAT,CAAe,CAAf,CAAkB,EAAlB,CACrB,IAAIvB,CAAEE,CAAAA,OAAN,CAAe,MAAOgB,SAAA,EAAWf,CAAAA,IACjC,IAAIH,CAAEK,CAAAA,MAAN,EAAgBsB,CAAEtB,CAAAA,MAAlB,CAA0B,MAAOZ,QAAQ0C,CAAAA,OAAR,CAAgBnC,CAAEK,CAAAA,MAAlB,EAA4BsB,CAAEtB,CAAAA,MAA9B,CAHR,CAA3B,CAKAR,KAAKgC,CAAAA,IAAL,CAAUF,CAAV,CAAa,QAAb,CAAuB,EAAA,EAAM,CAC3B,GAAKA,CAAExB,CAAAA,IAAP,CACA,MAAOR,QAAQyC,CAAAA,OAAR,CAAgB,CACrBrC,GAAIsC,CAAAA,MADiB,CAErBtC,GAAIuC,CAAAA,UAFiB,CAGrBX,CAAExB,CAAAA,IAHmB,CAIrBJ,GAAIwC,CAAAA,cAJiB,CAKrBxC,GAAIyC,CAAAA,WALiB,CAAhB,CAFoB,CAA7B,CAUA3C,KAAKgC,CAAAA,IAAL,CAAUF,CAAV,CAAa,QAAb;AAAuB,EAAA,EAAM,CAC3B,GAAK3B,CAAEM,CAAAA,KAAP,CACA,MAAOkB,QAAA,EAAA,CAAU,CAAV,CAFoB,CAA7B,CAIA3B,KAAKgC,CAAAA,IAAL,CAAUF,CAAV,CAAa,WAAb,CAA0B,EAAA,EAAM,CAC9B,GAAK3B,CAAEM,CAAAA,KAAP,CACA,MAAOkB,QAAA,EAAA,CAAU,CAAV,CAFuB,CAAhC,CAIA3B,KAAKgC,CAAAA,IAAL,CAAUF,CAAV,CAAa,OAAb,CAAsB,EAAA,EAAM,CAC1B,GAAK3B,CAAEK,CAAAA,MAAP,EACKL,CAAEgB,CAAAA,SADP,CAEA,MAAOrB,QAAQyC,CAAAA,OAAR,CAAgB,CAACpC,CAAEgB,CAAAA,SAAH,CAAchB,CAAEK,CAAAA,MAAhB,CAAhB,CAHmB,CAA5B,CAKAR,KAAKgC,CAAAA,IAAL,CAAUF,CAAV,CAAa,SAAb,CAAwB,EAAA,EAAM,CAC5B,GAAKA,CAAErB,CAAAA,KAAP,CACA,MAAO,EAFqB,CAA9B,CAKA,IAAIL,IAAKQ,CAAAA,QAAT,CAAmB,CACbN,IAAAA,CAAOf,MAAOqD,CAAAA,IAAP,CAAY,EAAZ,CACX,IAAIzC,CAAEE,CAAAA,OAAN,CAAe,CACb,GAAIgB,QAAA,EAAWG,CAAAA,OAAf,GAA2BV,OAAQqB,CAAAA,UAAnC,CACE,KAAM,KAAIzB,SAAJ,CAAc,qCAAd,CAAN,CACF,GAA+B,EAA/B,GAAIW,QAAA,EAAWf,CAAAA,IAAKuC,CAAAA,MAApB,CAAmC,KAAM,KAAInC,SAAJ,CAAc,iBAAd,CAAN,CACnCJ,IAAA,CAAOe,QAAA,EAAWf,CAAAA,IAJL,CAMf,GAAIH,CAAEG,CAAAA,IAAN,CAAY,CACV,GAAkB,CAAlB;AAAIA,IAAKuC,CAAAA,MAAT,EAAuB,CAACvC,IAAKwC,CAAAA,MAAL,CAAY3C,CAAEG,CAAAA,IAAd,CAAxB,CACE,KAAM,KAAII,SAAJ,CAAc,eAAd,CAAN,CACGJ,IAAA,CAAOH,CAAEG,CAAAA,IAHJ,CAKZ,GAAIH,CAAEI,CAAAA,MAAN,CAAc,CACZ,GACsB,EADtB,GACEJ,CAAEI,CAAAA,MAAOsC,CAAAA,MADX,EAEE1C,CAAEI,CAAAA,MAAF,CAAS,CAAT,CAFF,GAEkBL,GAAIsC,CAAAA,MAFtB,EAGErC,CAAEI,CAAAA,MAAF,CAAS,CAAT,CAHF,GAGkBL,GAAIuC,CAAAA,UAHtB,EAIkB,EAJlB,GAIEtC,CAAEI,CAAAA,MAAF,CAAS,CAAT,CAJF,EAKEJ,CAAEI,CAAAA,MAAF,CAAS,EAAT,CALF,GAKmBL,GAAIwC,CAAAA,cALvB,EAMEvC,CAAEI,CAAAA,MAAF,CAAS,EAAT,CANF,GAMmBL,GAAIyC,CAAAA,WANvB,CAQE,KAAM,KAAIjC,SAAJ,CAAc,mBAAd,CAAN,CACF,IAAMqC,MAAQ5C,CAAEI,CAAAA,MAAOmB,CAAAA,KAAT,CAAe,CAAf,CAAkB,EAAlB,CACd,IAAkB,CAAlB,CAAIpB,IAAKuC,CAAAA,MAAT,EAAuB,CAACvC,IAAKwC,CAAAA,MAAL,CAAYC,KAAZ,CAAxB,CACE,KAAM,KAAIrC,SAAJ,CAAc,eAAd,CAAN,CACGJ,IAAA,CAAOyC,KAbA,CAed,GAAI5C,CAAEK,CAAAA,MAAN,CAAc,CACNwC,KAAAA,CAAMpD,OAAQ0C,CAAAA,OAAR,CAAgBnC,CAAEK,CAAAA,MAAlB,CACZ,IAAkB,CAAlB,CAAIF,IAAKuC,CAAAA,MAAT,EAAuB,CAACvC,IAAKwC,CAAAA,MAAL,CAAYE,KAAZ,CAAxB,CACE,KAAM,KAAItC,SAAJ,CAAc,eAAd,CAAN;AACGJ,IAAA,CAAO0C,KAJA,CAMd,GAAI7C,CAAEM,CAAAA,KAAN,CAAa,CACLwC,KAAAA,CAAStB,OAAA,EACf,IAAsB,CAAtB,GAAIsB,KAAOJ,CAAAA,MAAX,CAAyB,KAAM,KAAInC,SAAJ,CAAc,kBAAd,CAAN,CACzB,GAAI,CAACZ,OAAQsB,CAAAA,0BAAR,CAAmC6B,KAAA,CAAO,CAAP,CAAnC,CAAL,CACE,KAAM,KAAIvC,SAAJ,CAAc,6BAAd,CAAN,CACF,GAAI,CAAC,GAAIX,OAAQmB,CAAAA,OAAZ,EAAqB+B,KAAA,CAAO,CAAP,CAArB,CAAL,CACE,KAAM,KAAIvC,SAAJ,CAAc,0BAAd,CAAN,CACF,GAAIP,CAAEgB,CAAAA,SAAN,EAAmB,CAAChB,CAAEgB,CAAAA,SAAU2B,CAAAA,MAAZ,CAAmBG,KAAA,CAAO,CAAP,CAAnB,CAApB,CACE,KAAM,KAAIvC,SAAJ,CAAc,oBAAd,CAAN,CACF,GAAIP,CAAEK,CAAAA,MAAN,EAAgB,CAACL,CAAEK,CAAAA,MAAOsC,CAAAA,MAAT,CAAgBG,KAAA,CAAO,CAAP,CAAhB,CAAjB,CACE,KAAM,KAAIvC,SAAJ,CAAc,iBAAd,CAAN,CACIsC,KAAAA,CAAMpD,OAAQ0C,CAAAA,OAAR,CAAgBW,KAAA,CAAO,CAAP,CAAhB,CACZ,IAAkB,CAAlB,CAAI3C,IAAKuC,CAAAA,MAAT,EAAuB,CAACvC,IAAKwC,CAAAA,MAAL,CAAYE,KAAZ,CAAxB,CACE,KAAM,KAAItC,SAAJ,CAAc,eAAd,CAAN;AAbS,CAlCI,CAkDnB,MAAOlB,OAAOmB,CAAAA,MAAP,CAAcmB,CAAd,CAAiB3B,CAAjB,CArHe,CAdyF;",
"sources":["node_modules/bitcoinjs-lib/src/payments/p2pkh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$p2pkh\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2pkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(25)),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG,\n    ]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0]))\n        throw new TypeError('Input has invalid signature');\n      if (!(0, types_1.isPoint)(chunks[1]))\n        throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(chunks[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pkh = p2pkh;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","p2pkh","bcrypto","networks_1","bscript","types_1","lazy","bs58check","OPS","a","opts","address","hash","output","pubkey","input","TypeError","assign","validate","typeforce","network","maybe","String","BufferN","isPoint","signature","isCanonicalScriptSignature","_address","payload","decode","version","readUInt8","slice","_chunks","decompile","bitcoin","o","name","prop","allocUnsafe","writeUInt8","pubKeyHash","copy","encode","hash160","compile","OP_DUP","OP_HASH160","OP_EQUALVERIFY","OP_CHECKSIG","from","length","equals","hash2","pkh","chunks"]
}

{"version":3,"sources":["app/core.cljs"],"mappings":";;;AAQA,uBAAA,vBAAMA;AAAN,AACE,IAAMC,SAAO,6CAAA,7CAACC;AAAd,AACE,wEAAA,WAAAC,nFAACC;AAAD,AAA0B,oCAAAD,7BAACE,sBAAOJ;;;AAClC,iEAAA,AAAAK,0EAAA,2EAAA,/MAACC,0EAASN;;AAEd,2BAAA,3BAAMO,8DAAiBC;AAAvB,AAAA,0FAAA,sDAAA,2CAAA,qDAAA,SAAA,sDAAA,QAAA,6DAAA;AAAA,AAEsB,qCAAA,9BAACJ,sBAAOI;;;AAC9B,gBAAA,hBAAKC;AACL,iCAAA,jCAAMC,0EACHC;AADH,AAEE,IAAMC,IAAE,iBAAAC,WAAMF;IAANE,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAA;;;KAAA;AAAA;;;KAAA;AAAA;;;;AAAA,MAAA,KAAAE,MAAA,CAAA,mEAAAF;;;;IAIFG,IAAE,CAAGP,gBAAKG;IACVK,SAAO,CAAA,MAAMD;IACbE,SAAO,CAAA,OAAMF;AANnB,AAQE,QAAA,0DAAA,2DAAA,4DAAA,1HAAeA,sDAASE,4DAAeD;;AAS3C,AAAA;AAAA,eAAA,iBAAAE,WAAA,8BAAAC,qBAAAC,9FAAOK;AAAP,AAAA,IAAAJ,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;AAAA,AAAA;AAME,IAAAM,aAAwB,sBAAA,2CAAA,qEAAA,MAAA,0DAAA,KAAA,4DAAA,2CAAA,gFAAA,0DAAA,5bAACI,2WAEmC,AAAChC;YAF7D,AAAA6B,4CAAAD,WAAA,IAAA,nEAAOE;gBAAP,AAAAD,4CAAAD,WAAA,IAAA,vEAAaG;AAAb,AAyHG,OAAA,AAAAE,qCAAA,MAAA,iBAAAoB,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,aAAA,AAAAC,yBAAA;AAAA,AAAAD;KAAA,YAAA;AAAA,AAAAD;sJAhH+B,+BAAA,/BAAC1C,jJAgHhC,AAAA,AAAAsB,qCAAA,IAAA,iBAAAuB,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,WAAA,AAAAF;AAAA,AAAAE;KAAA,YAAA;AAAA,AAAAD;yKA3GgC,+BAAA,/BAAC7C,pKA2GjC,mBAAA,AAAA,AAAAsB,qCAAA,IAAA,iBAAAyB,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,WAAA,AAAAJ;AAAA,AAAAI;KAAA,YAAA;AAAA,AAAAD;kLAvG+B,+BAAA,/BAAC/C,7KAuGhC,4BAAA,AAAA,AAAAsB,qCAAA,IAAA,iBAAA2B,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,WAAA,AAAAN;AAAA,AAAAM;KAAA,YAAA;AAAA,AAAAD;6LAnGiC,+BAAA,/BAACjD,xLAmGlC,uCAAA,AAAA,AAAAsB,qCAAA,IAAA,iBAAA6B,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,WAAA,AAAAR;AAAA,AAAAQ;KAAA,YAAA;AAAA,AAAAD;KAjGY,CAAA,iEAAA,mEAAA,kEAAA,gEAAA,kEAAA,iEAAA,+DAAA,6KASyB,+BAAA,/BAACnD,wHACJ,kHAAA,QAAA,xGAAI,AAAA,wFAAUmB,xXAuFhD,AAAA,AAAAG,qCAAA,SAAA,iBAAA+B,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,WAAA,AAAAV,8GAAA,UAAA,AAAAA;AAAA,AAAAU;KAAA,YAAA,wEAAA,UAAA;AArF4B,IAAA/B,WAAWG,fAqFvC;IArF4BF,WAAA;IAAAC,WAA0B,AAACE,cAAI,AAAA,wFAAUR;AAAzC,AAAA,0FAAAI,SAAAC,SAAAC,gCAAAF,SAAAC,SAAAC,tJAACL,0CAAAA,sEAAAA;GAqF7B,cAAA;AApFiC,IAAAQ,WAAWG,fAoF5C;IApFiCF,WAAA,mFAAA,4DAAA;IAAAC,WAAA;AAAA,AAAA,0FAAAF,SAAAC,SAAAC,gCAAAF,SAAAC,SAAAC,tJAACV,0CAAAA,sEAAAA;GAoFlC,aAAA;AAnFgC,IAAAY,WAAWD,fAmF3C;IAnFgCE,WAAA,mFAAA,4DAAA;IAAAC,WAAA;AAAA,AAAA,0FAAAF,SAAAC,SAAAC,gCAAAF,SAAAC,SAAAC,tJAACd,0CAAAA,sEAAAA;;AAmFjC,AAAAiC;iLAhF+B,kHAAA,OAAA,vGAAI,AAAA,wFAAIlC,tRAgFvC,0BAAA,AAAA,AAAAG,qCAAA,MAAA,iBAAAiC,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,UAAA,AAAAZ,2JAAA,YAAA,AAAAA,yBAAA;AAAA,AAAAY;;AAAA,AAAAD;2JA9E6C,+BAAA,/BAACvD,tJA8E9C,AAAA,AAAAsB,qCAAA,SAAA,iBAAAmC,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,WAAA,AAAAd;AAAA,AAAAc;KAAA,YAAA,wBAAA,UAAA;AA5EoC,0GAAA,qEAAA,4CAAA,qEAAA,xRAACtC,0CAAAA,qIAAAA,7FAAUM,iHAAAA,3MA4E/C;;AAAA,AAAA+B;KA3EwB,AAAA,wFAAA,AAAA,uFAAA,AAAA,0FAAItC,+NAIQ,6HAAA,OAAA,lHAAI,AAAA,mGAAIA,1UAuE5C,AAAA,AAAAG,qCAAA,IAAA,iBAAAqC,WAAA,EAAA,YAAA,cAAA,QAAA,iBAAAC,WAAA,EAAA,WAAA,AAAAhB,yBAAA,OAAA,UAAA,AAAAA;AAAA,AAAAgB;;AAAA,AAAAD;2MApEgC,6HAAA,QAAA,nHAAI,AAAA,mGAAIxC,3TAoExC,oDAAA,AAAA,AAAAG,qCAAA,MAAA,iBAAAuC,WAAA,EAAA,QAAA,iBAAAC,WAAA,EAAA,UAAA,AAAAlB;AAAA,AAAAkB;KAAA,YAAA;AAAA,AAAAD;KAjEc,kBAAI,iBAAA1B,WACC,AAAA,wFAAA,AAAA,uFAAA,AAAA,0FAAIhB;IADLiB,eAAA,iFAAA;AAAA,AAAA,QAAAA,6CAAAA,2CAAAD,YAAAC,uBAAAD;sDAiElB,AAAA,AAAAb,qCAAA,IAAA,iBAAAyC,WAAA,EAAA,YAAA,nIAKA,AAAA,AAAAzC,qCAAA,MAAA;AALA,AAAAyC;KAAA,uEAAA,AAAA,AAAAzC,qCAAA,IAAA,iBAAA0C,WAAA,EAAA,YAAA;AAAA,AAAAA;KA5D4B,AAAA,kFAAA,AAAA,uFAAA,AAAA,0FAAI7C,2DA4DhC,AAAA,AAAAG,qCAAA,IAAA,iBAAA2C,WAAA,EAAA,YAAA,nIAKA,AAAA,AAAA3C,qCAAA,MAAA;AALA,AAAA2C;KAAA,6BAAA,AAAA,AAAA3C,qCAAA,IAAA,iBAAA4C,WAAA,EAAA,YAAA;AAAA,AAAAA;gHAvDmB,mBAAA,mFAAA,sIAAA,sIAAA,sIAAA,sIAAA,sIAAA,sIAAA,sIAAA,hhCAAC7B,muCAQW,6MAAA,QAAA,nMAAI,AAAA,wFAAA,AAAA,0FAAIlB,lhDA+CvC,4BAAA,AAAA,AAAAG,qCAAA,MAAA,iBAAA6C,WAAA,EAAA,gqCAAA,QAAA,iBAAAC,WAAA,EAAA,UAAA,AAAAxB;AAAA,AAAAwB;KAAA,YAAA,yBAAA,QAAA;AAAA,AAAAD;;;AA/HL,AAAA,GAAA,AAAArD;AAAA,IAAAC,WAAAN;AAAA,AAAA,CAAA,AAAAM,uBAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOO,AAoFP,gBAAA,hBAAcsB;AAAd,AAEE,IAAMC,OAAK,AAACC,gDAAgB,wBAAA,xBAACC;mBAjElB,AAAA,AAAAnB,kDAAA,rEAiEX,AACE,OAASiB,iDAAQvB","names":["app.core/gen-address","result","cljs.core.atom","p1__37425#","js/module$node_modules$bitcoin_address_generator$index.createWalletAddress","cljs.core/reset!","cljs.core/deref","cljs.core.js__GT_clj","app.core/reset-component","seconds","app.core/base","app.core/responsive-font-siexe","size","s","G__37426","cljs.core/Keyword","js/Error","v","pt-min","pt-max","G__37428","props__34477__auto__","maybe-ref__34478__auto__","vec__37429","helix.core/extract-cljs-props","goog/DEBUG","G__37498","app.core/app","vec__37432","cljs.core.nth","state","set-state","helix.hooks/use-state","helix.core/get-react","G__37459","G__37460","G__37461","cljs.core/assoc","cljs.core/not","G__37462","G__37463","G__37464","cljs.core/assoc-in","G__37465","G__37466","G__37467","G__37485","fexpr__37484","cljs.core/rand-nth","app.core/init","root","js/module$node_modules$react_dom$client.createRoot","js/document.getElementById","obj37436","obj37438","helix.impl.props/->js","obj37440","obj37442","obj37444","obj37446","obj37448","obj37450","obj37452","obj37454","obj37456","obj37458","obj37469","obj37471","obj37473","obj37475","obj37477","obj37479","obj37481","obj37483","obj37487","obj37489","obj37491","obj37493","obj37495","obj37497"],"sourcesContent":["(ns app.core\n  (:require\n   [\"bitcoin-address-generator\" :as gen]\n   [helix.core :refer [defnc $]]\n   [helix.hooks :as hooks]\n   [helix.dom :as d]\n   [\"react-dom/client\" :as rdom]))\n\n(defn gen-address []\n  (let [result (atom [])]\n    (gen/createWalletAddress #(reset! result %))\n    (js->clj @result :keywordize-keys true)))\n\n(defn reset-component [seconds]\n  [:input {:type \"button\" :value \"Reset\"\n           :on-click #(reset! seconds 60)}])\n(def base 1.9)\n(defn responsive-font-siexe\n  [size]\n  (let [s (case size\n               :h1 3\n               :h2 1.5\n               :base 1)\n        v (* base s)\n        pt-min (* 6  v)\n        pt-max (* 32 v)\n        ]\n    (str \"max(min(\"v \"vh, \" pt-max \"px), \" pt-min \"px)\")\n    #_    (str v \"vh\")\n)\n)\n\n\n\n\n\n(defnc app []\n  ;; run npx tailwindcss -i ./resources/global.css -o\n  ;; ./resources/public/css/output.css --watch at lottery root to\n  ;; render css.\n  ;; \n\n  (let [[state set-state] (hooks/use-state {:display-win? false\n                                            :display  true\n                                            :current {:result (gen-address)\n                                                      :display false}})]\n\n   \n    (d/div {:style {:font-family \"Helvetica, Helvetica Neue, Roboto, sans-serif;\"}\n            :class-name \"mb-10 mx-5 sm:mx-10 md:mx-16 lg:mx-20 xl:mx-64 grid\"}\n\n           (d/p {:style {:font-size (responsive-font-siexe :base)}\n\n                 :class-name \"pt-3 text-center lg:lg\"}\n                \"IRRATIONAL HOPE\")\n\n           (d/p {:style {:font-size  (responsive-font-siexe :h1)}\n                 :class-name \"text-center\"}\n                \"Is Today Your Lucky Day?\")\n\n           (d/p {:style {:font-size (responsive-font-siexe :h2)}\n                 :class-name \"py-12 text-center\"}\n                \"1/2+ Billion Dollar Lottery (Free)!\")\n\n           (d/p  {:style {:font-size  (responsive-font-siexe :base)}\n                  :class-name \"pb-12\"}\n                 (str \"Wallet 967 has been inactive since July 25th, 2010, and holds \"\n                      \"a balance of 31,000 BTC, more than half a billion dollars. It's \"\n                      \"likely that the owner of this early wallet has lost the access \"\n                      \"information, like many others. By clicking the button below, \"\n                      \"we'll generate a random key for the account. The chances of it \"\n                      \"being the right one are incredibly slim, at one in 2^256, but \"\n                      \"who knows, maybe today's your lucky day! Give it a shot and \"\n                      \"find out:\"))\n\n           (d/button {:style {:font-size  (responsive-font-siexe :base)\n                              :display (if (:display state) \"block\" \"none\")}\n                      :class-name \"bg-blue-500 hover:bg-orange-700 text-white font-bold p-2 rounded-full\"\n                      :on-click #(set-state assoc :display (not (:display state)))\n                      :on-mouse-over #(set-state assoc-in [:current :display] true)\n                      :on-mouse-out #(set-state assoc-in [:current :display] false)}\n                     \"Are you feeling lucky?\")\n\n           (d/div {:style {:display (if (-> state :display) \"none\" \"grid\")\n                           :class-name \"text-center\"}}\n                  (d/button  {:style {:font-size  (responsive-font-siexe :base)}\n                              :class-name \"text-center p10 block\"\n                              :on-click #(set-state assoc :display-win? true)}\n                             (-> state :current :result :address))\n\n                  (d/p {:class-name \"text-center\"\n                        :style {:font-size \"4vw\"\n                                :display (if (-> state :display-win?) \"none\" \"block\")}}\n                       \"Click on the key \u261d to find out if you won!\"))\n\n           (d/div  {:style {:display (if (-> state :display-win?) \"block\" \"none\")}\n                    :class-name \"text-center text-4xl p10\"}\n\n                   (if (#{#_(-> state :current :result :address) \"12ib7dApVFvg82TXKycWBNpN8kFyiAN1dr\"}\n                        (-> state :current :result :address))\n                     (d/div (d/p {:class-name \"border-3 text-green-500 pt-10\"}\n                                 \"WOOOOOOOO! Fucking hell! You won it! Take note of your private key:\")\n                            (d/p {:class-name \"text-sm p-10\"}\n                                 (-> state :current :result :key)))\n\n                     (d/div (d/p {:class-name \"pt-10 text-blue-500\"} \"Nope! Sorry, not today...\")\n                            (d/p {:class-name \"text-base\"} \"Try again tomorrow...\"))))\n\n           (d/img {:src (rand-nth [\"https://media3.giphy.com/media/GhU3C9uMON5X8OLx2G/giphy.gif?cid=ecf05e47nlyjmfa9s1ljn8hxw418dmq4jik7uoku8575fexu&rid=giphy.gif&ct=g\"\n                                   \"https://media2.giphy.com/media/1AHZBEKJx5Mf57NQqb/giphy.gif?cid=ecf05e47j9pmfgook4yf3cdztme3eake5fxo3tpf8x60cdb7&rid=giphy.gif&ct=g\"\n                                   \"https://media0.giphy.com/media/30VBSGB7QW1RJpNcHO/giphy.gif?cid=ecf05e47j9pmfgook4yf3cdztme3eake5fxo3tpf8x60cdb7&rid=giphy.gif&ct=g\"\n                                   \"https://media0.giphy.com/media/30VBSGB7QW1RJpNcHO/giphy.gif?cid=ecf05e47j9pmfgook4yf3cdztme3eake5fxo3tpf8x60cdb7&rid=giphy.gif&ct=g\"\n                                   \"https://media0.giphy.com/media/30VBSGB7QW1RJpNcHO/giphy.gif?cid=ecf05e47j9pmfgook4yf3cdztme3eake5fxo3tpf8x60cdb7&rid=giphy.gif&ct=g\"\n                                   \"https://media0.giphy.com/media/287U9qQH5vrKg7KYSH/giphy.gif?cid=ecf05e471h2jyvklk295f15umw86g1atvvymxeztii830oo4&rid=giphy.gif&ct=g\"\n                                   \"https://media0.giphy.com/media/CayH3P0wRYbjPudd3J/giphy.gif?cid=ecf05e471h2jyvklk295f15umw86g1atvvymxeztii830oo4&rid=giphy.gif&ct=g\"\n                                   \"https://media3.giphy.com/media/uqPDIEPMODKne/giphy.gif?cid=ecf05e47t9woh5p3i50y2r3z5o07xf6iepzfodluqeamybuk&rid=giphy.gif&ct=g\"])\n                   :style {:display (if (-> state :current :display) \"block\" \"none\")}\n                   :class-name \"place-self-center pt-8\"\n                   :width \"150\"}))))\n\n(defn ^export init\n  []\n  (let [root (rdom/createRoot (js/document.getElementById \"app\"))]\n    (.render root ($ app))))\n"]}
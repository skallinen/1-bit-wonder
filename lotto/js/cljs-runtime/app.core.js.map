{"version":3,"sources":["app/core.cljs"],"mappings":"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","names":["app.core/gen-address","result","cljs.core.atom","p1__49825#","js/module$node_modules$bitcoin_address_generator$index.createWalletAddress","cljs.core/reset!","cljs.core/deref","cljs.core.js__GT_clj","cljs.core._EQ_","app.core/reset-component","seconds","G__49827","props__34848__auto__","maybe-ref__34849__auto__","vec__49828","helix.core/extract-cljs-props","goog/DEBUG","G__49893","app.core/app","vec__49831","cljs.core.nth","state","set-state","helix.hooks/use-state","G__49854","G__49855","G__49856","cljs.core/assoc","cljs.core/not","G__49857","G__49858","G__49859","cljs.core/assoc-in","G__49860","G__49861","G__49862","helix.core/get-react","G__49880","fexpr__49879","app.core/init","root","js/module$node_modules$react_dom$client.createRoot","js/document.getElementById","obj49835","obj49837","helix.impl.props/->js","obj49839","obj49841","obj49843","obj49845","obj49847","obj49849","obj49851","obj49853","obj49864","obj49866","obj49868","obj49870","obj49872","obj49874","obj49876","obj49878","obj49882","obj49884","obj49886","obj49888","obj49890","obj49892"],"sourcesContent":["(ns app.core\n  (:require\n            [\"bitcoin-address-generator\" :as gen]\n            [helix.core :refer [defnc $]]\n            [helix.hooks :as hooks]\n            [helix.dom :as d]\n            [\"react-dom/client\" :as rdom]))\n\n(defn gen-address []\n  (let [result (atom [])]\n    (gen/createWalletAddress #(reset! result %))\n    (js->clj @result :keywordize-keys true)))\n\n(-> \n (gen-address)\n :address\n (= \"12ib7dApVFvg82TXKycWBNpN8kFyiAN1dr\"))\n\n(defn reset-component [seconds]\n  [:input {:type \"button\" :value \"Reset\"\n           :on-click #(reset! seconds 60)}])\n\n\n\n\n(defnc app []\n  (let [[state set-state] (hooks/use-state {:display-win? false\n                                            :display  true\n                                            :current {:result (gen-address)\n                                                      :display false}})]\n    (d/div {:style {:display \"grid\"\n                    :grid-template-columns \"10% 80% 10%\"}\n            :class-name \"pb-10\"}\n\n           (d/p {:style {:grid-column \"2\"\n                         :font-size \"6vh\"}\n                 :class-name \"text-center\"} \"Is Today Your Lucky Day?\")\n           (d/p {:style {:grid-column \"2\"\n                         :font-size \"4vh\"}\n                 :class-name \"text-6xl py-16 text-center\"} \"1/2+ Billion Dollar Lottery (Free)!\")\n           (d/p  {:style {:grid-column \"2\"}\n                  :class-name \"pb-16\"} \"Wallet 967 has been inactive since July 25th, 2010, and holds a balance of 31,000 BTC, more than half a billion dollars. It's likely that the owner of this early wallet has lost access information, like many others. By clicking the button below, we'll generate a random key for the account. The chances of it being the right one are incredibly slim, at one in 2^256, but who knows, maybe today's your lucky day! Give it a shot and find out:\")\n           (d/button {:style {:grid-column \"2\"\n                              :display (if (:display state) \"block\" \"none\")}\n                      :class-name \"bg-blue-500 hover:bg-orange-700 text-white font-bold p-2 rounded-full\"\n                      :on-click #(set-state assoc :display (not (:display state)))\n                      :on-mouse-over #(set-state assoc-in [:current :display] true)\n                      :on-mouse-out #(set-state assoc-in [:current :display] false)}\n\n                     \"Are you feeling lucky?\")\n           (d/div {:style {:grid-column \"2\"\n                           :display (if (-> state :display) \"none\" \"block\")\n                           :class-name \"text-center\"}\n                   }\n\n                  (d/button  {:style {:font-size \"4vw\"}\n                              :class-name \"text-center p10\"\n                              :on-click #(set-state assoc :display-win? true)}\n                             (-> state :current :result :address))\n                  (d/p {:class-name \"text-center\"\n                        :style {:grid-column \"2\"\n                            :display (if (-> state :display-win?) \"none\" \"block\")}\n                        } \"Klick on the key \u261d cento find out if you won!\"))\n\n           (d/div  {:style {:grid-column \"2\"\n                            :display (if (-> state :display-win?) \"block\" \"none\")}\n                    :class-name \"text-center text-4xl p10\"}\n                   \n                   (if (#{#_(-> state :current :result :address) \"12ib7dApVFvg82TXKycWBNpN8kFyiAN1dr\"}\n                        (-> state :current :result :address))\n                     (d/div (d/p {:class-name \"border-3 text-green-500 pt-10\"} \"WOOOOOOOO! Fucking hell! You won it! Take note of your private key:\")\n                            (d/p {:class-name \"text-sm p-10\"} (-> state :current :result :key)))\n                     (d/div (d/p {:class-name \"pt-10 text-blue-500\"} \"Nope! Sorry, not today...\")\n                            (d/p {:class-name \"text-base\"} \"Try again tomorrow..\")\n                            )))\n\n           (d/img {:src \"https://media3.giphy.com/media/GhU3C9uMON5X8OLx2G/giphy.gif?cid=ecf05e47nlyjmfa9s1ljn8hxw418dmq4jik7uoku8575fexu&rid=giphy.gif&ct=g\"\n                   :style {:grid-column \"2\" :display (if (-> state :current :display) \"block\" \"none\")}\n                   :class-name \"place-self-center pt-8\"\n                   :width \"150\"})\n           ))\n  )\n\n\n\n  (defn ^export init\n    []\n    (let [root (rdom/createRoot (js/document.getElementById \"app\"))]\n      (.render root ($ app)))\n    #_  (set!\n         (.-innerHTML (.getElementById js/document \"app\"))\n         \"<ol><li>html daaaata</li></ol>\")\n\n\n\n    )\n\n\n \n"]}
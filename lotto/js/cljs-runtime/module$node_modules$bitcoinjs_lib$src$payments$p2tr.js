shadow$provide.module$node_modules$bitcoinjs_lib$src$payments$p2tr=function(global,require,module,exports){function stacksEqual(a,b){return a.length!==b.length?!1:a.every((x,i)=>x.equals(b[i]))}Object.defineProperty(exports,"__esModule",{value:!0});exports.p2tr=void 0;const buffer_1=require("module$node_modules$buffer$index"),networks_1=require("module$node_modules$bitcoinjs_lib$src$networks"),bscript=require("module$node_modules$bitcoinjs_lib$src$script"),types_1=require("module$node_modules$bitcoinjs_lib$src$types"),
ecc_lib_1=require("module$node_modules$bitcoinjs_lib$src$ecc_lib"),bip341_1=require("module$node_modules$bitcoinjs_lib$src$payments$bip341"),lazy=require("module$node_modules$bitcoinjs_lib$src$payments$lazy"),bech32_1=require("module$node_modules$bech32$dist$index"),OPS=bscript.OPS;exports.p2tr=function(a,opts){if(!(a.address||a.output||a.pubkey||a.internalPubkey||a.witness&&1<a.witness.length))throw new TypeError("Not enough data");opts=Object.assign({validate:!0},opts||{});(0,types_1.typeforce)({address:types_1.typeforce.maybe(types_1.typeforce.String),
input:types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),network:types_1.typeforce.maybe(types_1.typeforce.Object),output:types_1.typeforce.maybe(types_1.typeforce.BufferN(34)),internalPubkey:types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),hash:types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),pubkey:types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),signature:types_1.typeforce.maybe(types_1.typeforce.BufferN(64)),witness:types_1.typeforce.maybe(types_1.typeforce.arrayOf(types_1.typeforce.Buffer)),
scriptTree:types_1.typeforce.maybe(types_1.isTaptree),redeem:types_1.typeforce.maybe({output:types_1.typeforce.maybe(types_1.typeforce.Buffer),redeemVersion:types_1.typeforce.maybe(types_1.typeforce.Number),witness:types_1.typeforce.maybe(types_1.typeforce.arrayOf(types_1.typeforce.Buffer))}),redeemVersion:types_1.typeforce.maybe(types_1.typeforce.Number)},a);const _address=lazy.value(()=>{const result=bech32_1.bech32m.decode(a.address),version=result.words.shift(),data=bech32_1.bech32m.fromWords(result.words);
return{version,prefix:result.prefix,data:buffer_1.Buffer.from(data)}}),_witness=lazy.value(()=>{if(a.witness&&a.witness.length)return 2<=a.witness.length&&80===a.witness[a.witness.length-1][0]?a.witness.slice(0,-1):a.witness.slice()}),_hashTree=lazy.value(()=>{if(a.scriptTree)return(0,bip341_1.toHashTree)(a.scriptTree);if(a.hash)return{hash:a.hash}}),network=a.network||networks_1.bitcoin,o={name:"p2tr",network};lazy.prop(o,"address",()=>{if(o.pubkey){var words=bech32_1.bech32m.toWords(o.pubkey);words.unshift(1);
return bech32_1.bech32m.encode(network.bech32,words)}});lazy.prop(o,"hash",()=>{var hashTree=_hashTree();if(hashTree)return hashTree.hash;var w=_witness();return w&&1<w.length?(hashTree=w[w.length-1],w=(0,bip341_1.tapleafHash)({output:w[w.length-2],version:hashTree[0]&types_1.TAPLEAF_VERSION_MASK}),(0,bip341_1.rootHashFromPath)(hashTree,w)):null});lazy.prop(o,"output",()=>{if(o.pubkey)return bscript.compile([OPS.OP_1,o.pubkey])});lazy.prop(o,"redeemVersion",()=>a.redeemVersion?a.redeemVersion:a.redeem&&
void 0!==a.redeem.redeemVersion&&null!==a.redeem.redeemVersion?a.redeem.redeemVersion:bip341_1.LEAF_VERSION_TAPSCRIPT);lazy.prop(o,"redeem",()=>{const witness=_witness();if(witness&&!(2>witness.length))return{output:witness[witness.length-2],witness:witness.slice(0,-2),redeemVersion:witness[witness.length-1][0]&types_1.TAPLEAF_VERSION_MASK}});lazy.prop(o,"pubkey",()=>{if(a.pubkey)return a.pubkey;if(a.output)return a.output.slice(2);if(a.address)return _address().data;if(o.internalPubkey){const tweakedKey=
(0,bip341_1.tweakKey)(o.internalPubkey,o.hash);if(tweakedKey)return tweakedKey.x}});lazy.prop(o,"internalPubkey",()=>{if(a.internalPubkey)return a.internalPubkey;const witness=_witness();if(witness&&1<witness.length)return witness[witness.length-1].slice(1,33)});lazy.prop(o,"signature",()=>{if(a.signature)return a.signature;const witness=_witness();if(witness&&1===witness.length)return witness[0]});lazy.prop(o,"witness",()=>{if(a.witness)return a.witness;var hashTree=_hashTree();if(hashTree&&a.redeem&&
a.redeem.output&&a.internalPubkey){var leafHash=(0,bip341_1.tapleafHash)({output:a.redeem.output,version:o.redeemVersion});leafHash=(0,bip341_1.findScriptPath)(hashTree,leafHash);if(!leafHash)return;hashTree=(0,bip341_1.tweakKey)(a.internalPubkey,hashTree.hash);if(!hashTree)return;hashTree=buffer_1.Buffer.concat([buffer_1.Buffer.from([o.redeemVersion|hashTree.parity]),a.internalPubkey].concat(leafHash));return[a.redeem.output,hashTree]}if(a.signature)return[a.signature]});if(opts.validate){opts=buffer_1.Buffer.from([]);
if(a.address){if(network&&network.bech32!==_address().prefix)throw new TypeError("Invalid prefix or Network mismatch");if(1!==_address().version)throw new TypeError("Invalid address version");if(32!==_address().data.length)throw new TypeError("Invalid address data");opts=_address().data}if(a.pubkey){if(0<opts.length&&!opts.equals(a.pubkey))throw new TypeError("Pubkey mismatch");opts=a.pubkey}if(a.output){if(34!==a.output.length||a.output[0]!==OPS.OP_1||32!==a.output[1])throw new TypeError("Output is invalid");
if(0<opts.length&&!opts.equals(a.output.slice(2)))throw new TypeError("Pubkey mismatch");opts=a.output.slice(2)}if(a.internalPubkey){var tweakedKey$jscomp$0=(0,bip341_1.tweakKey)(a.internalPubkey,o.hash);if(0<opts.length&&!opts.equals(tweakedKey$jscomp$0.x))throw new TypeError("Pubkey mismatch");opts=tweakedKey$jscomp$0.x}if(opts&&opts.length&&!(0,ecc_lib_1.getEccLib)().isXOnlyPoint(opts))throw new TypeError("Invalid pubkey for p2tr");tweakedKey$jscomp$0=_hashTree();if(a.hash&&tweakedKey$jscomp$0&&
!a.hash.equals(tweakedKey$jscomp$0.hash))throw new TypeError("Hash mismatch");if(a.redeem&&a.redeem.output&&tweakedKey$jscomp$0){var leafHash$jscomp$0=(0,bip341_1.tapleafHash)({output:a.redeem.output,version:o.redeemVersion});if(!(0,bip341_1.findScriptPath)(tweakedKey$jscomp$0,leafHash$jscomp$0))throw new TypeError("Redeem script not in tree");}var witness$jscomp$0=_witness();if(a.redeem&&o.redeem){if(a.redeem.redeemVersion&&a.redeem.redeemVersion!==o.redeem.redeemVersion)throw new TypeError("Redeem.redeemVersion and witness mismatch");
if(a.redeem.output){if(0===bscript.decompile(a.redeem.output).length)throw new TypeError("Redeem.output is invalid");if(o.redeem.output&&!a.redeem.output.equals(o.redeem.output))throw new TypeError("Redeem.output and witness mismatch");}if(a.redeem.witness&&o.redeem.witness&&!stacksEqual(a.redeem.witness,o.redeem.witness))throw new TypeError("Redeem.witness and witness mismatch");}if(witness$jscomp$0&&witness$jscomp$0.length)if(1===witness$jscomp$0.length){if(a.signature&&!a.signature.equals(witness$jscomp$0[0]))throw new TypeError("Signature mismatch");
}else{tweakedKey$jscomp$0=witness$jscomp$0[witness$jscomp$0.length-1];if(33>tweakedKey$jscomp$0.length)throw new TypeError(`The control-block length is too small. Got ${tweakedKey$jscomp$0.length}, expected min 33.`);if(0!==(tweakedKey$jscomp$0.length-33)%32)throw new TypeError(`The control-block length of ${tweakedKey$jscomp$0.length} is incorrect!`);leafHash$jscomp$0=(tweakedKey$jscomp$0.length-33)/32;if(128<leafHash$jscomp$0)throw new TypeError(`The script path is too long. Got ${leafHash$jscomp$0}, expected max 128.`);
leafHash$jscomp$0=tweakedKey$jscomp$0.slice(1,33);if(a.internalPubkey&&!a.internalPubkey.equals(leafHash$jscomp$0))throw new TypeError("Internal pubkey mismatch");if(!(0,ecc_lib_1.getEccLib)().isXOnlyPoint(leafHash$jscomp$0))throw new TypeError("Invalid internalPubkey for p2tr witness");witness$jscomp$0=(0,bip341_1.tapleafHash)({output:witness$jscomp$0[witness$jscomp$0.length-2],version:tweakedKey$jscomp$0[0]&types_1.TAPLEAF_VERSION_MASK});witness$jscomp$0=(0,bip341_1.rootHashFromPath)(tweakedKey$jscomp$0,
witness$jscomp$0);leafHash$jscomp$0=(0,bip341_1.tweakKey)(leafHash$jscomp$0,witness$jscomp$0);if(!leafHash$jscomp$0)throw new TypeError("Invalid outputKey for p2tr witness");if(opts.length&&!opts.equals(leafHash$jscomp$0.x))throw new TypeError("Pubkey mismatch for p2tr witness");if(leafHash$jscomp$0.parity!==(tweakedKey$jscomp$0[0]&1))throw Error("Incorrect parity");}}return Object.assign(o,a)}}
//# sourceMappingURL=module$node_modules$bitcoinjs_lib$src$payments$p2tr.js.map

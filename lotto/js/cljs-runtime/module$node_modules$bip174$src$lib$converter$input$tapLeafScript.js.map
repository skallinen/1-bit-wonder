{
"version":3,
"file":"module$node_modules$bip174$src$lib$converter$input$tapLeafScript.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/bip174/src/lib/converter/input/tapLeafScript.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip174$src$lib$converter$input$tapLeafScript\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.TAP_LEAF_SCRIPT) {\n    throw new Error(\n      'Decode Error: could not decode tapLeafScript with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if ((keyVal.key.length - 2) % 32 !== 0) {\n    throw new Error(\n      'Decode Error: tapLeafScript has invalid control block in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const leafVersion = keyVal.value[keyVal.value.length - 1];\n  if ((keyVal.key[1] & 0xfe) !== leafVersion) {\n    throw new Error(\n      'Decode Error: tapLeafScript bad leaf version in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const script = keyVal.value.slice(0, -1);\n  const controlBlock = keyVal.key.slice(1);\n  return { controlBlock, script, leafVersion };\n}\nexports.decode = decode;\nfunction encode(tScript) {\n  const head = Buffer.from([typeFields_1.InputTypes.TAP_LEAF_SCRIPT]);\n  const verBuf = Buffer.from([tScript.leafVersion]);\n  return {\n    key: Buffer.concat([head, tScript.controlBlock]),\n    value: Buffer.concat([tScript.script, verBuf]),\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ controlBlock: Buffer; leafVersion: number, script: Buffer; }';\nfunction check(data) {\n  return (\n    Buffer.isBuffer(data.controlBlock) &&\n    (data.controlBlock.length - 1) % 32 === 0 &&\n    (data.controlBlock[0] & 0xfe) === data.leafVersion &&\n    Buffer.isBuffer(data.script)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.controlBlock.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => v.controlBlock.equals(item.controlBlock)).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","typeFields_1","decode","keyVal","key","InputTypes","TAP_LEAF_SCRIPT","Error","toString","length","leafVersion","script","slice","controlBlock","encode","tScript","head","from","verBuf","concat","expected","check","data","isBuffer","canAddToArray","array","item","dupeSet","dupeString","has","add","filter","v","equals"]
}

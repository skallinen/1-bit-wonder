shadow$provide.module$node_modules$bip174$src$lib$combiner$index=function(global,require,module,exports){function keyPusher(selfSet,selfKeyVals,otherKeyVals){return key=>{if(!selfSet.has(key)){var newKv=otherKeyVals.filter(kv=>kv.key.toString("hex")===key)[0];selfKeyVals.push(newKv);selfSet.add(key)}}}function getKeySet(keyVals){const set=new Set;keyVals.forEach(keyVal=>{keyVal=keyVal.key.toString("hex");if(set.has(keyVal))throw Error("Combine: KeyValue Map keys should be unique");set.add(keyVal)});
return set}Object.defineProperty(exports,"__esModule",{value:!0});const parser_1=require("module$node_modules$bip174$src$lib$parser$index");exports.combine=function(psbts){var self=psbts[0];const selfKeyVals=parser_1.psbtToKeyVals(self);psbts=psbts.slice(1);if(0===psbts.length)throw Error("Combine: Nothing to combine");self=self.globalMap.unsignedTx;if(void 0===self)throw Error("Combine: Self missing transaction");const selfGlobalSet=getKeySet(selfKeyVals.globalKeyVals),selfInputSets=selfKeyVals.inputKeyVals.map(getKeySet),
selfOutputSets=selfKeyVals.outputKeyVals.map(getKeySet);for(const other of psbts){psbts=other.globalMap.unsignedTx;if(void 0===psbts||!psbts.toBuffer().equals(self.toBuffer()))throw Error("Combine: One of the Psbts does not have the same transaction.");const otherKeyVals=parser_1.psbtToKeyVals(other);getKeySet(otherKeyVals.globalKeyVals).forEach(keyPusher(selfGlobalSet,selfKeyVals.globalKeyVals,otherKeyVals.globalKeyVals));otherKeyVals.inputKeyVals.map(getKeySet).forEach((inputSet,idx)=>inputSet.forEach(keyPusher(selfInputSets[idx],
selfKeyVals.inputKeyVals[idx],otherKeyVals.inputKeyVals[idx])));otherKeyVals.outputKeyVals.map(getKeySet).forEach((outputSet,idx)=>outputSet.forEach(keyPusher(selfOutputSets[idx],selfKeyVals.outputKeyVals[idx],otherKeyVals.outputKeyVals[idx])))}return parser_1.psbtFromKeyVals(self,{globalMapKeyVals:selfKeyVals.globalKeyVals,inputKeyVals:selfKeyVals.inputKeyVals,outputKeyVals:selfKeyVals.outputKeyVals})}}
//# sourceMappingURL=module$node_modules$bip174$src$lib$combiner$index.js.map

{
"version":3,
"file":"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$payments$p2wpkh.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/bitcoin-address-generator/node_modules/bitcoinjs-lib/src/payments/p2wpkh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$payments$p2wpkh\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\nconst ecc = require('tiny-secp256k1')\n\nconst bcrypto = require('../crypto')\nconst bech32 = require('bech32')\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\n\nconst EMPTY_BUFFER = Buffer.alloc(0)\n\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\nfunction p2wpkh (a, opts) {\n  if (\n    !a.address &&\n    !a.hash &&\n    !a.output &&\n    !a.pubkey &&\n    !a.witness\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  typef({\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    input: typef.maybe(typef.BufferN(0)),\n    network: typef.maybe(typef.Object),\n    output: typef.maybe(typef.BufferN(22)),\n    pubkey: typef.maybe(ecc.isPoint),\n    signature: typef.maybe(bscript.isCanonicalScriptSignature),\n    witness: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a)\n\n  const _address = lazy.value(function () {\n    const result = bech32.decode(a.address)\n    const version = result.words.shift()\n    const data = bech32.fromWords(result.words)\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data)\n    }\n  })\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  lazy.prop(o, 'address', function () {\n    if (!o.hash) return\n\n    const words = bech32.toWords(o.hash)\n    words.unshift(0x00)\n    return bech32.encode(network.bech32, words)\n  })\n  lazy.prop(o, 'hash', function () {\n    if (a.output) return a.output.slice(2, 22)\n    if (a.address) return _address().data\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey)\n  })\n  lazy.prop(o, 'output', function () {\n    if (!o.hash) return\n    return bscript.compile([\n      OPS.OP_0,\n      o.hash\n    ])\n  })\n  lazy.prop(o, 'pubkey', function () {\n    if (a.pubkey) return a.pubkey\n    if (!a.witness) return\n    return a.witness[1]\n  })\n  lazy.prop(o, 'signature', function () {\n    if (!a.witness) return\n    return a.witness[0]\n  })\n  lazy.prop(o, 'input', function () {\n    if (!o.witness) return\n    return EMPTY_BUFFER\n  })\n  lazy.prop(o, 'witness', function () {\n    if (!a.pubkey) return\n    if (!a.signature) return\n    return [a.signature, a.pubkey]\n  })\n\n  // extended validation\n  if (opts.validate) {\n    let hash\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix) throw new TypeError('Invalid prefix or Network mismatch')\n      if (_address().version !== 0x00) throw new TypeError('Invalid address version')\n      if (_address().data.length !== 20) throw new TypeError('Invalid address data')\n      hash = _address().data\n    }\n\n    if (a.hash) {\n      if (hash && !hash.equals(a.hash)) throw new TypeError('Hash mismatch')\n      else hash = a.hash\n    }\n\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14) throw new TypeError('Output is invalid')\n      if (hash && !hash.equals(a.output.slice(2))) throw new TypeError('Hash mismatch')\n      else hash = a.output.slice(2)\n    }\n\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey)\n      if (hash && !hash.equals(pkh)) throw new TypeError('Hash mismatch')\n      else hash = pkh\n    }\n\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid')\n      if (!bscript.isCanonicalScriptSignature(a.witness[0])) throw new TypeError('Witness has invalid signature')\n      if (!ecc.isPoint(a.witness[1])) throw new TypeError('Witness has invalid pubkey')\n\n      if (a.signature && !a.signature.equals(a.witness[0])) throw new TypeError('Signature mismatch')\n      if (a.pubkey && !a.pubkey.equals(a.witness[1])) throw new TypeError('Pubkey mismatch')\n\n      const pkh = bcrypto.hash160(a.witness[1])\n      if (hash && !hash.equals(pkh)) throw new TypeError('Hash mismatch')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2wpkh\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","lazy","typef","OPS","ecc","bcrypto","bech32","bscript","BITCOIN_NETWORK","bitcoin","EMPTY_BUFFER","alloc","p2wpkh","a","opts","address","hash","output","pubkey","witness","TypeError","Object","assign","validate","maybe","String","BufferN","input","network","isPoint","signature","isCanonicalScriptSignature","arrayOf","_address","value","result","decode","version","words","shift","data","fromWords","prefix","from","o","prop","toWords","unshift","encode","slice","hash160","compile","OP_0","length","equals","pkh"]
}

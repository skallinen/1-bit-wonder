{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$psbt$psbtutils.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/psbt/psbtutils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$psbt$psbtutils\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.signatureBlocksAction =\n  exports.checkInputForSig =\n  exports.pubkeyInScript =\n  exports.pubkeyPositionInScript =\n  exports.witnessStackToScriptWitness =\n  exports.isP2TR =\n  exports.isP2SHScript =\n  exports.isP2WSHScript =\n  exports.isP2WPKH =\n  exports.isP2PKH =\n  exports.isP2PK =\n  exports.isP2MS =\n    void 0;\nconst varuint = require('bip174/src/lib/converter/varint');\nconst bscript = require('../script');\nconst transaction_1 = require('../transaction');\nconst crypto_1 = require('../crypto');\nconst payments = require('../payments');\nfunction isPaymentFactory(payment) {\n  return script => {\n    try {\n      payment({ output: script });\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n}\nexports.isP2MS = isPaymentFactory(payments.p2ms);\nexports.isP2PK = isPaymentFactory(payments.p2pk);\nexports.isP2PKH = isPaymentFactory(payments.p2pkh);\nexports.isP2WPKH = isPaymentFactory(payments.p2wpkh);\nexports.isP2WSHScript = isPaymentFactory(payments.p2wsh);\nexports.isP2SHScript = isPaymentFactory(payments.p2sh);\nexports.isP2TR = isPaymentFactory(payments.p2tr);\nfunction witnessStackToScriptWitness(witness) {\n  let buffer = Buffer.allocUnsafe(0);\n  function writeSlice(slice) {\n    buffer = Buffer.concat([buffer, Buffer.from(slice)]);\n  }\n  function writeVarInt(i) {\n    const currentLen = buffer.length;\n    const varintLen = varuint.encodingLength(i);\n    buffer = Buffer.concat([buffer, Buffer.allocUnsafe(varintLen)]);\n    varuint.encode(i, buffer, currentLen);\n  }\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n  writeVector(witness);\n  return buffer;\n}\nexports.witnessStackToScriptWitness = witnessStackToScriptWitness;\nfunction pubkeyPositionInScript(pubkey, script) {\n  const pubkeyHash = (0, crypto_1.hash160)(pubkey);\n  const pubkeyXOnly = pubkey.slice(1, 33); // slice before calling?\n  const decompiled = bscript.decompile(script);\n  if (decompiled === null) throw new Error('Unknown script error');\n  return decompiled.findIndex(element => {\n    if (typeof element === 'number') return false;\n    return (\n      element.equals(pubkey) ||\n      element.equals(pubkeyHash) ||\n      element.equals(pubkeyXOnly)\n    );\n  });\n}\nexports.pubkeyPositionInScript = pubkeyPositionInScript;\nfunction pubkeyInScript(pubkey, script) {\n  return pubkeyPositionInScript(pubkey, script) !== -1;\n}\nexports.pubkeyInScript = pubkeyInScript;\nfunction checkInputForSig(input, action) {\n  const pSigs = extractPartialSigs(input);\n  return pSigs.some(pSig =>\n    signatureBlocksAction(pSig, bscript.signature.decode, action),\n  );\n}\nexports.checkInputForSig = checkInputForSig;\nfunction signatureBlocksAction(signature, signatureDecodeFn, action) {\n  const { hashType } = signatureDecodeFn(signature);\n  const whitelist = [];\n  const isAnyoneCanPay =\n    hashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY;\n  if (isAnyoneCanPay) whitelist.push('addInput');\n  const hashMod = hashType & 0x1f;\n  switch (hashMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n    case transaction_1.Transaction.SIGHASH_NONE:\n      whitelist.push('addOutput');\n      whitelist.push('setInputSequence');\n      break;\n  }\n  if (whitelist.indexOf(action) === -1) {\n    return true;\n  }\n  return false;\n}\nexports.signatureBlocksAction = signatureBlocksAction;\nfunction extractPartialSigs(input) {\n  let pSigs = [];\n  if ((input.partialSig || []).length === 0) {\n    if (!input.finalScriptSig && !input.finalScriptWitness) return [];\n    pSigs = getPsigsFromInputFinalScripts(input);\n  } else {\n    pSigs = input.partialSig;\n  }\n  return pSigs.map(p => p.signature);\n}\nfunction getPsigsFromInputFinalScripts(input) {\n  const scriptItems = !input.finalScriptSig\n    ? []\n    : bscript.decompile(input.finalScriptSig) || [];\n  const witnessItems = !input.finalScriptWitness\n    ? []\n    : bscript.decompile(input.finalScriptWitness) || [];\n  return scriptItems\n    .concat(witnessItems)\n    .filter(item => {\n      return Buffer.isBuffer(item) && bscript.isCanonicalScriptSignature(item);\n    })\n    .map(sig => ({ signature: sig }));\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","isPaymentFactory","payment","script","output","err","pubkeyPositionInScript","pubkey","pubkeyHash","crypto_1","hash160","pubkeyXOnly","slice","decompiled","bscript","decompile","Error","findIndex","element","equals","signatureBlocksAction","signature","signatureDecodeFn","action","hashType","whitelist","transaction_1","Transaction","SIGHASH_ANYONECANPAY","push","SIGHASH_SINGLE","SIGHASH_NONE","indexOf","extractPartialSigs","input","pSigs","length","partialSig","finalScriptSig","finalScriptWitness","getPsigsFromInputFinalScripts","map","p","scriptItems","witnessItems","concat","filter","item","Buffer","isBuffer","isCanonicalScriptSignature","sig","Object","defineProperty","value","checkInputForSig","pubkeyInScript","witnessStackToScriptWitness","isP2TR","isP2SHScript","isP2WSHScript","isP2WPKH","isP2PKH","isP2PK","isP2MS","varuint","payments","p2ms","p2pk","p2pkh","p2wpkh","p2wsh","p2sh","p2tr","witness","writeVarInt","i","currentLen","buffer","varintLen","encodingLength","allocUnsafe","encode","writeVarSlice","from","writeVector","vector","forEach","some","pSig","decode"]
}

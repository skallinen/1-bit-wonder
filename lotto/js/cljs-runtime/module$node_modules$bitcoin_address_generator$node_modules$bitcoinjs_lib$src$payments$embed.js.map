{
"version":3,
"file":"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$payments$embed.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/bitcoin-address-generator/node_modules/bitcoinjs-lib/src/payments/embed.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$payments$embed\"] = function(global,require,module,exports) {\nconst lazy = require('./lazy')\nconst typef = require('typeforce')\nconst OPS = require('bitcoin-ops')\n\nconst bscript = require('../script')\nconst BITCOIN_NETWORK = require('../networks').bitcoin\n\nfunction stacksEqual (a, b) {\n  if (a.length !== b.length) return false\n\n  return a.every(function (x, i) {\n    return x.equals(b[i])\n  })\n}\n\n// output: OP_RETURN ...\nfunction p2data (a, opts) {\n  if (\n    !a.data &&\n    !a.output\n  ) throw new TypeError('Not enough data')\n  opts = Object.assign({ validate: true }, opts || {})\n\n  typef({\n    network: typef.maybe(typef.Object),\n    output: typef.maybe(typef.Buffer),\n    data: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a)\n\n  const network = a.network || BITCOIN_NETWORK\n  const o = { network }\n\n  lazy.prop(o, 'output', function () {\n    if (!a.data) return\n    return bscript.compile([OPS.OP_RETURN].concat(a.data))\n  })\n  lazy.prop(o, 'data', function () {\n    if (!a.output) return\n    return bscript.decompile(a.output).slice(1)\n  })\n\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      const chunks = bscript.decompile(a.output)\n      if (chunks[0] !== OPS.OP_RETURN) throw new TypeError('Output is invalid')\n      if (!chunks.slice(1).every(typef.Buffer)) throw new TypeError('Output is invalid')\n\n      if (a.data && !stacksEqual(a.data, o.data)) throw new TypeError('Data mismatch')\n    }\n  }\n\n  return Object.assign(o, a)\n}\n\nmodule.exports = p2data\n\n};"],
"names":["shadow$provide","global","require","module","exports","stacksEqual","a","b","length","every","x","i","equals","lazy","typef","OPS","bscript","BITCOIN_NETWORK","bitcoin","p2data","opts","data","output","TypeError","Object","assign","validate","network","maybe","Buffer","arrayOf","o","prop","compile","OP_RETURN","concat","decompile","slice","chunks"]
}

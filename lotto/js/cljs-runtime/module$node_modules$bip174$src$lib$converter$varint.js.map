{
"version":3,
"file":"module$node_modules$bip174$src$lib$converter$varint.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/bip174/src/lib/converter/varint.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip174$src$lib$converter$varint\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n// Number.MAX_SAFE_INTEGER\nconst MAX_SAFE_INTEGER = 9007199254740991;\nfunction checkUInt53(n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0)\n    throw new RangeError('value out of range');\n}\nfunction encode(_number, buffer, offset) {\n  checkUInt53(_number);\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(_number));\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  // 8 bit\n  if (_number < 0xfd) {\n    buffer.writeUInt8(_number, offset);\n    Object.assign(encode, { bytes: 1 });\n    // 16 bit\n  } else if (_number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset);\n    buffer.writeUInt16LE(_number, offset + 1);\n    Object.assign(encode, { bytes: 3 });\n    // 32 bit\n  } else if (_number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset);\n    buffer.writeUInt32LE(_number, offset + 1);\n    Object.assign(encode, { bytes: 5 });\n    // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset);\n    buffer.writeUInt32LE(_number >>> 0, offset + 1);\n    buffer.writeUInt32LE((_number / 0x100000000) | 0, offset + 5);\n    Object.assign(encode, { bytes: 9 });\n  }\n  return buffer;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  const first = buffer.readUInt8(offset);\n  // 8 bit\n  if (first < 0xfd) {\n    Object.assign(decode, { bytes: 1 });\n    return first;\n    // 16 bit\n  } else if (first === 0xfd) {\n    Object.assign(decode, { bytes: 3 });\n    return buffer.readUInt16LE(offset + 1);\n    // 32 bit\n  } else if (first === 0xfe) {\n    Object.assign(decode, { bytes: 5 });\n    return buffer.readUInt32LE(offset + 1);\n    // 64 bit\n  } else {\n    Object.assign(decode, { bytes: 9 });\n    const lo = buffer.readUInt32LE(offset + 1);\n    const hi = buffer.readUInt32LE(offset + 5);\n    const _number = hi * 0x0100000000 + lo;\n    checkUInt53(_number);\n    return _number;\n  }\n}\nexports.decode = decode;\nfunction encodingLength(_number) {\n  checkUInt53(_number);\n  return _number < 0xfd\n    ? 1\n    : _number <= 0xffff\n    ? 3\n    : _number <= 0xffffffff\n    ? 5\n    : 9;\n}\nexports.encodingLength = encodingLength;\n\n};"],
"names":["shadow$provide","global","require","module","exports","checkUInt53","n","MAX_SAFE_INTEGER","RangeError","encode","_number","buffer","offset","Buffer","allocUnsafe","encodingLength","isBuffer","TypeError","writeUInt8","Object","assign","bytes","writeUInt16LE","writeUInt32LE","decode","first","readUInt8","readUInt16LE","readUInt32LE","lo","hi","defineProperty","value"]
}

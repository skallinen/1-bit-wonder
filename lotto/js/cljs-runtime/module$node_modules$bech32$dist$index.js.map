{
"version":3,
"file":"module$node_modules$bech32$dist$index.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/bech32/dist/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bech32$dist$index\"] = function(global,require,module,exports) {\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n\n};"],
"names":["shadow$provide","global","require","module","exports","polymodStep","pre","b","prefixChk","prefix","chk","i","length","c","charCodeAt","v","convert","data","inBits","outBits","pad","value","bits","maxV","result","push","toWords","bytes","fromWordsUnsafe","words","res","Array","isArray","fromWords","Error","getLibraryFromEncoding","encoding","__decode","str","LIMIT","lowered","toLowerCase","uppered","toUpperCase","split","lastIndexOf","slice","wordChars","charAt","ALPHABET_MAP","undefined","ENCODING_CONST","decodeUnsafe","decode","encode","TypeError","x","ALPHABET","Object","defineProperty","bech32m","bech32","z"]
}

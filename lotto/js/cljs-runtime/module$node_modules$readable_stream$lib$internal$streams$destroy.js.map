{
"version":3,
"file":"module$node_modules$readable_stream$lib$internal$streams$destroy.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/readable-stream/lib/internal/streams/destroy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$readable_stream$lib$internal$streams$destroy\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};\n};"],
"names":["shadow$provide","global","require","module","exports","emitErrorAndCloseNT","self","err","emitErrorNT","emitCloseNT","_writableState","emitClose","_readableState","emit","process","destroy","cb","_this","writableDestroyed","destroyed","errorEmitted","nextTick","_destroy","undestroy","reading","ended","endEmitted","ending","finalCalled","prefinished","finished","errorOrDestroy","stream","rState","wState","autoDestroy"]
}

{
"version":3,
"file":"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$transaction.js",
"lineCount":21,
"mappings":"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",
"sources":["node_modules/bitcoin-address-generator/node_modules/bitcoinjs-lib/src/transaction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoin_address_generator$node_modules$bitcoinjs_lib$src$transaction\"] = function(global,require,module,exports) {\nconst Buffer = require('safe-buffer').Buffer\nconst bcrypto = require('./crypto')\nconst bscript = require('./script')\nconst bufferutils = require('./bufferutils')\nconst opcodes = require('bitcoin-ops')\nconst typeforce = require('typeforce')\nconst types = require('./types')\nconst varuint = require('varuint-bitcoin')\n\nfunction varSliceSize (someScript) {\n  const length = someScript.length\n\n  return varuint.encodingLength(length) + length\n}\n\nfunction vectorSize (someVector) {\n  const length = someVector.length\n\n  return varuint.encodingLength(length) + someVector.reduce(function (sum, witness) {\n    return sum + varSliceSize(witness)\n  }, 0)\n}\n\nfunction Transaction () {\n  this.version = 1\n  this.locktime = 0\n  this.ins = []\n  this.outs = []\n}\n\nTransaction.DEFAULT_SEQUENCE = 0xffffffff\nTransaction.SIGHASH_ALL = 0x01\nTransaction.SIGHASH_NONE = 0x02\nTransaction.SIGHASH_SINGLE = 0x03\nTransaction.SIGHASH_ANYONECANPAY = 0x80\nTransaction.ADVANCED_TRANSACTION_MARKER = 0x00\nTransaction.ADVANCED_TRANSACTION_FLAG = 0x01\n\nconst EMPTY_SCRIPT = Buffer.allocUnsafe(0)\nconst EMPTY_WITNESS = []\nconst ZERO = Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex')\nconst ONE = Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex')\nconst VALUE_UINT64_MAX = Buffer.from('ffffffffffffffff', 'hex')\nconst BLANK_OUTPUT = {\n  script: EMPTY_SCRIPT,\n  valueBuffer: VALUE_UINT64_MAX\n}\n\nTransaction.fromBuffer = function (buffer, __noStrict) {\n  let offset = 0\n  function readSlice (n) {\n    offset += n\n    return buffer.slice(offset - n, offset)\n  }\n\n  function readUInt32 () {\n    const i = buffer.readUInt32LE(offset)\n    offset += 4\n    return i\n  }\n\n  function readInt32 () {\n    const i = buffer.readInt32LE(offset)\n    offset += 4\n    return i\n  }\n\n  function readUInt64 () {\n    const i = bufferutils.readUInt64LE(buffer, offset)\n    offset += 8\n    return i\n  }\n\n  function readVarInt () {\n    const vi = varuint.decode(buffer, offset)\n    offset += varuint.decode.bytes\n    return vi\n  }\n\n  function readVarSlice () {\n    return readSlice(readVarInt())\n  }\n\n  function readVector () {\n    const count = readVarInt()\n    const vector = []\n    for (var i = 0; i < count; i++) vector.push(readVarSlice())\n    return vector\n  }\n\n  const tx = new Transaction()\n  tx.version = readInt32()\n\n  const marker = buffer.readUInt8(offset)\n  const flag = buffer.readUInt8(offset + 1)\n\n  let hasWitnesses = false\n  if (marker === Transaction.ADVANCED_TRANSACTION_MARKER &&\n      flag === Transaction.ADVANCED_TRANSACTION_FLAG) {\n    offset += 2\n    hasWitnesses = true\n  }\n\n  const vinLen = readVarInt()\n  for (var i = 0; i < vinLen; ++i) {\n    tx.ins.push({\n      hash: readSlice(32),\n      index: readUInt32(),\n      script: readVarSlice(),\n      sequence: readUInt32(),\n      witness: EMPTY_WITNESS\n    })\n  }\n\n  const voutLen = readVarInt()\n  for (i = 0; i < voutLen; ++i) {\n    tx.outs.push({\n      value: readUInt64(),\n      script: readVarSlice()\n    })\n  }\n\n  if (hasWitnesses) {\n    for (i = 0; i < vinLen; ++i) {\n      tx.ins[i].witness = readVector()\n    }\n\n    // was this pointless?\n    if (!tx.hasWitnesses()) throw new Error('Transaction has superfluous witness data')\n  }\n\n  tx.locktime = readUInt32()\n\n  if (__noStrict) return tx\n  if (offset !== buffer.length) throw new Error('Transaction has unexpected data')\n\n  return tx\n}\n\nTransaction.fromHex = function (hex) {\n  return Transaction.fromBuffer(Buffer.from(hex, 'hex'))\n}\n\nTransaction.isCoinbaseHash = function (buffer) {\n  typeforce(types.Hash256bit, buffer)\n  for (var i = 0; i < 32; ++i) {\n    if (buffer[i] !== 0) return false\n  }\n  return true\n}\n\nTransaction.prototype.isCoinbase = function () {\n  return this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash)\n}\n\nTransaction.prototype.addInput = function (hash, index, sequence, scriptSig) {\n  typeforce(types.tuple(\n    types.Hash256bit,\n    types.UInt32,\n    types.maybe(types.UInt32),\n    types.maybe(types.Buffer)\n  ), arguments)\n\n  if (types.Null(sequence)) {\n    sequence = Transaction.DEFAULT_SEQUENCE\n  }\n\n  // Add the input and return the input's index\n  return (this.ins.push({\n    hash: hash,\n    index: index,\n    script: scriptSig || EMPTY_SCRIPT,\n    sequence: sequence,\n    witness: EMPTY_WITNESS\n  }) - 1)\n}\n\nTransaction.prototype.addOutput = function (scriptPubKey, value) {\n  typeforce(types.tuple(types.Buffer, types.Satoshi), arguments)\n\n  // Add the output and return the output's index\n  return (this.outs.push({\n    script: scriptPubKey,\n    value: value\n  }) - 1)\n}\n\nTransaction.prototype.hasWitnesses = function () {\n  return this.ins.some(function (x) {\n    return x.witness.length !== 0\n  })\n}\n\nTransaction.prototype.weight = function () {\n  const base = this.__byteLength(false)\n  const total = this.__byteLength(true)\n  return base * 3 + total\n}\n\nTransaction.prototype.virtualSize = function () {\n  return Math.ceil(this.weight() / 4)\n}\n\nTransaction.prototype.byteLength = function () {\n  return this.__byteLength(true)\n}\n\nTransaction.prototype.__byteLength = function (__allowWitness) {\n  const hasWitnesses = __allowWitness && this.hasWitnesses()\n\n  return (\n    (hasWitnesses ? 10 : 8) +\n    varuint.encodingLength(this.ins.length) +\n    varuint.encodingLength(this.outs.length) +\n    this.ins.reduce(function (sum, input) { return sum + 40 + varSliceSize(input.script) }, 0) +\n    this.outs.reduce(function (sum, output) { return sum + 8 + varSliceSize(output.script) }, 0) +\n    (hasWitnesses ? this.ins.reduce(function (sum, input) { return sum + vectorSize(input.witness) }, 0) : 0)\n  )\n}\n\nTransaction.prototype.clone = function () {\n  const newTx = new Transaction()\n  newTx.version = this.version\n  newTx.locktime = this.locktime\n\n  newTx.ins = this.ins.map(function (txIn) {\n    return {\n      hash: txIn.hash,\n      index: txIn.index,\n      script: txIn.script,\n      sequence: txIn.sequence,\n      witness: txIn.witness\n    }\n  })\n\n  newTx.outs = this.outs.map(function (txOut) {\n    return {\n      script: txOut.script,\n      value: txOut.value\n    }\n  })\n\n  return newTx\n}\n\n/**\n * Hash transaction for signing a specific input.\n *\n * Bitcoin uses a different hash for each signed transaction input.\n * This method copies the transaction, makes the necessary changes based on the\n * hashType, and then hashes the result.\n * This hash can then be used to sign the provided transaction input.\n */\nTransaction.prototype.hashForSignature = function (inIndex, prevOutScript, hashType) {\n  typeforce(types.tuple(types.UInt32, types.Buffer, /* types.UInt8 */ types.Number), arguments)\n\n  // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n  if (inIndex >= this.ins.length) return ONE\n\n  // ignore OP_CODESEPARATOR\n  const ourScript = bscript.compile(bscript.decompile(prevOutScript).filter(function (x) {\n    return x !== opcodes.OP_CODESEPARATOR\n  }))\n\n  const txTmp = this.clone()\n\n  // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n  if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n    txTmp.outs = []\n\n    // ignore sequence numbers (except at inIndex)\n    txTmp.ins.forEach(function (input, i) {\n      if (i === inIndex) return\n\n      input.sequence = 0\n    })\n\n  // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n  } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n    // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n    if (inIndex >= this.outs.length) return ONE\n\n    // truncate outputs after\n    txTmp.outs.length = inIndex + 1\n\n    // \"blank\" outputs before\n    for (var i = 0; i < inIndex; i++) {\n      txTmp.outs[i] = BLANK_OUTPUT\n    }\n\n    // ignore sequence numbers (except at inIndex)\n    txTmp.ins.forEach(function (input, y) {\n      if (y === inIndex) return\n\n      input.sequence = 0\n    })\n  }\n\n  // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n  if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n    txTmp.ins = [txTmp.ins[inIndex]]\n    txTmp.ins[0].script = ourScript\n\n  // SIGHASH_ALL: only ignore input scripts\n  } else {\n    // \"blank\" others input scripts\n    txTmp.ins.forEach(function (input) { input.script = EMPTY_SCRIPT })\n    txTmp.ins[inIndex].script = ourScript\n  }\n\n  // serialize and hash\n  const buffer = Buffer.allocUnsafe(txTmp.__byteLength(false) + 4)\n  buffer.writeInt32LE(hashType, buffer.length - 4)\n  txTmp.__toBuffer(buffer, 0, false)\n\n  return bcrypto.hash256(buffer)\n}\n\nTransaction.prototype.hashForWitnessV0 = function (inIndex, prevOutScript, value, hashType) {\n  typeforce(types.tuple(types.UInt32, types.Buffer, types.Satoshi, types.UInt32), arguments)\n\n  let tbuffer, toffset\n  function writeSlice (slice) { toffset += slice.copy(tbuffer, toffset) }\n  function writeUInt32 (i) { toffset = tbuffer.writeUInt32LE(i, toffset) }\n  function writeUInt64 (i) { toffset = bufferutils.writeUInt64LE(tbuffer, i, toffset) }\n  function writeVarInt (i) {\n    varuint.encode(i, tbuffer, toffset)\n    toffset += varuint.encode.bytes\n  }\n  function writeVarSlice (slice) { writeVarInt(slice.length); writeSlice(slice) }\n\n  let hashOutputs = ZERO\n  let hashPrevouts = ZERO\n  let hashSequence = ZERO\n\n  if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n    tbuffer = Buffer.allocUnsafe(36 * this.ins.length)\n    toffset = 0\n\n    this.ins.forEach(function (txIn) {\n      writeSlice(txIn.hash)\n      writeUInt32(txIn.index)\n    })\n\n    hashPrevouts = bcrypto.hash256(tbuffer)\n  }\n\n  if (!(hashType & Transaction.SIGHASH_ANYONECANPAY) &&\n       (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n       (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n    tbuffer = Buffer.allocUnsafe(4 * this.ins.length)\n    toffset = 0\n\n    this.ins.forEach(function (txIn) {\n      writeUInt32(txIn.sequence)\n    })\n\n    hashSequence = bcrypto.hash256(tbuffer)\n  }\n\n  if ((hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n    const txOutsSize = this.outs.reduce(function (sum, output) {\n      return sum + 8 + varSliceSize(output.script)\n    }, 0)\n\n    tbuffer = Buffer.allocUnsafe(txOutsSize)\n    toffset = 0\n\n    this.outs.forEach(function (out) {\n      writeUInt64(out.value)\n      writeVarSlice(out.script)\n    })\n\n    hashOutputs = bcrypto.hash256(tbuffer)\n  } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE && inIndex < this.outs.length) {\n    const output = this.outs[inIndex]\n\n    tbuffer = Buffer.allocUnsafe(8 + varSliceSize(output.script))\n    toffset = 0\n    writeUInt64(output.value)\n    writeVarSlice(output.script)\n\n    hashOutputs = bcrypto.hash256(tbuffer)\n  }\n\n  tbuffer = Buffer.allocUnsafe(156 + varSliceSize(prevOutScript))\n  toffset = 0\n\n  const input = this.ins[inIndex]\n  writeUInt32(this.version)\n  writeSlice(hashPrevouts)\n  writeSlice(hashSequence)\n  writeSlice(input.hash)\n  writeUInt32(input.index)\n  writeVarSlice(prevOutScript)\n  writeUInt64(value)\n  writeUInt32(input.sequence)\n  writeSlice(hashOutputs)\n  writeUInt32(this.locktime)\n  writeUInt32(hashType)\n  return bcrypto.hash256(tbuffer)\n}\n\nTransaction.prototype.getHash = function () {\n  return bcrypto.hash256(this.__toBuffer(undefined, undefined, false))\n}\n\nTransaction.prototype.getId = function () {\n  // transaction hash's are displayed in reverse order\n  return this.getHash().reverse().toString('hex')\n}\n\nTransaction.prototype.toBuffer = function (buffer, initialOffset) {\n  return this.__toBuffer(buffer, initialOffset, true)\n}\n\nTransaction.prototype.__toBuffer = function (buffer, initialOffset, __allowWitness) {\n  if (!buffer) buffer = Buffer.allocUnsafe(this.__byteLength(__allowWitness))\n\n  let offset = initialOffset || 0\n  function writeSlice (slice) { offset += slice.copy(buffer, offset) }\n  function writeUInt8 (i) { offset = buffer.writeUInt8(i, offset) }\n  function writeUInt32 (i) { offset = buffer.writeUInt32LE(i, offset) }\n  function writeInt32 (i) { offset = buffer.writeInt32LE(i, offset) }\n  function writeUInt64 (i) { offset = bufferutils.writeUInt64LE(buffer, i, offset) }\n  function writeVarInt (i) {\n    varuint.encode(i, buffer, offset)\n    offset += varuint.encode.bytes\n  }\n  function writeVarSlice (slice) { writeVarInt(slice.length); writeSlice(slice) }\n  function writeVector (vector) { writeVarInt(vector.length); vector.forEach(writeVarSlice) }\n\n  writeInt32(this.version)\n\n  const hasWitnesses = __allowWitness && this.hasWitnesses()\n\n  if (hasWitnesses) {\n    writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER)\n    writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG)\n  }\n\n  writeVarInt(this.ins.length)\n\n  this.ins.forEach(function (txIn) {\n    writeSlice(txIn.hash)\n    writeUInt32(txIn.index)\n    writeVarSlice(txIn.script)\n    writeUInt32(txIn.sequence)\n  })\n\n  writeVarInt(this.outs.length)\n  this.outs.forEach(function (txOut) {\n    if (!txOut.valueBuffer) {\n      writeUInt64(txOut.value)\n    } else {\n      writeSlice(txOut.valueBuffer)\n    }\n\n    writeVarSlice(txOut.script)\n  })\n\n  if (hasWitnesses) {\n    this.ins.forEach(function (input) {\n      writeVector(input.witness)\n    })\n  }\n\n  writeUInt32(this.locktime)\n\n  // avoid slicing unless necessary\n  if (initialOffset !== undefined) return buffer.slice(initialOffset, offset)\n  return buffer\n}\n\nTransaction.prototype.toHex = function () {\n  return this.toBuffer().toString('hex')\n}\n\nTransaction.prototype.setInputScript = function (index, scriptSig) {\n  typeforce(types.tuple(types.Number, types.Buffer), arguments)\n\n  this.ins[index].script = scriptSig\n}\n\nTransaction.prototype.setWitness = function (index, witness) {\n  typeforce(types.tuple(types.Number, [types.Buffer]), arguments)\n\n  this.ins[index].witness = witness\n}\n\nmodule.exports = Transaction\n\n};"],
"names":["shadow$provide","global","require","module","exports","varSliceSize","someScript","length","varuint","encodingLength","vectorSize","someVector","reduce","sum","witness","Transaction","version","locktime","ins","outs","Buffer","bcrypto","bscript","bufferutils","opcodes","typeforce","types","DEFAULT_SEQUENCE","SIGHASH_ALL","SIGHASH_NONE","SIGHASH_SINGLE","SIGHASH_ANYONECANPAY","ADVANCED_TRANSACTION_MARKER","ADVANCED_TRANSACTION_FLAG","EMPTY_SCRIPT","allocUnsafe","EMPTY_WITNESS","ZERO","from","ONE","VALUE_UINT64_MAX","BLANK_OUTPUT","script","valueBuffer","fromBuffer","Transaction.fromBuffer","buffer","__noStrict","readSlice","n","offset","slice","readUInt32","i","readUInt32LE","readUInt64","readUInt64LE","readVarInt","vi","decode","bytes","readVector","count","vector","push","tx","readInt32","readInt32LE","marker","readUInt8","flag","hasWitnesses","vinLen","hash","index","sequence","voutLen","value","Error","fromHex","Transaction.fromHex","hex","isCoinbaseHash","Transaction.isCoinbaseHash","Hash256bit","prototype","isCoinbase","Transaction.prototype.isCoinbase","addInput","Transaction.prototype.addInput","scriptSig","tuple","UInt32","maybe","arguments","Null","addOutput","Transaction.prototype.addOutput","scriptPubKey","Satoshi","Transaction.prototype.hasWitnesses","some","x","weight","Transaction.prototype.weight","base","__byteLength","total","virtualSize","Transaction.prototype.virtualSize","Math","ceil","byteLength","Transaction.prototype.byteLength","Transaction.prototype.__byteLength","__allowWitness","input","output","clone","Transaction.prototype.clone","newTx","map","txIn","txOut","hashForSignature","Transaction.prototype.hashForSignature","inIndex","prevOutScript","hashType","Number","ourScript","compile","decompile","filter","OP_CODESEPARATOR","txTmp","forEach","y","writeInt32LE","__toBuffer","hash256","hashForWitnessV0","Transaction.prototype.hashForWitnessV0","writeSlice","toffset","copy","tbuffer","writeUInt32","writeUInt32LE","writeUInt64","writeUInt64LE","writeVarSlice","encode","hashOutputs","hashPrevouts","hashSequence","txOutsSize","out","getHash","Transaction.prototype.getHash","undefined","getId","Transaction.prototype.getId","reverse","toString","toBuffer","Transaction.prototype.toBuffer","initialOffset","Transaction.prototype.__toBuffer","writeVarInt","writeUInt8","toHex","Transaction.prototype.toHex","setInputScript","Transaction.prototype.setInputScript","setWitness","Transaction.prototype.setWitness"]
}

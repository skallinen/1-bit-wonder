{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$psbt.js",
"lineCount":71,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/psbt.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$psbt\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Psbt = void 0;\nconst bip174_1 = require('bip174');\nconst varuint = require('bip174/src/lib/converter/varint');\nconst utils_1 = require('bip174/src/lib/utils');\nconst address_1 = require('./address');\nconst bufferutils_1 = require('./bufferutils');\nconst networks_1 = require('./networks');\nconst payments = require('./payments');\nconst bip341_1 = require('./payments/bip341');\nconst bscript = require('./script');\nconst transaction_1 = require('./transaction');\nconst bip371_1 = require('./psbt/bip371');\nconst psbtutils_1 = require('./psbt/psbtutils');\n/**\n * These are the default arguments for a Psbt instance.\n */\nconst DEFAULT_OPTS = {\n  /**\n   * A bitcoinjs Network object. This is only used if you pass an `address`\n   * parameter to addOutput. Otherwise it is not needed and can be left default.\n   */\n  network: networks_1.bitcoin,\n  /**\n   * When extractTransaction is called, the fee rate is checked.\n   * THIS IS NOT TO BE RELIED ON.\n   * It is only here as a last ditch effort to prevent sending a 500 BTC fee etc.\n   */\n  maximumFeeRate: 5000, // satoshi per byte\n};\n/**\n * Psbt class can parse and generate a PSBT binary based off of the BIP174.\n * There are 6 roles that this class fulfills. (Explained in BIP174)\n *\n * Creator: This can be done with `new Psbt()`\n * Updater: This can be done with `psbt.addInput(input)`, `psbt.addInputs(inputs)`,\n *   `psbt.addOutput(output)`, `psbt.addOutputs(outputs)` when you are looking to\n *   add new inputs and outputs to the PSBT, and `psbt.updateGlobal(itemObject)`,\n *   `psbt.updateInput(itemObject)`, `psbt.updateOutput(itemObject)`\n *   addInput requires hash: Buffer | string; and index: number; as attributes\n *   and can also include any attributes that are used in updateInput method.\n *   addOutput requires script: Buffer; and value: number; and likewise can include\n *   data for updateOutput.\n *   For a list of what attributes should be what types. Check the bip174 library.\n *   Also, check the integration tests for some examples of usage.\n * Signer: There are a few methods. signAllInputs and signAllInputsAsync, which will search all input\n *   information for your pubkey or pubkeyhash, and only sign inputs where it finds\n *   your info. Or you can explicitly sign a specific input with signInput and\n *   signInputAsync. For the async methods you can create a SignerAsync object\n *   and use something like a hardware wallet to sign with. (You must implement this)\n * Combiner: psbts can be combined easily with `psbt.combine(psbt2, psbt3, psbt4 ...)`\n *   the psbt calling combine will always have precedence when a conflict occurs.\n *   Combine checks if the internal bitcoin transaction is the same, so be sure that\n *   all sequences, version, locktime, etc. are the same before combining.\n * Input Finalizer: This role is fairly important. Not only does it need to construct\n *   the input scriptSigs and witnesses, but it SHOULD verify the signatures etc.\n *   Before running `psbt.finalizeAllInputs()` please run `psbt.validateSignaturesOfAllInputs()`\n *   Running any finalize method will delete any data in the input(s) that are no longer\n *   needed due to the finalized scripts containing the information.\n * Transaction Extractor: This role will perform some checks before returning a\n *   Transaction object. Such as fee rate not being larger than maximumFeeRate etc.\n */\nclass Psbt {\n  static fromBase64(data, opts = {}) {\n    const buffer = Buffer.from(data, 'base64');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromHex(data, opts = {}) {\n    const buffer = Buffer.from(data, 'hex');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromBuffer(buffer, opts = {}) {\n    const psbtBase = bip174_1.Psbt.fromBuffer(buffer, transactionFromBuffer);\n    const psbt = new Psbt(opts, psbtBase);\n    checkTxForDupeIns(psbt.__CACHE.__TX, psbt.__CACHE);\n    return psbt;\n  }\n  constructor(opts = {}, data = new bip174_1.Psbt(new PsbtTransaction())) {\n    this.data = data;\n    // set defaults\n    this.opts = Object.assign({}, DEFAULT_OPTS, opts);\n    this.__CACHE = {\n      __NON_WITNESS_UTXO_TX_CACHE: [],\n      __NON_WITNESS_UTXO_BUF_CACHE: [],\n      __TX_IN_CACHE: {},\n      __TX: this.data.globalMap.unsignedTx.tx,\n      // Psbt's predecesor (TransactionBuilder - now removed) behavior\n      // was to not confirm input values  before signing.\n      // Even though we highly encourage people to get\n      // the full parent transaction to verify values, the ability to\n      // sign non-segwit inputs without the full transaction was often\n      // requested. So the only way to activate is to use @ts-ignore.\n      // We will disable exporting the Psbt when unsafe sign is active.\n      // because it is not BIP174 compliant.\n      __UNSAFE_SIGN_NONSEGWIT: false,\n    };\n    if (this.data.inputs.length === 0) this.setVersion(2);\n    // Make data hidden when enumerating\n    const dpew = (obj, attr, enumerable, writable) =>\n      Object.defineProperty(obj, attr, {\n        enumerable,\n        writable,\n      });\n    dpew(this, '__CACHE', false, true);\n    dpew(this, 'opts', false, true);\n  }\n  get inputCount() {\n    return this.data.inputs.length;\n  }\n  get version() {\n    return this.__CACHE.__TX.version;\n  }\n  set version(version) {\n    this.setVersion(version);\n  }\n  get locktime() {\n    return this.__CACHE.__TX.locktime;\n  }\n  set locktime(locktime) {\n    this.setLocktime(locktime);\n  }\n  get txInputs() {\n    return this.__CACHE.__TX.ins.map(input => ({\n      hash: (0, bufferutils_1.cloneBuffer)(input.hash),\n      index: input.index,\n      sequence: input.sequence,\n    }));\n  }\n  get txOutputs() {\n    return this.__CACHE.__TX.outs.map(output => {\n      let address;\n      try {\n        address = (0, address_1.fromOutputScript)(\n          output.script,\n          this.opts.network,\n        );\n      } catch (_) {}\n      return {\n        script: (0, bufferutils_1.cloneBuffer)(output.script),\n        value: output.value,\n        address,\n      };\n    });\n  }\n  combine(...those) {\n    this.data.combine(...those.map(o => o.data));\n    return this;\n  }\n  clone() {\n    // TODO: more efficient cloning\n    const res = Psbt.fromBuffer(this.data.toBuffer());\n    res.opts = JSON.parse(JSON.stringify(this.opts));\n    return res;\n  }\n  setMaximumFeeRate(satoshiPerByte) {\n    check32Bit(satoshiPerByte); // 42.9 BTC per byte IS excessive... so throw\n    this.opts.maximumFeeRate = satoshiPerByte;\n  }\n  setVersion(version) {\n    check32Bit(version);\n    checkInputsForPartialSig(this.data.inputs, 'setVersion');\n    const c = this.__CACHE;\n    c.__TX.version = version;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setLocktime(locktime) {\n    check32Bit(locktime);\n    checkInputsForPartialSig(this.data.inputs, 'setLocktime');\n    const c = this.__CACHE;\n    c.__TX.locktime = locktime;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setInputSequence(inputIndex, sequence) {\n    check32Bit(sequence);\n    checkInputsForPartialSig(this.data.inputs, 'setInputSequence');\n    const c = this.__CACHE;\n    if (c.__TX.ins.length <= inputIndex) {\n      throw new Error('Input index too high');\n    }\n    c.__TX.ins[inputIndex].sequence = sequence;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addInputs(inputDatas) {\n    inputDatas.forEach(inputData => this.addInput(inputData));\n    return this;\n  }\n  addInput(inputData) {\n    if (\n      arguments.length > 1 ||\n      !inputData ||\n      inputData.hash === undefined ||\n      inputData.index === undefined\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addInput. ` +\n          `Requires single object with at least [hash] and [index]`,\n      );\n    }\n    (0, bip371_1.checkTaprootInputFields)(inputData, inputData, 'addInput');\n    checkInputsForPartialSig(this.data.inputs, 'addInput');\n    if (inputData.witnessScript) checkInvalidP2WSH(inputData.witnessScript);\n    const c = this.__CACHE;\n    this.data.addInput(inputData);\n    const txIn = c.__TX.ins[c.__TX.ins.length - 1];\n    checkTxInputCache(c, txIn);\n    const inputIndex = this.data.inputs.length - 1;\n    const input = this.data.inputs[inputIndex];\n    if (input.nonWitnessUtxo) {\n      addNonWitnessTxCache(this.__CACHE, input, inputIndex);\n    }\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addOutputs(outputDatas) {\n    outputDatas.forEach(outputData => this.addOutput(outputData));\n    return this;\n  }\n  addOutput(outputData) {\n    if (\n      arguments.length > 1 ||\n      !outputData ||\n      outputData.value === undefined ||\n      (outputData.address === undefined && outputData.script === undefined)\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addOutput. ` +\n          `Requires single object with at least [script or address] and [value]`,\n      );\n    }\n    checkInputsForPartialSig(this.data.inputs, 'addOutput');\n    const { address } = outputData;\n    if (typeof address === 'string') {\n      const { network } = this.opts;\n      const script = (0, address_1.toOutputScript)(address, network);\n      outputData = Object.assign(outputData, { script });\n    }\n    (0, bip371_1.checkTaprootOutputFields)(outputData, outputData, 'addOutput');\n    const c = this.__CACHE;\n    this.data.addOutput(outputData);\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  extractTransaction(disableFeeCheck) {\n    if (!this.data.inputs.every(isFinalized)) throw new Error('Not finalized');\n    const c = this.__CACHE;\n    if (!disableFeeCheck) {\n      checkFees(this, c, this.opts);\n    }\n    if (c.__EXTRACTED_TX) return c.__EXTRACTED_TX;\n    const tx = c.__TX.clone();\n    inputFinalizeGetAmts(this.data.inputs, tx, c, true);\n    return tx;\n  }\n  getFeeRate() {\n    return getTxCacheValue(\n      '__FEE_RATE',\n      'fee rate',\n      this.data.inputs,\n      this.__CACHE,\n    );\n  }\n  getFee() {\n    return getTxCacheValue('__FEE', 'fee', this.data.inputs, this.__CACHE);\n  }\n  finalizeAllInputs() {\n    (0, utils_1.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    range(this.data.inputs.length).forEach(idx => this.finalizeInput(idx));\n    return this;\n  }\n  finalizeInput(inputIndex, finalScriptsFunc) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        undefined,\n        finalScriptsFunc,\n      );\n    return this._finalizeInput(inputIndex, input, finalScriptsFunc);\n  }\n  finalizeTaprootInput(\n    inputIndex,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = bip371_1.tapScriptFinalizer,\n  ) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n        finalScriptsFunc,\n      );\n    throw new Error(`Cannot finalize input #${inputIndex}. Not Taproot.`);\n  }\n  _finalizeInput(inputIndex, input, finalScriptsFunc = getFinalScripts) {\n    const { script, isP2SH, isP2WSH, isSegwit } = getScriptFromInput(\n      inputIndex,\n      input,\n      this.__CACHE,\n    );\n    if (!script) throw new Error(`No script found for input #${inputIndex}`);\n    checkPartialSigSighashes(input);\n    const { finalScriptSig, finalScriptWitness } = finalScriptsFunc(\n      inputIndex,\n      input,\n      script,\n      isSegwit,\n      isP2SH,\n      isP2WSH,\n    );\n    if (finalScriptSig) this.data.updateInput(inputIndex, { finalScriptSig });\n    if (finalScriptWitness)\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    if (!finalScriptSig && !finalScriptWitness)\n      throw new Error(`Unknown error finalizing input #${inputIndex}`);\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  _finalizeTaprootInput(\n    inputIndex,\n    input,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = bip371_1.tapScriptFinalizer,\n  ) {\n    if (!input.witnessUtxo)\n      throw new Error(\n        `Cannot finalize input #${inputIndex}. Missing withness utxo.`,\n      );\n    // Check key spend first. Increased privacy and reduced block space.\n    if (input.tapKeySig) {\n      const payment = payments.p2tr({\n        output: input.witnessUtxo.script,\n        signature: input.tapKeySig,\n      });\n      const finalScriptWitness = (0, psbtutils_1.witnessStackToScriptWitness)(\n        payment.witness,\n      );\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    } else {\n      const { finalScriptWitness } = finalScriptsFunc(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n      );\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    }\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  getInputType(inputIndex) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    const script = getScriptFromUtxo(inputIndex, input, this.__CACHE);\n    const result = getMeaningfulScript(\n      script,\n      inputIndex,\n      'input',\n      input.redeemScript || redeemFromFinalScriptSig(input.finalScriptSig),\n      input.witnessScript ||\n        redeemFromFinalWitnessScript(input.finalScriptWitness),\n    );\n    const type = result.type === 'raw' ? '' : result.type + '-';\n    const mainType = classifyScript(result.meaningfulScript);\n    return type + mainType;\n  }\n  inputHasPubkey(inputIndex, pubkey) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    return pubkeyInInput(pubkey, input, inputIndex, this.__CACHE);\n  }\n  inputHasHDKey(inputIndex, root) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!input.bip32Derivation && input.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  outputHasPubkey(outputIndex, pubkey) {\n    const output = (0, utils_1.checkForOutput)(this.data.outputs, outputIndex);\n    return pubkeyInOutput(pubkey, output, outputIndex, this.__CACHE);\n  }\n  outputHasHDKey(outputIndex, root) {\n    const output = (0, utils_1.checkForOutput)(this.data.outputs, outputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!output.bip32Derivation && output.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  validateSignaturesOfAllInputs(validator) {\n    (0, utils_1.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    const results = range(this.data.inputs.length).map(idx =>\n      this.validateSignaturesOfInput(idx, validator),\n    );\n    return results.reduce((final, res) => res === true && final, true);\n  }\n  validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this.validateSignaturesOfTaprootInput(\n        inputIndex,\n        validator,\n        pubkey,\n      );\n    return this._validateSignaturesOfInput(inputIndex, validator, pubkey);\n  }\n  _validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const partialSig = (input || {}).partialSig;\n    if (!input || !partialSig || partialSig.length < 1)\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    const mySigs = pubkey\n      ? partialSig.filter(sig => sig.pubkey.equals(pubkey))\n      : partialSig;\n    if (mySigs.length < 1) throw new Error('No signatures for this pubkey');\n    const results = [];\n    let hashCache;\n    let scriptCache;\n    let sighashCache;\n    for (const pSig of mySigs) {\n      const sig = bscript.signature.decode(pSig.signature);\n      const { hash, script } =\n        sighashCache !== sig.hashType\n          ? getHashForSig(\n              inputIndex,\n              Object.assign({}, input, { sighashType: sig.hashType }),\n              this.__CACHE,\n              true,\n            )\n          : { hash: hashCache, script: scriptCache };\n      sighashCache = sig.hashType;\n      hashCache = hash;\n      scriptCache = script;\n      checkScriptForPubkey(pSig.pubkey, script, 'verify');\n      results.push(validator(pSig.pubkey, hash, sig.signature));\n    }\n    return results.every(res => res === true);\n  }\n  validateSignaturesOfTaprootInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const tapKeySig = (input || {}).tapKeySig;\n    const tapScriptSig = (input || {}).tapScriptSig;\n    if (!input && !tapKeySig && !(tapScriptSig && !tapScriptSig.length))\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    pubkey = pubkey && (0, bip371_1.toXOnly)(pubkey);\n    const allHashses = pubkey\n      ? getTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          pubkey,\n          this.__CACHE,\n        )\n      : getAllTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          this.__CACHE,\n        );\n    if (!allHashses.length) throw new Error('No signatures for this pubkey');\n    const tapKeyHash = allHashses.find(h => !!h.leafHash);\n    if (tapKeySig && tapKeyHash) {\n      const isValidTapkeySig = validator(\n        tapKeyHash.pubkey,\n        tapKeyHash.hash,\n        tapKeySig,\n      );\n      if (!isValidTapkeySig) return false;\n    }\n    if (tapScriptSig) {\n      for (const tapSig of tapScriptSig) {\n        const tapSigHash = allHashses.find(h => tapSig.pubkey.equals(h.pubkey));\n        if (tapSigHash) {\n          const isValidTapScriptSig = validator(\n            tapSig.pubkey,\n            tapSigHash.hash,\n            tapSig.signature,\n          );\n          if (!isValidTapScriptSig) return false;\n        }\n      }\n    }\n    return true;\n  }\n  signAllInputsHD(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInputHD(i, hdKeyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsHDAsync(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const results = [];\n      const promises = [];\n      for (const i of range(this.data.inputs.length)) {\n        promises.push(\n          this.signInputHDAsync(i, hdKeyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInputHD(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n    signers.forEach(signer => this.signInput(inputIndex, signer, sighashTypes));\n    return this;\n  }\n  signInputHDAsync(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n      const promises = signers.map(signer =>\n        this.signInputAsync(inputIndex, signer, sighashTypes),\n      );\n      return Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n  signAllInputs(keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    // TODO: Add a pubkey/pubkeyhash cache to each input\n    // as input information is added, then eventually\n    // optimize this method.\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInput(i, keyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsAsync(keyPair, sighashTypes) {\n    return new Promise((resolve, reject) => {\n      if (!keyPair || !keyPair.publicKey)\n        return reject(new Error('Need Signer to sign input'));\n      // TODO: Add a pubkey/pubkeyhash cache to each input\n      // as input information is added, then eventually\n      // optimize this method.\n      const results = [];\n      const promises = [];\n      for (const [i] of this.data.inputs.entries()) {\n        promises.push(\n          this.signInputAsync(i, keyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInput(inputIndex, keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input)) {\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        undefined,\n        sighashTypes,\n      );\n    }\n    return this._signInput(inputIndex, keyPair, sighashTypes);\n  }\n  signTaprootInput(inputIndex, keyPair, tapLeafHashToSign, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        tapLeafHashToSign,\n        sighashTypes,\n      );\n    throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n  }\n  _signInput(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    const partialSig = [\n      {\n        pubkey: keyPair.publicKey,\n        signature: bscript.signature.encode(keyPair.sign(hash), sighashType),\n      },\n    ];\n    this.data.updateInput(inputIndex, { partialSig });\n    return this;\n  }\n  _signTaprootInput(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes = [transaction_1.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    const tapKeySig = hashesForSig\n      .filter(h => !h.leafHash)\n      .map(h =>\n        (0, bip371_1.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n      )[0];\n    const tapScriptSig = hashesForSig\n      .filter(h => !!h.leafHash)\n      .map(h => ({\n        pubkey: (0, bip371_1.toXOnly)(keyPair.publicKey),\n        signature: (0, bip371_1.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n        leafHash: h.leafHash,\n      }));\n    if (tapKeySig) {\n      this.data.updateInput(inputIndex, { tapKeySig });\n    }\n    if (tapScriptSig.length) {\n      this.data.updateInput(inputIndex, { tapScriptSig });\n    }\n    return this;\n  }\n  signInputAsync(inputIndex, keyPair, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n      if ((0, bip371_1.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          undefined,\n          sighashTypes,\n        );\n      return this._signInputAsync(inputIndex, keyPair, sighashTypes);\n    });\n  }\n  signTaprootInputAsync(inputIndex, keyPair, tapLeafHash, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n      if ((0, bip371_1.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          tapLeafHash,\n          sighashTypes,\n        );\n      throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n    });\n  }\n  _signInputAsync(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    return Promise.resolve(keyPair.sign(hash)).then(signature => {\n      const partialSig = [\n        {\n          pubkey: keyPair.publicKey,\n          signature: bscript.signature.encode(signature, sighashType),\n        },\n      ];\n      this.data.updateInput(inputIndex, { partialSig });\n    });\n  }\n  async _signTaprootInputAsync(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHash,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHash,\n      sighashTypes,\n    );\n    const signaturePromises = [];\n    const tapKeyHash = hashesForSig.filter(h => !h.leafHash)[0];\n    if (tapKeyHash) {\n      const tapKeySigPromise = Promise.resolve(\n        keyPair.signSchnorr(tapKeyHash.hash),\n      ).then(sig => {\n        return {\n          tapKeySig: (0, bip371_1.serializeTaprootSignature)(\n            sig,\n            input.sighashType,\n          ),\n        };\n      });\n      signaturePromises.push(tapKeySigPromise);\n    }\n    const tapScriptHashes = hashesForSig.filter(h => !!h.leafHash);\n    if (tapScriptHashes.length) {\n      const tapScriptSigPromises = tapScriptHashes.map(tsh => {\n        return Promise.resolve(keyPair.signSchnorr(tsh.hash)).then(\n          signature => {\n            const tapScriptSig = [\n              {\n                pubkey: (0, bip371_1.toXOnly)(keyPair.publicKey),\n                signature: (0, bip371_1.serializeTaprootSignature)(\n                  signature,\n                  input.sighashType,\n                ),\n                leafHash: tsh.leafHash,\n              },\n            ];\n            return { tapScriptSig };\n          },\n        );\n      });\n      signaturePromises.push(...tapScriptSigPromises);\n    }\n    return Promise.all(signaturePromises).then(results => {\n      results.forEach(v => this.data.updateInput(inputIndex, v));\n    });\n  }\n  checkTaprootHashesForSig(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes,\n  ) {\n    if (typeof keyPair.signSchnorr !== 'function')\n      throw new Error(\n        `Need Schnorr Signer to sign taproot input #${inputIndex}.`,\n      );\n    const hashesForSig = getTaprootHashesForSig(\n      inputIndex,\n      input,\n      this.data.inputs,\n      keyPair.publicKey,\n      this.__CACHE,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    if (!hashesForSig || !hashesForSig.length)\n      throw new Error(\n        `Can not sign for input #${inputIndex} with the key ${keyPair.publicKey.toString(\n          'hex',\n        )}`,\n      );\n    return hashesForSig;\n  }\n  toBuffer() {\n    checkCache(this.__CACHE);\n    return this.data.toBuffer();\n  }\n  toHex() {\n    checkCache(this.__CACHE);\n    return this.data.toHex();\n  }\n  toBase64() {\n    checkCache(this.__CACHE);\n    return this.data.toBase64();\n  }\n  updateGlobal(updateData) {\n    this.data.updateGlobal(updateData);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    if (updateData.witnessScript) checkInvalidP2WSH(updateData.witnessScript);\n    (0, bip371_1.checkTaprootInputFields)(\n      this.data.inputs[inputIndex],\n      updateData,\n      'updateInput',\n    );\n    this.data.updateInput(inputIndex, updateData);\n    if (updateData.nonWitnessUtxo) {\n      addNonWitnessTxCache(\n        this.__CACHE,\n        this.data.inputs[inputIndex],\n        inputIndex,\n      );\n    }\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    const outputData = this.data.outputs[outputIndex];\n    (0, bip371_1.checkTaprootOutputFields)(\n      outputData,\n      updateData,\n      'updateOutput',\n    );\n    this.data.updateOutput(outputIndex, updateData);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    this.data.addUnknownKeyValToGlobal(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    this.data.addUnknownKeyValToInput(inputIndex, keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    this.data.addUnknownKeyValToOutput(outputIndex, keyVal);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n}\nexports.Psbt = Psbt;\n/**\n * This function is needed to pass to the bip174 base class's fromBuffer.\n * It takes the \"transaction buffer\" portion of the psbt buffer and returns a\n * Transaction (From the bip174 library) interface.\n */\nconst transactionFromBuffer = buffer => new PsbtTransaction(buffer);\n/**\n * This class implements the Transaction interface from bip174 library.\n * It contains a bitcoinjs-lib Transaction object.\n */\nclass PsbtTransaction {\n  constructor(buffer = Buffer.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0])) {\n    this.tx = transaction_1.Transaction.fromBuffer(buffer);\n    checkTxEmpty(this.tx);\n    Object.defineProperty(this, 'tx', {\n      enumerable: false,\n      writable: true,\n    });\n  }\n  getInputOutputCounts() {\n    return {\n      inputCount: this.tx.ins.length,\n      outputCount: this.tx.outs.length,\n    };\n  }\n  addInput(input) {\n    if (\n      input.hash === undefined ||\n      input.index === undefined ||\n      (!Buffer.isBuffer(input.hash) && typeof input.hash !== 'string') ||\n      typeof input.index !== 'number'\n    ) {\n      throw new Error('Error adding input.');\n    }\n    const hash =\n      typeof input.hash === 'string'\n        ? (0, bufferutils_1.reverseBuffer)(Buffer.from(input.hash, 'hex'))\n        : input.hash;\n    this.tx.addInput(hash, input.index, input.sequence);\n  }\n  addOutput(output) {\n    if (\n      output.script === undefined ||\n      output.value === undefined ||\n      !Buffer.isBuffer(output.script) ||\n      typeof output.value !== 'number'\n    ) {\n      throw new Error('Error adding output.');\n    }\n    this.tx.addOutput(output.script, output.value);\n  }\n  toBuffer() {\n    return this.tx.toBuffer();\n  }\n}\nfunction canFinalize(input, script, scriptType) {\n  switch (scriptType) {\n    case 'pubkey':\n    case 'pubkeyhash':\n    case 'witnesspubkeyhash':\n      return hasSigs(1, input.partialSig);\n    case 'multisig':\n      const p2ms = payments.p2ms({ output: script });\n      return hasSigs(p2ms.m, input.partialSig, p2ms.pubkeys);\n    default:\n      return false;\n  }\n}\nfunction checkCache(cache) {\n  if (cache.__UNSAFE_SIGN_NONSEGWIT !== false) {\n    throw new Error('Not BIP174 compliant, can not export');\n  }\n}\nfunction hasSigs(neededSigs, partialSig, pubkeys) {\n  if (!partialSig) return false;\n  let sigs;\n  if (pubkeys) {\n    sigs = pubkeys\n      .map(pkey => {\n        const pubkey = compressPubkey(pkey);\n        return partialSig.find(pSig => pSig.pubkey.equals(pubkey));\n      })\n      .filter(v => !!v);\n  } else {\n    sigs = partialSig;\n  }\n  if (sigs.length > neededSigs) throw new Error('Too many signatures');\n  return sigs.length === neededSigs;\n}\nfunction isFinalized(input) {\n  return !!input.finalScriptSig || !!input.finalScriptWitness;\n}\nfunction bip32DerivationIsMine(root) {\n  return d => {\n    if (!d.masterFingerprint.equals(root.fingerprint)) return false;\n    if (!root.derivePath(d.path).publicKey.equals(d.pubkey)) return false;\n    return true;\n  };\n}\nfunction check32Bit(num) {\n  if (\n    typeof num !== 'number' ||\n    num !== Math.floor(num) ||\n    num > 0xffffffff ||\n    num < 0\n  ) {\n    throw new Error('Invalid 32 bit integer');\n  }\n}\nfunction checkFees(psbt, cache, opts) {\n  const feeRate = cache.__FEE_RATE || psbt.getFeeRate();\n  const vsize = cache.__EXTRACTED_TX.virtualSize();\n  const satoshis = feeRate * vsize;\n  if (feeRate >= opts.maximumFeeRate) {\n    throw new Error(\n      `Warning: You are paying around ${(satoshis / 1e8).toFixed(8)} in ` +\n        `fees, which is ${feeRate} satoshi per byte for a transaction ` +\n        `with a VSize of ${vsize} bytes (segwit counted as 0.25 byte per ` +\n        `byte). Use setMaximumFeeRate method to raise your threshold, or ` +\n        `pass true to the first arg of extractTransaction.`,\n    );\n  }\n}\nfunction checkInputsForPartialSig(inputs, action) {\n  inputs.forEach(input => {\n    const throws = (0, bip371_1.isTaprootInput)(input)\n      ? (0, bip371_1.checkTaprootInputForSigs)(input, action)\n      : (0, psbtutils_1.checkInputForSig)(input, action);\n    if (throws)\n      throw new Error('Can not modify transaction, signatures exist.');\n  });\n}\nfunction checkPartialSigSighashes(input) {\n  if (!input.sighashType || !input.partialSig) return;\n  const { partialSig, sighashType } = input;\n  partialSig.forEach(pSig => {\n    const { hashType } = bscript.signature.decode(pSig.signature);\n    if (sighashType !== hashType) {\n      throw new Error('Signature sighash does not match input sighash type');\n    }\n  });\n}\nfunction checkScriptForPubkey(pubkey, script, action) {\n  if (!(0, psbtutils_1.pubkeyInScript)(pubkey, script)) {\n    throw new Error(\n      `Can not ${action} for this input with the key ${pubkey.toString('hex')}`,\n    );\n  }\n}\nfunction checkTxEmpty(tx) {\n  const isEmpty = tx.ins.every(\n    input =>\n      input.script &&\n      input.script.length === 0 &&\n      input.witness &&\n      input.witness.length === 0,\n  );\n  if (!isEmpty) {\n    throw new Error('Format Error: Transaction ScriptSigs are not empty');\n  }\n}\nfunction checkTxForDupeIns(tx, cache) {\n  tx.ins.forEach(input => {\n    checkTxInputCache(cache, input);\n  });\n}\nfunction checkTxInputCache(cache, input) {\n  const key =\n    (0, bufferutils_1.reverseBuffer)(Buffer.from(input.hash)).toString('hex') +\n    ':' +\n    input.index;\n  if (cache.__TX_IN_CACHE[key]) throw new Error('Duplicate input detected.');\n  cache.__TX_IN_CACHE[key] = 1;\n}\nfunction scriptCheckerFactory(payment, paymentScriptName) {\n  return (inputIndex, scriptPubKey, redeemScript, ioType) => {\n    const redeemScriptOutput = payment({\n      redeem: { output: redeemScript },\n    }).output;\n    if (!scriptPubKey.equals(redeemScriptOutput)) {\n      throw new Error(\n        `${paymentScriptName} for ${ioType} #${inputIndex} doesn't match the scriptPubKey in the prevout`,\n      );\n    }\n  };\n}\nconst checkRedeemScript = scriptCheckerFactory(payments.p2sh, 'Redeem script');\nconst checkWitnessScript = scriptCheckerFactory(\n  payments.p2wsh,\n  'Witness script',\n);\nfunction getTxCacheValue(key, name, inputs, c) {\n  if (!inputs.every(isFinalized))\n    throw new Error(`PSBT must be finalized to calculate ${name}`);\n  if (key === '__FEE_RATE' && c.__FEE_RATE) return c.__FEE_RATE;\n  if (key === '__FEE' && c.__FEE) return c.__FEE;\n  let tx;\n  let mustFinalize = true;\n  if (c.__EXTRACTED_TX) {\n    tx = c.__EXTRACTED_TX;\n    mustFinalize = false;\n  } else {\n    tx = c.__TX.clone();\n  }\n  inputFinalizeGetAmts(inputs, tx, c, mustFinalize);\n  if (key === '__FEE_RATE') return c.__FEE_RATE;\n  else if (key === '__FEE') return c.__FEE;\n}\nfunction getFinalScripts(inputIndex, input, script, isSegwit, isP2SH, isP2WSH) {\n  const scriptType = classifyScript(script);\n  if (!canFinalize(input, script, scriptType))\n    throw new Error(`Can not finalize input #${inputIndex}`);\n  return prepareFinalScripts(\n    script,\n    scriptType,\n    input.partialSig,\n    isSegwit,\n    isP2SH,\n    isP2WSH,\n  );\n}\nfunction prepareFinalScripts(\n  script,\n  scriptType,\n  partialSig,\n  isSegwit,\n  isP2SH,\n  isP2WSH,\n) {\n  let finalScriptSig;\n  let finalScriptWitness;\n  // Wow, the payments API is very handy\n  const payment = getPayment(script, scriptType, partialSig);\n  const p2wsh = !isP2WSH ? null : payments.p2wsh({ redeem: payment });\n  const p2sh = !isP2SH ? null : payments.p2sh({ redeem: p2wsh || payment });\n  if (isSegwit) {\n    if (p2wsh) {\n      finalScriptWitness = (0, psbtutils_1.witnessStackToScriptWitness)(\n        p2wsh.witness,\n      );\n    } else {\n      finalScriptWitness = (0, psbtutils_1.witnessStackToScriptWitness)(\n        payment.witness,\n      );\n    }\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    }\n  } else {\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    } else {\n      finalScriptSig = payment.input;\n    }\n  }\n  return {\n    finalScriptSig,\n    finalScriptWitness,\n  };\n}\nfunction getHashAndSighashType(\n  inputs,\n  inputIndex,\n  pubkey,\n  cache,\n  sighashTypes,\n) {\n  const input = (0, utils_1.checkForInput)(inputs, inputIndex);\n  const { hash, sighashType, script } = getHashForSig(\n    inputIndex,\n    input,\n    cache,\n    false,\n    sighashTypes,\n  );\n  checkScriptForPubkey(pubkey, script, 'sign');\n  return {\n    hash,\n    sighashType,\n  };\n}\nfunction getHashForSig(inputIndex, input, cache, forValidate, sighashTypes) {\n  const unsignedTx = cache.__TX;\n  const sighashType =\n    input.sighashType || transaction_1.Transaction.SIGHASH_ALL;\n  checkSighashTypeAllowed(sighashType, sighashTypes);\n  let hash;\n  let prevout;\n  if (input.nonWitnessUtxo) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const prevoutHash = unsignedTx.ins[inputIndex].hash;\n    const utxoHash = nonWitnessUtxoTx.getHash();\n    // If a non-witness UTXO is provided, its hash must match the hash specified in the prevout\n    if (!prevoutHash.equals(utxoHash)) {\n      throw new Error(\n        `Non-witness UTXO hash for input #${inputIndex} doesn't match the hash specified in the prevout`,\n      );\n    }\n    const prevoutIndex = unsignedTx.ins[inputIndex].index;\n    prevout = nonWitnessUtxoTx.outs[prevoutIndex];\n  } else if (input.witnessUtxo) {\n    prevout = input.witnessUtxo;\n  } else {\n    throw new Error('Need a Utxo input item for signing');\n  }\n  const { meaningfulScript, type } = getMeaningfulScript(\n    prevout.script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  if (['p2sh-p2wsh', 'p2wsh'].indexOf(type) >= 0) {\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      meaningfulScript,\n      prevout.value,\n      sighashType,\n    );\n  } else if ((0, psbtutils_1.isP2WPKH)(meaningfulScript)) {\n    // P2WPKH uses the P2PKH template for prevoutScript when signing\n    const signingScript = payments.p2pkh({\n      hash: meaningfulScript.slice(2),\n    }).output;\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      signingScript,\n      prevout.value,\n      sighashType,\n    );\n  } else {\n    // non-segwit\n    if (\n      input.nonWitnessUtxo === undefined &&\n      cache.__UNSAFE_SIGN_NONSEGWIT === false\n    )\n      throw new Error(\n        `Input #${inputIndex} has witnessUtxo but non-segwit script: ` +\n          `${meaningfulScript.toString('hex')}`,\n      );\n    if (!forValidate && cache.__UNSAFE_SIGN_NONSEGWIT !== false)\n      console.warn(\n        'Warning: Signing non-segwit inputs without the full parent transaction ' +\n          'means there is a chance that a miner could feed you incorrect information ' +\n          \"to trick you into paying large fees. This behavior is the same as Psbt's predecesor \" +\n          '(TransactionBuilder - now removed) when signing non-segwit scripts. You are not ' +\n          'able to export this Psbt with toBuffer|toBase64|toHex since it is not ' +\n          'BIP174 compliant.\\n*********************\\nPROCEED WITH CAUTION!\\n' +\n          '*********************',\n      );\n    hash = unsignedTx.hashForSignature(\n      inputIndex,\n      meaningfulScript,\n      sighashType,\n    );\n  }\n  return {\n    script: meaningfulScript,\n    sighashType,\n    hash,\n  };\n}\nfunction getAllTaprootHashesForSig(inputIndex, input, inputs, cache) {\n  const allPublicKeys = [];\n  if (input.tapInternalKey) {\n    const outputKey = (0, bip371_1.tweakInternalPubKey)(inputIndex, input);\n    allPublicKeys.push(outputKey);\n  }\n  if (input.tapScriptSig) {\n    const tapScriptPubkeys = input.tapScriptSig.map(tss => tss.pubkey);\n    allPublicKeys.push(...tapScriptPubkeys);\n  }\n  const allHashes = allPublicKeys.map(pubicKey =>\n    getTaprootHashesForSig(inputIndex, input, inputs, pubicKey, cache),\n  );\n  return allHashes.flat();\n}\nfunction getTaprootHashesForSig(\n  inputIndex,\n  input,\n  inputs,\n  pubkey,\n  cache,\n  tapLeafHashToSign,\n  allowedSighashTypes,\n) {\n  const unsignedTx = cache.__TX;\n  const sighashType =\n    input.sighashType || transaction_1.Transaction.SIGHASH_DEFAULT;\n  checkSighashTypeAllowed(sighashType, allowedSighashTypes);\n  const prevOuts = inputs.map((i, index) =>\n    getScriptAndAmountFromUtxo(index, i, cache),\n  );\n  const signingScripts = prevOuts.map(o => o.script);\n  const values = prevOuts.map(o => o.value);\n  const hashes = [];\n  if (input.tapInternalKey && !tapLeafHashToSign) {\n    const outputKey = (0, bip371_1.tweakInternalPubKey)(inputIndex, input);\n    if ((0, bip371_1.toXOnly)(pubkey).equals(outputKey)) {\n      const tapKeyHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        sighashType,\n      );\n      hashes.push({ pubkey, hash: tapKeyHash });\n    }\n  }\n  const tapLeafHashes = (input.tapLeafScript || [])\n    .filter(tapLeaf => (0, psbtutils_1.pubkeyInScript)(pubkey, tapLeaf.script))\n    .map(tapLeaf => {\n      const hash = (0, bip341_1.tapleafHash)({\n        output: tapLeaf.script,\n        version: tapLeaf.leafVersion,\n      });\n      return Object.assign({ hash }, tapLeaf);\n    })\n    .filter(\n      tapLeaf => !tapLeafHashToSign || tapLeafHashToSign.equals(tapLeaf.hash),\n    )\n    .map(tapLeaf => {\n      const tapScriptHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        transaction_1.Transaction.SIGHASH_DEFAULT,\n        tapLeaf.hash,\n      );\n      return {\n        pubkey,\n        hash: tapScriptHash,\n        leafHash: tapLeaf.hash,\n      };\n    });\n  return hashes.concat(tapLeafHashes);\n}\nfunction checkSighashTypeAllowed(sighashType, sighashTypes) {\n  if (sighashTypes && sighashTypes.indexOf(sighashType) < 0) {\n    const str = sighashTypeToString(sighashType);\n    throw new Error(\n      `Sighash type is not allowed. Retry the sign method passing the ` +\n        `sighashTypes array of whitelisted types. Sighash type: ${str}`,\n    );\n  }\n}\nfunction getPayment(script, scriptType, partialSig) {\n  let payment;\n  switch (scriptType) {\n    case 'multisig':\n      const sigs = getSortedSigs(script, partialSig);\n      payment = payments.p2ms({\n        output: script,\n        signatures: sigs,\n      });\n      break;\n    case 'pubkey':\n      payment = payments.p2pk({\n        output: script,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'pubkeyhash':\n      payment = payments.p2pkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'witnesspubkeyhash':\n      payment = payments.p2wpkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n  }\n  return payment;\n}\nfunction getScriptFromInput(inputIndex, input, cache) {\n  const unsignedTx = cache.__TX;\n  const res = {\n    script: null,\n    isSegwit: false,\n    isP2SH: false,\n    isP2WSH: false,\n  };\n  res.isP2SH = !!input.redeemScript;\n  res.isP2WSH = !!input.witnessScript;\n  if (input.witnessScript) {\n    res.script = input.witnessScript;\n  } else if (input.redeemScript) {\n    res.script = input.redeemScript;\n  } else {\n    if (input.nonWitnessUtxo) {\n      const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n        cache,\n        input,\n        inputIndex,\n      );\n      const prevoutIndex = unsignedTx.ins[inputIndex].index;\n      res.script = nonWitnessUtxoTx.outs[prevoutIndex].script;\n    } else if (input.witnessUtxo) {\n      res.script = input.witnessUtxo.script;\n    }\n  }\n  if (input.witnessScript || (0, psbtutils_1.isP2WPKH)(res.script)) {\n    res.isSegwit = true;\n  }\n  return res;\n}\nfunction getSignersFromHD(inputIndex, inputs, hdKeyPair) {\n  const input = (0, utils_1.checkForInput)(inputs, inputIndex);\n  if (!input.bip32Derivation || input.bip32Derivation.length === 0) {\n    throw new Error('Need bip32Derivation to sign with HD');\n  }\n  const myDerivations = input.bip32Derivation\n    .map(bipDv => {\n      if (bipDv.masterFingerprint.equals(hdKeyPair.fingerprint)) {\n        return bipDv;\n      } else {\n        return;\n      }\n    })\n    .filter(v => !!v);\n  if (myDerivations.length === 0) {\n    throw new Error(\n      'Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint',\n    );\n  }\n  const signers = myDerivations.map(bipDv => {\n    const node = hdKeyPair.derivePath(bipDv.path);\n    if (!bipDv.pubkey.equals(node.publicKey)) {\n      throw new Error('pubkey did not match bip32Derivation');\n    }\n    return node;\n  });\n  return signers;\n}\nfunction getSortedSigs(script, partialSig) {\n  const p2ms = payments.p2ms({ output: script });\n  // for each pubkey in order of p2ms script\n  return p2ms.pubkeys\n    .map(pk => {\n      // filter partialSig array by pubkey being equal\n      return (\n        partialSig.filter(ps => {\n          return ps.pubkey.equals(pk);\n        })[0] || {}\n      ).signature;\n      // Any pubkey without a match will return undefined\n      // this last filter removes all the undefined items in the array.\n    })\n    .filter(v => !!v);\n}\nfunction scriptWitnessToWitnessStack(buffer) {\n  let offset = 0;\n  function readSlice(n) {\n    offset += n;\n    return buffer.slice(offset - n, offset);\n  }\n  function readVarInt() {\n    const vi = varuint.decode(buffer, offset);\n    offset += varuint.decode.bytes;\n    return vi;\n  }\n  function readVarSlice() {\n    return readSlice(readVarInt());\n  }\n  function readVector() {\n    const count = readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(readVarSlice());\n    return vector;\n  }\n  return readVector();\n}\nfunction sighashTypeToString(sighashType) {\n  let text =\n    sighashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY\n      ? 'SIGHASH_ANYONECANPAY | '\n      : '';\n  const sigMod = sighashType & 0x1f;\n  switch (sigMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      text += 'SIGHASH_ALL';\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n      text += 'SIGHASH_SINGLE';\n      break;\n    case transaction_1.Transaction.SIGHASH_NONE:\n      text += 'SIGHASH_NONE';\n      break;\n  }\n  return text;\n}\nfunction addNonWitnessTxCache(cache, input, inputIndex) {\n  cache.__NON_WITNESS_UTXO_BUF_CACHE[inputIndex] = input.nonWitnessUtxo;\n  const tx = transaction_1.Transaction.fromBuffer(input.nonWitnessUtxo);\n  cache.__NON_WITNESS_UTXO_TX_CACHE[inputIndex] = tx;\n  const self = cache;\n  const selfIndex = inputIndex;\n  delete input.nonWitnessUtxo;\n  Object.defineProperty(input, 'nonWitnessUtxo', {\n    enumerable: true,\n    get() {\n      const buf = self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex];\n      const txCache = self.__NON_WITNESS_UTXO_TX_CACHE[selfIndex];\n      if (buf !== undefined) {\n        return buf;\n      } else {\n        const newBuf = txCache.toBuffer();\n        self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = newBuf;\n        return newBuf;\n      }\n    },\n    set(data) {\n      self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = data;\n    },\n  });\n}\nfunction inputFinalizeGetAmts(inputs, tx, cache, mustFinalize) {\n  let inputAmount = 0;\n  inputs.forEach((input, idx) => {\n    if (mustFinalize && input.finalScriptSig)\n      tx.ins[idx].script = input.finalScriptSig;\n    if (mustFinalize && input.finalScriptWitness) {\n      tx.ins[idx].witness = scriptWitnessToWitnessStack(\n        input.finalScriptWitness,\n      );\n    }\n    if (input.witnessUtxo) {\n      inputAmount += input.witnessUtxo.value;\n    } else if (input.nonWitnessUtxo) {\n      const nwTx = nonWitnessUtxoTxFromCache(cache, input, idx);\n      const vout = tx.ins[idx].index;\n      const out = nwTx.outs[vout];\n      inputAmount += out.value;\n    }\n  });\n  const outputAmount = tx.outs.reduce((total, o) => total + o.value, 0);\n  const fee = inputAmount - outputAmount;\n  if (fee < 0) {\n    throw new Error('Outputs are spending more than Inputs');\n  }\n  const bytes = tx.virtualSize();\n  cache.__FEE = fee;\n  cache.__EXTRACTED_TX = tx;\n  cache.__FEE_RATE = Math.floor(fee / bytes);\n}\nfunction nonWitnessUtxoTxFromCache(cache, input, inputIndex) {\n  const c = cache.__NON_WITNESS_UTXO_TX_CACHE;\n  if (!c[inputIndex]) {\n    addNonWitnessTxCache(cache, input, inputIndex);\n  }\n  return c[inputIndex];\n}\nfunction getScriptFromUtxo(inputIndex, input, cache) {\n  const { script } = getScriptAndAmountFromUtxo(inputIndex, input, cache);\n  return script;\n}\nfunction getScriptAndAmountFromUtxo(inputIndex, input, cache) {\n  if (input.witnessUtxo !== undefined) {\n    return {\n      script: input.witnessUtxo.script,\n      value: input.witnessUtxo.value,\n    };\n  } else if (input.nonWitnessUtxo !== undefined) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const o = nonWitnessUtxoTx.outs[cache.__TX.ins[inputIndex].index];\n    return { script: o.script, value: o.value };\n  } else {\n    throw new Error(\"Can't find pubkey in input without Utxo data\");\n  }\n}\nfunction pubkeyInInput(pubkey, input, inputIndex, cache) {\n  const script = getScriptFromUtxo(inputIndex, input, cache);\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  return (0, psbtutils_1.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction pubkeyInOutput(pubkey, output, outputIndex, cache) {\n  const script = cache.__TX.outs[outputIndex].script;\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    outputIndex,\n    'output',\n    output.redeemScript,\n    output.witnessScript,\n  );\n  return (0, psbtutils_1.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction redeemFromFinalScriptSig(finalScript) {\n  if (!finalScript) return;\n  const decomp = bscript.decompile(finalScript);\n  if (!decomp) return;\n  const lastItem = decomp[decomp.length - 1];\n  if (\n    !Buffer.isBuffer(lastItem) ||\n    isPubkeyLike(lastItem) ||\n    isSigLike(lastItem)\n  )\n    return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction redeemFromFinalWitnessScript(finalScript) {\n  if (!finalScript) return;\n  const decomp = scriptWitnessToWitnessStack(finalScript);\n  const lastItem = decomp[decomp.length - 1];\n  if (isPubkeyLike(lastItem)) return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction compressPubkey(pubkey) {\n  if (pubkey.length === 65) {\n    const parity = pubkey[64] & 1;\n    const newKey = pubkey.slice(0, 33);\n    newKey[0] = 2 | parity;\n    return newKey;\n  }\n  return pubkey.slice();\n}\nfunction isPubkeyLike(buf) {\n  return buf.length === 33 && bscript.isCanonicalPubKey(buf);\n}\nfunction isSigLike(buf) {\n  return bscript.isCanonicalScriptSignature(buf);\n}\nfunction getMeaningfulScript(\n  script,\n  index,\n  ioType,\n  redeemScript,\n  witnessScript,\n) {\n  const isP2SH = (0, psbtutils_1.isP2SHScript)(script);\n  const isP2SHP2WSH =\n    isP2SH && redeemScript && (0, psbtutils_1.isP2WSHScript)(redeemScript);\n  const isP2WSH = (0, psbtutils_1.isP2WSHScript)(script);\n  if (isP2SH && redeemScript === undefined)\n    throw new Error('scriptPubkey is P2SH but redeemScript missing');\n  if ((isP2WSH || isP2SHP2WSH) && witnessScript === undefined)\n    throw new Error(\n      'scriptPubkey or redeemScript is P2WSH but witnessScript missing',\n    );\n  let meaningfulScript;\n  if (isP2SHP2WSH) {\n    meaningfulScript = witnessScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n    checkWitnessScript(index, redeemScript, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2WSH) {\n    meaningfulScript = witnessScript;\n    checkWitnessScript(index, script, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2SH) {\n    meaningfulScript = redeemScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n  } else {\n    meaningfulScript = script;\n  }\n  return {\n    meaningfulScript,\n    type: isP2SHP2WSH\n      ? 'p2sh-p2wsh'\n      : isP2SH\n      ? 'p2sh'\n      : isP2WSH\n      ? 'p2wsh'\n      : 'raw',\n  };\n}\nfunction checkInvalidP2WSH(script) {\n  if (\n    (0, psbtutils_1.isP2WPKH)(script) ||\n    (0, psbtutils_1.isP2SHScript)(script)\n  ) {\n    throw new Error('P2WPKH or P2SH can not be contained within P2WSH');\n  }\n}\nfunction classifyScript(script) {\n  if ((0, psbtutils_1.isP2WPKH)(script)) return 'witnesspubkeyhash';\n  if ((0, psbtutils_1.isP2PKH)(script)) return 'pubkeyhash';\n  if ((0, psbtutils_1.isP2MS)(script)) return 'multisig';\n  if ((0, psbtutils_1.isP2PK)(script)) return 'pubkey';\n  return 'nonstandard';\n}\nfunction range(n) {\n  return [...Array(n).keys()];\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","checkCache","cache","__UNSAFE_SIGN_NONSEGWIT","Error","hasSigs","neededSigs","partialSig","pubkeys","sigs","map","pkey","pubkey","compressPubkey","find","pSig","equals","filter","v","length","isFinalized","input","finalScriptSig","finalScriptWitness","bip32DerivationIsMine","root","d","masterFingerprint","fingerprint","derivePath","path","publicKey","check32Bit","num","Math","floor","checkInputsForPartialSig","inputs","action","forEach","bip371_1","isTaprootInput","throws","checkTaprootInputForSigs","psbtutils_1","checkInputForSig","checkPartialSigSighashes","sighashType","hashType","bscript","signature","decode","checkScriptForPubkey","script","pubkeyInScript","toString","checkTxEmpty","tx","ins","every","isEmpty","witness","checkTxForDupeIns","checkTxInputCache","key","bufferutils_1","reverseBuffer","Buffer","from","hash","index","__TX_IN_CACHE","scriptCheckerFactory","payment","paymentScriptName","inputIndex","scriptPubKey","redeemScript","ioType","redeemScriptOutput","redeem","output","getTxCacheValue","name","c","__FEE_RATE","__FEE","mustFinalize","__EXTRACTED_TX","__TX","clone","inputFinalizeGetAmts","getFinalScripts","isSegwit","isP2SH","isP2WSH","scriptType","classifyScript","p2ms","payments","m","getSortedSigs","signatures","p2pk","p2pkh","p2wpkh","p2wsh","p2sh","witnessStackToScriptWitness","getHashAndSighashType","sighashTypes","utils_1","checkForInput","getHashForSig","forValidate","unsignedTx","transaction_1","Transaction","SIGHASH_ALL","checkSighashTypeAllowed","nonWitnessUtxo","nonWitnessUtxoTx","nonWitnessUtxoTxFromCache","prevoutHash","utxoHash","getHash","prevout","outs","witnessUtxo","meaningfulScript","type","getMeaningfulScript","witnessScript","indexOf","hashForWitnessV0","value","isP2WPKH","signingScript","slice","undefined","console","warn","hashForSignature","getAllTaprootHashesForSig","allPublicKeys","tapInternalKey","outputKey","tweakInternalPubKey","push","tapScriptSig","tapScriptPubkeys","tss","allHashes","pubicKey","getTaprootHashesForSig","flat","tapLeafHashToSign","allowedSighashTypes","SIGHASH_DEFAULT","prevOuts","i","getScriptAndAmountFromUtxo","signingScripts","o","values","hashes","toXOnly","tapKeyHash","hashForWitnessV1","tapLeafHashes","tapLeafScript","tapLeaf","bip341_1","tapleafHash","version","leafVersion","Object","assign","tapScriptHash","leafHash","concat","text","SIGHASH_ANYONECANPAY","SIGHASH_SINGLE","SIGHASH_NONE","getSignersFromHD","hdKeyPair","bip32Derivation","myDerivations","bipDv","signers","node","pk","ps","scriptWitnessToWitnessStack","buffer","readVarInt","vi","varuint","offset","bytes","readVector","count","vector","n","addNonWitnessTxCache","__NON_WITNESS_UTXO_BUF_CACHE","fromBuffer","__NON_WITNESS_UTXO_TX_CACHE","defineProperty","enumerable","get","buf","newBuf","txCache","toBuffer","set","data","inputAmount","idx","nwTx","out","outputAmount","reduce","total","fee","virtualSize","getScriptFromUtxo","parity","newKey","isP2SHScript","isP2SHP2WSH","isP2WSHScript","checkRedeemScript","checkWitnessScript","checkInvalidP2WSH","isP2PKH","isP2MS","isP2PK","range","Array","keys","Psbt","bip174_1","address_1","networks_1","DEFAULT_OPTS","network","bitcoin","maximumFeeRate","fromBase64","opts","fromHex","psbtBase","transactionFromBuffer","psbt","__CACHE","constructor","PsbtTransaction","globalMap","setVersion","obj","attr","writable","locktime","setLocktime","cloneBuffer","sequence","address","fromOutputScript","_","combine","those","res","JSON","parse","stringify","setMaximumFeeRate","satoshiPerByte","setInputSequence","addInputs","inputDatas","inputData","addInput","arguments","checkTaprootInputFields","txIn","addOutputs","outputDatas","outputData","addOutput","toOutputScript","checkTaprootOutputFields","extractTransaction","disableFeeCheck","feeRate","getFeeRate","vsize","toFixed","getFee","finalizeAllInputs","finalizeInput","finalScriptsFunc","_finalizeTaprootInput","_finalizeInput","finalizeTaprootInput","tapLeafHashToFinalize","tapScriptFinalizer","updateInput","clearFinalizedInput","tapKeySig","p2tr","getInputType","decomp","decompile","finalScript","lastItem","isBuffer","isCanonicalPubKey","isCanonicalScriptSignature","sDecomp","result","mainType","inputHasPubkey","inputHasHDKey","derivationIsMine","some","outputHasPubkey","outputIndex","checkForOutput","outputs","outputHasHDKey","validateSignaturesOfAllInputs","validator","results","validateSignaturesOfInput","final","validateSignaturesOfTaprootInput","_validateSignaturesOfInput","mySigs","sig","hashCache","scriptCache","sighashCache","allHashses","h","isValidTapkeySig","tapSig","tapSigHash","isValidTapScriptSig","signAllInputsHD","signInputHD","err","signAllInputsHDAsync","Promise","resolve","reject","promises","signInputHDAsync","then","all","signer","signInput","signInputAsync","catch","signAllInputs","keyPair","signAllInputsAsync","entries","_signTaprootInput","_signInput","signTaprootInput","encode","sign","hashesForSig","checkTaprootHashesForSig","serializeTaprootSignature","signSchnorr","_signTaprootInputAsync","_signInputAsync","signTaprootInputAsync","tapLeafHash","signaturePromises","tapKeySigPromise","tapScriptHashes","tapScriptSigPromises","tsh","toHex","toBase64","updateGlobal","updateData","updateOutput","addUnknownKeyValToGlobal","keyVal","addUnknownKeyValToInput","addUnknownKeyValToOutput","getInputOutputCounts","inputCount","outputCount"]
}

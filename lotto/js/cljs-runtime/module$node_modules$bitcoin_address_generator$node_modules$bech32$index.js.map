{
"version":3,
"file":"module$node_modules$bitcoin_address_generator$node_modules$bech32$index.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/bitcoin-address-generator/node_modules/bech32/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoin_address_generator$node_modules$bech32$index\"] = function(global,require,module,exports) {\n'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","polymodStep","pre","b","prefixChk","prefix","chk","i","length","c","charCodeAt","v","__decode","str","LIMIT","lowered","toLowerCase","uppered","toUpperCase","split","lastIndexOf","slice","wordChars","words","charAt","ALPHABET_MAP","undefined","push","convert","data","inBits","outBits","pad","value","bits","maxV","result","z","x","ALPHABET","TypeError","decodeUnsafe","res","apply","arguments","decode","Error","encode","toWordsUnsafe","bytes","Array","isArray","toWords","fromWordsUnsafe","fromWords"]
}

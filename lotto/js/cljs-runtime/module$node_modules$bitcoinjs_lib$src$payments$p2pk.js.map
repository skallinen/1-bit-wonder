{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$p2pk.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEhHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,IAAR,CAAe,IAAK,EACpB,OAAMC,WAAaP,OAAA,CAAQ,gDAAR,CAAnB,CACMQ,QAAUR,OAAA,CAAQ,8CAAR,CADhB,CAEMS,QAAUT,OAAA,CAAQ,6CAAR,CAFhB,CAGMU,KAAOV,OAAA,CAAQ,qDAAR,CAHb,CAIMW,IAAMH,OAAQG,CAAAA,GAgEpBT,QAAQI,CAAAA,IAAR,CA7DAA,QAAa,CAACM,CAAD,CAAIC,IAAJ,CAAU,CACrB,GAAI,EAACD,CAAEE,CAAAA,KAAH;AAAaF,CAAEG,CAAAA,MAAf,EAA0BH,CAAEI,CAAAA,MAA5B,EAAuCJ,CAAEE,CAAAA,KAAzC,EAAmDF,CAAEK,CAAAA,SAArD,CAAJ,CACE,KAAM,KAAIC,SAAJ,CAAc,iBAAd,CAAN,CACFL,IAAA,CAAOV,MAAOgB,CAAAA,MAAP,CAAc,CAAEC,SAAU,CAAA,CAAZ,CAAd,CAAkCP,IAAlC,EAA0C,EAA1C,CACP,IAAIJ,OAAQY,CAAAA,SAAZ,EACE,CACEC,QAASb,OAAQY,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBd,OAAQY,CAAAA,SAAUlB,CAAAA,MAA1C,CADX,CAEEY,OAAQN,OAAQY,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBd,OAAQY,CAAAA,SAAUG,CAAAA,MAA1C,CAFV,CAGER,OAAQP,OAAQY,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBd,OAAQgB,CAAAA,OAAhC,CAHV,CAIER,UAAWR,OAAQY,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBf,OAAQkB,CAAAA,0BAAhC,CAJb,CAKEZ,MAAOL,OAAQY,CAAAA,SAAUE,CAAAA,KAAlB,CAAwBd,OAAQY,CAAAA,SAAUG,CAAAA,MAA1C,CALT,CADF,CAQEZ,CARF,CAUA,OAAMe,QAAUjB,IAAKL,CAAAA,KAAL,CAAW,EAAA,EAClBG,OAAQoB,CAAAA,SAAR,CAAkBhB,CAAEE,CAAAA,KAApB,CADO,CAAhB,CAIMe,EAAI,CAAEC,KAAM,MAAR;AAAgBR,QADVV,CAAEU,CAAAA,OACQA,EADGf,UAAWwB,CAAAA,OAC9B,CACVrB,KAAKsB,CAAAA,IAAL,CAAUH,CAAV,CAAa,QAAb,CAAuB,EAAA,EAAM,CAC3B,GAAKjB,CAAEI,CAAAA,MAAP,CACA,MAAOR,QAAQyB,CAAAA,OAAR,CAAgB,CAACrB,CAAEI,CAAAA,MAAH,CAAWL,GAAIuB,CAAAA,WAAf,CAAhB,CAFoB,CAA7B,CAIAxB,KAAKsB,CAAAA,IAAL,CAAUH,CAAV,CAAa,QAAb,CAAuB,EAAA,EAAM,CAC3B,GAAKjB,CAAEG,CAAAA,MAAP,CACA,MAAOH,EAAEG,CAAAA,MAAOoB,CAAAA,KAAT,CAAe,CAAf,CAAkB,CAAC,CAAnB,CAFoB,CAA7B,CAIAzB,KAAKsB,CAAAA,IAAL,CAAUH,CAAV,CAAa,WAAb,CAA0B,EAAA,EAAM,CAC9B,GAAKjB,CAAEE,CAAAA,KAAP,CACA,MAAOa,QAAA,EAAA,CAAU,CAAV,CAFuB,CAAhC,CAIAjB,KAAKsB,CAAAA,IAAL,CAAUH,CAAV,CAAa,OAAb,CAAsB,EAAA,EAAM,CAC1B,GAAKjB,CAAEK,CAAAA,SAAP,CACA,MAAOT,QAAQyB,CAAAA,OAAR,CAAgB,CAACrB,CAAEK,CAAAA,SAAH,CAAhB,CAFmB,CAA5B,CAIAP,KAAKsB,CAAAA,IAAL,CAAUH,CAAV,CAAa,SAAb,CAAwB,EAAA,EAAM,CAC5B,GAAKA,CAAEf,CAAAA,KAAP,CACA,MAAO,EAFqB,CAA9B,CAKA,IAAID,IAAKO,CAAAA,QAAT,CAAmB,CACjB,GAAIR,CAAEG,CAAAA,MAAN,CAAc,CACZ,GAAIH,CAAEG,CAAAA,MAAF,CAASH,CAAEG,CAAAA,MAAOqB,CAAAA,MAAlB,CAA2B,CAA3B,CAAJ,GAAsCzB,GAAIuB,CAAAA,WAA1C,CACE,KAAM,KAAIhB,SAAJ,CAAc,mBAAd,CAAN;AACF,GAAI,CAAC,GAAIT,OAAQgB,CAAAA,OAAZ,EAAqBI,CAAEb,CAAAA,MAAvB,CAAL,CACE,KAAM,KAAIE,SAAJ,CAAc,0BAAd,CAAN,CACF,GAAIN,CAAEI,CAAAA,MAAN,EAAgB,CAACJ,CAAEI,CAAAA,MAAOqB,CAAAA,MAAT,CAAgBR,CAAEb,CAAAA,MAAlB,CAAjB,CACE,KAAM,KAAIE,SAAJ,CAAc,iBAAd,CAAN,CANU,CAQd,GAAIN,CAAEK,CAAAA,SAAN,EACML,CAAEE,CAAAA,KADR,EACiB,CAACF,CAAEE,CAAAA,KAAMuB,CAAAA,MAAR,CAAeR,CAAEf,CAAAA,KAAjB,CADlB,CAEI,KAAM,KAAII,SAAJ,CAAc,oBAAd,CAAN,CAEJ,GAAIN,CAAEE,CAAAA,KAAN,CAAa,CACX,GAAyB,CAAzB,GAAIa,OAAA,EAAUS,CAAAA,MAAd,CAA4B,KAAM,KAAIlB,SAAJ,CAAc,kBAAd,CAAN,CAC5B,GAAI,CAACV,OAAQkB,CAAAA,0BAAR,CAAmCG,CAAEZ,CAAAA,SAArC,CAAL,CACE,KAAM,KAAIC,SAAJ,CAAc,6BAAd,CAAN,CAHS,CAbI,CAmBnB,MAAOf,OAAOgB,CAAAA,MAAP,CAAcU,CAAd,CAAiBjB,CAAjB,CA3Dc,CAXyF;",
"sources":["node_modules/bitcoinjs-lib/src/payments/p2pk.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$p2pk\"] = function(global,require,module,exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2pk = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\n// input: {signature}\n// output: {pubKey} OP_CHECKSIG\nfunction p2pk(a, opts) {\n  if (!a.input && !a.output && !a.pubkey && !a.input && !a.signature)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pk', network };\n  lazy.prop(o, 'output', () => {\n    if (!a.pubkey) return;\n    return bscript.compile([a.pubkey, OPS.OP_CHECKSIG]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.output) return;\n    return a.output.slice(1, -1);\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signature) return;\n    return bscript.compile([a.signature]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      if (a.output[a.output.length - 1] !== OPS.OP_CHECKSIG)\n        throw new TypeError('Output is invalid');\n      if (!(0, types_1.isPoint)(o.pubkey))\n        throw new TypeError('Output pubkey is invalid');\n      if (a.pubkey && !a.pubkey.equals(o.pubkey))\n        throw new TypeError('Pubkey mismatch');\n    }\n    if (a.signature) {\n      if (a.input && !a.input.equals(o.input))\n        throw new TypeError('Signature mismatch');\n    }\n    if (a.input) {\n      if (_chunks().length !== 1) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(o.signature))\n        throw new TypeError('Input has invalid signature');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pk = p2pk;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","p2pk","networks_1","bscript","types_1","lazy","OPS","a","opts","input","output","pubkey","signature","TypeError","assign","validate","typeforce","network","maybe","Buffer","isPoint","isCanonicalScriptSignature","_chunks","decompile","o","name","bitcoin","prop","compile","OP_CHECKSIG","slice","length","equals"]
}

shadow$provide.module$node_modules$readable_stream$lib$internal$streams$pipeline=function(global,require,module,exports){function once(callback){var called=!1;return function(){called||(called=!0,callback.apply(void 0,arguments))}}function noop(err){if(err)throw err;}function destroyer(stream,reading,writing,callback){callback=once(callback);var closed=!1;stream.on("close",function(){closed=!0});void 0===eos&&(eos=require("module$node_modules$readable_stream$lib$internal$streams$end_of_stream"));
eos(stream,{readable:reading,writable:writing},function(err){if(err)return callback(err);closed=!0;callback()});var destroyed=!1;return function(err){if(!closed&&!destroyed){destroyed=!0;if(stream.setHeader&&"function"===typeof stream.abort)return stream.abort();if("function"===typeof stream.destroy)return stream.destroy();callback(err||new ERR_STREAM_DESTROYED("pipe"))}}}function call(fn){fn()}function pipe(from,to){return from.pipe(to)}var eos;global=require("module$node_modules$readable_stream$errors").codes;
var ERR_MISSING_ARGS=global.ERR_MISSING_ARGS,ERR_STREAM_DESTROYED=global.ERR_STREAM_DESTROYED;module.exports=function(){for(var _len=arguments.length,streams=Array(_len),_key=0;_key<_len;_key++)streams[_key]=arguments[_key];var callback=streams.length?"function"!==typeof streams[streams.length-1]?noop:streams.pop():noop;Array.isArray(streams[0])&&(streams=streams[0]);if(2>streams.length)throw new ERR_MISSING_ARGS("streams");var error,destroys=streams.map(function(stream,i){var reading=i<streams.length-
1;return destroyer(stream,reading,0<i,function(err){error||(error=err);err&&destroys.forEach(call);reading||(destroys.forEach(call),callback(error))})});return streams.reduce(pipe)}}
//# sourceMappingURL=module$node_modules$readable_stream$lib$internal$streams$pipeline.js.map

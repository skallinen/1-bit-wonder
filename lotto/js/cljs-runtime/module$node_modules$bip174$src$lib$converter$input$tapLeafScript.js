shadow$provide.module$node_modules$bip174$src$lib$converter$input$tapLeafScript=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const typeFields_1=require("module$node_modules$bip174$src$lib$typeFields");exports.decode=function(keyVal){if(keyVal.key[0]!==typeFields_1.InputTypes.TAP_LEAF_SCRIPT)throw Error("Decode Error: could not decode tapLeafScript with key 0x"+keyVal.key.toString("hex"));
if(0!==(keyVal.key.length-2)%32)throw Error("Decode Error: tapLeafScript has invalid control block in key 0x"+keyVal.key.toString("hex"));const leafVersion=keyVal.value[keyVal.value.length-1];if((keyVal.key[1]&254)!==leafVersion)throw Error("Decode Error: tapLeafScript bad leaf version in key 0x"+keyVal.key.toString("hex"));const script=keyVal.value.slice(0,-1);return{controlBlock:keyVal.key.slice(1),script,leafVersion}};exports.encode=function(tScript){const head=Buffer.from([typeFields_1.InputTypes.TAP_LEAF_SCRIPT]),
verBuf=Buffer.from([tScript.leafVersion]);return{key:Buffer.concat([head,tScript.controlBlock]),value:Buffer.concat([tScript.script,verBuf])}};exports.expected="{ controlBlock: Buffer; leafVersion: number, script: Buffer; }";exports.check=function(data){return Buffer.isBuffer(data.controlBlock)&&0===(data.controlBlock.length-1)%32&&(data.controlBlock[0]&254)===data.leafVersion&&Buffer.isBuffer(data.script)};exports.canAddToArray=function(array,item,dupeSet){const dupeString=item.controlBlock.toString("hex");
if(dupeSet.has(dupeString))return!1;dupeSet.add(dupeString);return 0===array.filter(v=>v.controlBlock.equals(item.controlBlock)).length}}
//# sourceMappingURL=module$node_modules$bip174$src$lib$converter$input$tapLeafScript.js.map

{
"version":3,
"file":"module$node_modules$bip174$src$lib$converter$shared$bip32Derivation.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/bip174/src/lib/converter/shared/bip32Derivation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip174$src$lib$converter$shared$bip32Derivation\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst range = n => [...Array(n).keys()];\nconst isValidDERKey = pubkey =>\n  (pubkey.length === 33 && [2, 3].includes(pubkey[0])) ||\n  (pubkey.length === 65 && 4 === pubkey[0]);\nfunction makeConverter(TYPE_BYTE, isValidPubkey = isValidDERKey) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode bip32Derivation with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    const pubkey = keyVal.key.slice(1);\n    if (!isValidPubkey(pubkey)) {\n      throw new Error(\n        'Decode Error: bip32Derivation has invalid pubkey in key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    if ((keyVal.value.length / 4) % 1 !== 0) {\n      throw new Error(\n        'Decode Error: Input BIP32_DERIVATION value length should be multiple of 4',\n      );\n    }\n    const data = {\n      masterFingerprint: keyVal.value.slice(0, 4),\n      pubkey,\n      path: 'm',\n    };\n    for (const i of range(keyVal.value.length / 4 - 1)) {\n      const val = keyVal.value.readUInt32LE(i * 4 + 4);\n      const isHard = !!(val & 0x80000000);\n      const idx = val & 0x7fffffff;\n      data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n    }\n    return data;\n  }\n  function encode(data) {\n    const head = Buffer.from([TYPE_BYTE]);\n    const key = Buffer.concat([head, data.pubkey]);\n    const splitPath = data.path.split('/');\n    const value = Buffer.allocUnsafe(splitPath.length * 4);\n    data.masterFingerprint.copy(value, 0);\n    let offset = 4;\n    splitPath.slice(1).forEach(level => {\n      const isHard = level.slice(-1) === \"'\";\n      let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n      if (isHard) num += 0x80000000;\n      value.writeUInt32LE(num, offset);\n      offset += 4;\n    });\n    return {\n      key,\n      value,\n    };\n  }\n  const expected =\n    '{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }';\n  function check(data) {\n    return (\n      Buffer.isBuffer(data.pubkey) &&\n      Buffer.isBuffer(data.masterFingerprint) &&\n      typeof data.path === 'string' &&\n      isValidPubkey(data.pubkey) &&\n      data.masterFingerprint.length === 4\n    );\n  }\n  function canAddToArray(array, item, dupeSet) {\n    const dupeString = item.pubkey.toString('hex');\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return array.filter(v => v.pubkey.equals(item.pubkey)).length === 0;\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAddToArray,\n  };\n}\nexports.makeConverter = makeConverter;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","isValidDERKey","pubkey","length","includes","makeConverter","TYPE_BYTE","isValidPubkey","decode","keyVal","key","Error","toString","slice","data","masterFingerprint","path","i","Array","keys","val","readUInt32LE","isHard","encode","head","from","concat","splitPath","split","allocUnsafe","copy","offset","forEach","level","num","parseInt","writeUInt32LE","check","isBuffer","expected","canAddToArray","array","item","dupeSet","dupeString","has","add","filter","v","equals"]
}

shadow$provide.module$node_modules$bip174$src$lib$converter$input$partialSig=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const typeFields_1=require("module$node_modules$bip174$src$lib$typeFields");exports.decode=function(keyVal){if(keyVal.key[0]!==typeFields_1.InputTypes.PARTIAL_SIG)throw Error("Decode Error: could not decode partialSig with key 0x"+keyVal.key.toString("hex"));
if(34!==keyVal.key.length&&66!==keyVal.key.length||![2,3,4].includes(keyVal.key[1]))throw Error("Decode Error: partialSig has invalid pubkey in key 0x"+keyVal.key.toString("hex"));return{pubkey:keyVal.key.slice(1),signature:keyVal.value}};exports.encode=function(pSig){const head=Buffer.from([typeFields_1.InputTypes.PARTIAL_SIG]);return{key:Buffer.concat([head,pSig.pubkey]),value:pSig.signature}};exports.expected="{ pubkey: Buffer; signature: Buffer; }";exports.check=function(data){var JSCompiler_temp;
if(JSCompiler_temp=Buffer.isBuffer(data.pubkey)&&Buffer.isBuffer(data.signature)&&[33,65].includes(data.pubkey.length)&&[2,3,4].includes(data.pubkey[0]))if(data=data.signature,!Buffer.isBuffer(data)||9>data.length||48!==data[0]||data.length!==data[1]+3||2!==data[2])JSCompiler_temp=!1;else if(JSCompiler_temp=data[3],33<JSCompiler_temp||1>JSCompiler_temp||2!==data[3+JSCompiler_temp+1])JSCompiler_temp=!1;else{var sLen=data[3+JSCompiler_temp+2];JSCompiler_temp=33<sLen||1>sLen||data.length!==3+JSCompiler_temp+
2+sLen+2?!1:!0}return JSCompiler_temp};exports.canAddToArray=function(array,item,dupeSet){const dupeString=item.pubkey.toString("hex");if(dupeSet.has(dupeString))return!1;dupeSet.add(dupeString);return 0===array.filter(v=>v.pubkey.equals(item.pubkey)).length}}
//# sourceMappingURL=module$node_modules$bip174$src$lib$converter$input$partialSig.js.map

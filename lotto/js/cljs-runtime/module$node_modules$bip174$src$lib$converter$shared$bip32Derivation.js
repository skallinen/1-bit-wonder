shadow$provide.module$node_modules$bip174$src$lib$converter$shared$bip32Derivation=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const isValidDERKey=pubkey=>33===pubkey.length&&[2,3].includes(pubkey[0])||65===pubkey.length&&4===pubkey[0];exports.makeConverter=function(TYPE_BYTE,isValidPubkey=isValidDERKey){return{decode:function(keyVal){if(keyVal.key[0]!==TYPE_BYTE)throw Error("Decode Error: could not decode bip32Derivation with key 0x"+
keyVal.key.toString("hex"));var pubkey=keyVal.key.slice(1);if(!isValidPubkey(pubkey))throw Error("Decode Error: bip32Derivation has invalid pubkey in key 0x"+keyVal.key.toString("hex"));if(0!==keyVal.value.length/4%1)throw Error("Decode Error: Input BIP32_DERIVATION value length should be multiple of 4");pubkey={masterFingerprint:keyVal.value.slice(0,4),pubkey,path:"m"};for(const i of[...Array(keyVal.value.length/4-1).keys()]){const val=keyVal.value.readUInt32LE(4*i+4),isHard=!!(val&2147483648);pubkey.path+=
"/"+(val&2147483647).toString(10)+(isHard?"'":"")}return pubkey},encode:function(data){var head=Buffer.from([TYPE_BYTE]);head=Buffer.concat([head,data.pubkey]);const splitPath=data.path.split("/"),value=Buffer.allocUnsafe(4*splitPath.length);data.masterFingerprint.copy(value,0);let offset=4;splitPath.slice(1).forEach(level=>{const isHard="'"===level.slice(-1);level=2147483647&parseInt(isHard?level.slice(0,-1):level,10);isHard&&(level+=2147483648);value.writeUInt32LE(level,offset);offset+=4});return{key:head,
value}},check:function(data){return Buffer.isBuffer(data.pubkey)&&Buffer.isBuffer(data.masterFingerprint)&&"string"===typeof data.path&&isValidPubkey(data.pubkey)&&4===data.masterFingerprint.length},expected:"{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }",canAddToArray:function(array,item,dupeSet){const dupeString=item.pubkey.toString("hex");if(dupeSet.has(dupeString))return!1;dupeSet.add(dupeString);return 0===array.filter(v=>v.pubkey.equals(item.pubkey)).length}}}}
//# sourceMappingURL=module$node_modules$bip174$src$lib$converter$shared$bip32Derivation.js.map

{
"version":3,
"file":"module$node_modules$bip174$src$lib$parser$toBuffer.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/bip174/src/lib/parser/toBuffer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip174$src$lib$parser$toBuffer\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst convert = require('../converter');\nconst tools_1 = require('../converter/tools');\nfunction psbtToBuffer({ globalMap, inputs, outputs }) {\n  const { globalKeyVals, inputKeyVals, outputKeyVals } = psbtToKeyVals({\n    globalMap,\n    inputs,\n    outputs,\n  });\n  const globalBuffer = tools_1.keyValsToBuffer(globalKeyVals);\n  const keyValsOrEmptyToBuffer = keyVals =>\n    keyVals.length === 0\n      ? [Buffer.from([0])]\n      : keyVals.map(tools_1.keyValsToBuffer);\n  const inputBuffers = keyValsOrEmptyToBuffer(inputKeyVals);\n  const outputBuffers = keyValsOrEmptyToBuffer(outputKeyVals);\n  const header = Buffer.allocUnsafe(5);\n  header.writeUIntBE(0x70736274ff, 0, 5);\n  return Buffer.concat(\n    [header, globalBuffer].concat(inputBuffers, outputBuffers),\n  );\n}\nexports.psbtToBuffer = psbtToBuffer;\nconst sortKeyVals = (a, b) => {\n  return a.key.compare(b.key);\n};\nfunction keyValsFromMap(keyValMap, converterFactory) {\n  const keyHexSet = new Set();\n  const keyVals = Object.entries(keyValMap).reduce((result, [key, value]) => {\n    if (key === 'unknownKeyVals') return result;\n    // We are checking for undefined anyways. So ignore TS error\n    // @ts-ignore\n    const converter = converterFactory[key];\n    if (converter === undefined) return result;\n    const encodedKeyVals = (Array.isArray(value) ? value : [value]).map(\n      converter.encode,\n    );\n    const keyHexes = encodedKeyVals.map(kv => kv.key.toString('hex'));\n    keyHexes.forEach(hex => {\n      if (keyHexSet.has(hex))\n        throw new Error('Serialize Error: Duplicate key: ' + hex);\n      keyHexSet.add(hex);\n    });\n    return result.concat(encodedKeyVals);\n  }, []);\n  // Get other keyVals that have not yet been gotten\n  const otherKeyVals = keyValMap.unknownKeyVals\n    ? keyValMap.unknownKeyVals.filter(keyVal => {\n        return !keyHexSet.has(keyVal.key.toString('hex'));\n      })\n    : [];\n  return keyVals.concat(otherKeyVals).sort(sortKeyVals);\n}\nfunction psbtToKeyVals({ globalMap, inputs, outputs }) {\n  // First parse the global keyVals\n  // Get any extra keyvals to pass along\n  return {\n    globalKeyVals: keyValsFromMap(globalMap, convert.globals),\n    inputKeyVals: inputs.map(i => keyValsFromMap(i, convert.inputs)),\n    outputKeyVals: outputs.map(o => keyValsFromMap(o, convert.outputs)),\n  };\n}\nexports.psbtToKeyVals = psbtToKeyVals;\n\n};"],
"names":["shadow$provide","global","require","module","exports","keyValsFromMap","keyValMap","converterFactory","keyHexSet","Set","keyVals","Object","entries","reduce","result","key","value","converter","undefined","encodedKeyVals","map","Array","isArray","encode","keyHexes","kv","toString","forEach","hex","has","Error","add","concat","otherKeyVals","unknownKeyVals","filter","keyVal","sort","sortKeyVals","psbtToKeyVals","globalMap","inputs","outputs","globalKeyVals","convert","globals","inputKeyVals","i","outputKeyVals","o","Buffer","defineProperty","tools_1","psbtToBuffer","globalBuffer","keyValsToBuffer","keyValsOrEmptyToBuffer","length","from","inputBuffers","outputBuffers","header","allocUnsafe","writeUIntBE","a","b","compare"]
}

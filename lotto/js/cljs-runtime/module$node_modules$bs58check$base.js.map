{
"version":3,
"file":"module$node_modules$bs58check$base.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/F,IAAIC,OAASH,OAAA,CAAQ,gCAAR,CAAb,CACII,OAASJ,OAAA,CAAQ,uCAAR,CAAuBI,CAAAA,MAEpCH,OAAOC,CAAAA,OAAP,CAAiBG,QAAS,CAACC,UAAD,CAAa,CAWrCC,QAASA,UAAU,CAACC,MAAD,CAAS,CAC1B,IAAIC,QAAUD,MAAOE,CAAAA,KAAP,CAAa,CAAb,CAAgB,CAAC,CAAjB,CACVC,OAAAA,CAAWH,MAAOE,CAAAA,KAAP,CAAa,CAAC,CAAd,CACf,KAAIE,YAAcN,UAAA,CAAWG,OAAX,CAElB,IAAI,EAAAE,MAAA,CAAS,CAAT,CAAA,CAAcC,WAAA,CAAY,CAAZ,CAAd,CACAD,MAAA,CAAS,CAAT,CADA,CACcC,WAAA,CAAY,CAAZ,CADd,CAEAD,MAAA,CAAS,CAAT,CAFA,CAEcC,WAAA,CAAY,CAAZ,CAFd,CAGAD,MAAA,CAAS,CAAT,CAHA,CAGcC,WAAA,CAAY,CAAZ,CAHd,CAAJ,CAKA,MAAOH,QAVmB,CA4B5B,MAAO,CACLI,OAtCFA,QAAgB,CAACJ,OAAD,CAAU,CACxB,IAAIE;AAAWL,UAAA,CAAWG,OAAX,CAEf,OAAON,OAAOU,CAAAA,MAAP,CAAcT,MAAOU,CAAAA,MAAP,CAAc,CACjCL,OADiC,CAEjCE,QAFiC,CAAd,CAGlBF,OAAQM,CAAAA,MAHU,CAGD,CAHC,CAAd,CAHiB,CAqCnB,CAELC,OATFA,QAAgB,CAACC,MAAD,CAAS,CACnBT,MAAAA,CAASL,MAAOa,CAAAA,MAAP,CAAcC,MAAd,CACTR,OAAAA,CAAUF,SAAA,CAAUC,MAAV,CAAkBF,UAAlB,CACd,IAAI,CAACG,MAAL,CAAc,KAAUS,MAAJ,CAAU,kBAAV,CAAN,CACd,MAAOT,OAJgB,CAOlB,CAGLU,aAjBFA,QAAsB,CAACF,MAAD,CAAS,CAE7B,GADIT,MACJ,CADaL,MAAOgB,CAAAA,YAAP,CAAoBF,MAApB,CACb,CAEA,MAAOV,UAAA,CAAUC,MAAV,CAJsB,CAcxB,CAvC8B,CANwD;",
"sources":["node_modules/bs58check/base.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bs58check$base\"] = function(global,require,module,exports) {\n'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","base58","Buffer","module.exports","checksumFn","decodeRaw","buffer","payload","slice","checksum","newChecksum","encode","concat","length","decode","string","Error","decodeUnsafe"]
}

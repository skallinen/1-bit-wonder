{
"version":3,
"file":"module$node_modules$bip174$src$lib$converter$shared$tapInternalKey.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kEAAA,CAAuF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC/H,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAAkBG,CAAAA,MAC/B,aACAC,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAAEI,MAAO,CAAA,CAAT,CAA7C,CAqCAJ,QAAQK,CAAAA,aAAR,CApCAA,QAAsB,CAACC,SAAD,CAAY,CA4BhC,MAAO,CACLC,OA5BFA,QAAe,CAACC,MAAD,CAAS,CACtB,GAAIA,MAAOC,CAAAA,GAAP,CAAW,CAAX,CAAJ,GAAsBH,SAAtB,EAAyD,CAAzD,GAAmCE,MAAOC,CAAAA,GAAIC,CAAAA,MAA9C,CACE,KAAUC,MAAJ,CACJ,2DADI,CAEFH,MAAOC,CAAAA,GAAIG,CAAAA,QAAX,CAAoB,KAApB,CAFE,CAAN,CAKF,GAA4B,EAA5B,GAAIJ,MAAOJ,CAAAA,KAAMM,CAAAA,MAAjB,CACE,KAAUC,MAAJ,CACJ,0DADI,CAAN;AAIF,MAAOH,OAAOJ,CAAAA,KAZQ,CA2BjB,CAELS,OAfFA,QAAe,CAACT,KAAD,CAAQ,CAErB,MAAO,CAAEK,IADGR,MAAOa,CAAAA,IAAPL,CAAY,CAACH,SAAD,CAAZG,CACL,CAAOL,KAAP,CAFc,CAahB,CAGLW,MAXFA,QAAc,CAACC,IAAD,CAAO,CACnB,MAAOf,OAAOgB,CAAAA,QAAP,CAAgBD,IAAhB,CAAP,EAAgD,EAAhD,GAAgCA,IAAKN,CAAAA,MADlB,CAQd,CAILQ,SAbeA,QASV,CAKLC,OAVFA,QAAe,CAACC,WAAD,CAAcC,OAAd,CAAuB,CACpC,MACE,CAAC,CAACD,WADJ,EACmB,CAAC,CAACC,OADrB,EAC+DC,IAAAA,EAD/D,GACgCF,WAAYG,CAAAA,cAFR,CAK/B,CA5ByB,CAJ6F;",
"sources":["node_modules/bip174/src/lib/converter/shared/tapInternalKey.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip174$src$lib$converter$shared$tapInternalKey\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE || keyVal.key.length !== 1) {\n      throw new Error(\n        'Decode Error: could not decode tapInternalKey with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    if (keyVal.value.length !== 32) {\n      throw new Error(\n        'Decode Error: tapInternalKey not a 32-byte x-only pubkey',\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(value) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return { key, value };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data) && data.length === 32;\n  }\n  function canAdd(currentData, newData) {\n    return (\n      !!currentData && !!newData && currentData.tapInternalKey === undefined\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\nexports.makeConverter = makeConverter;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","makeConverter","TYPE_BYTE","decode","keyVal","key","length","Error","toString","encode","from","check","data","isBuffer","expected","canAdd","currentData","newData","undefined","tapInternalKey"]
}

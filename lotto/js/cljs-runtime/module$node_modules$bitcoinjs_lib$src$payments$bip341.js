shadow$provide.module$node_modules$bitcoinjs_lib$src$payments$bip341=function(global,require,module,exports){function toHashTree(scriptTree){if((0,types_1.isTapleaf)(scriptTree))return{hash:tapleafHash(scriptTree)};scriptTree=[toHashTree(scriptTree[0]),toHashTree(scriptTree[1])];scriptTree.sort((a,b)=>a.hash.compare(b.hash));const [left,right]=scriptTree;return{hash:tapBranchHash(left.hash,right.hash),left,right}}function findScriptPath(node,hash){if("left"in node&&"right"in node){const leftPath=
findScriptPath(node.left,hash);if(void 0!==leftPath)return[...leftPath,node.right.hash];hash=findScriptPath(node.right,hash);if(void 0!==hash)return[...hash,node.left.hash]}else if(node.hash.equals(hash))return[]}function tapleafHash(leaf){var JSCompiler_temp_const=bcrypto,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.taggedHash,JSCompiler_temp_const$jscomp$1=buffer_1.Buffer,JSCompiler_temp_const$jscomp$2=JSCompiler_temp_const$jscomp$1.concat,JSCompiler_temp_const$jscomp$3=buffer_1.Buffer.from([leaf.version||
exports.LEAF_VERSION_TAPSCRIPT]);leaf=leaf.output;var varintLen=bufferutils_1.varuint.encodingLength(leaf.length);varintLen=buffer_1.Buffer.allocUnsafe(varintLen);bufferutils_1.varuint.encode(leaf.length,varintLen);leaf=buffer_1.Buffer.concat([varintLen,leaf]);return JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,"TapLeaf",JSCompiler_temp_const$jscomp$2.call(JSCompiler_temp_const$jscomp$1,[JSCompiler_temp_const$jscomp$3,leaf]))}function tapTweakHash(pubKey,h){return bcrypto.taggedHash("TapTweak",
buffer_1.Buffer.concat(h?[pubKey,h]:[pubKey]))}function tapBranchHash(a,b){return bcrypto.taggedHash("TapBranch",buffer_1.Buffer.concat([a,b]))}Object.defineProperty(exports,"__esModule",{value:!0});exports.tweakKey=exports.tapTweakHash=exports.tapleafHash=exports.findScriptPath=exports.toHashTree=exports.rootHashFromPath=exports.MAX_TAPTREE_DEPTH=exports.LEAF_VERSION_TAPSCRIPT=void 0;const buffer_1=require("module$node_modules$buffer$index"),ecc_lib_1=require("module$node_modules$bitcoinjs_lib$src$ecc_lib"),
bcrypto=require("module$node_modules$bitcoinjs_lib$src$crypto"),bufferutils_1=require("module$node_modules$bitcoinjs_lib$src$bufferutils"),types_1=require("module$node_modules$bitcoinjs_lib$src$types");exports.LEAF_VERSION_TAPSCRIPT=192;exports.MAX_TAPTREE_DEPTH=128;exports.rootHashFromPath=function(controlBlock,leafHash){if(33>controlBlock.length)throw new TypeError(`The control-block length is too small. Got ${controlBlock.length}, expected min 33.`);const m=(controlBlock.length-33)/32;for(let j=
0;j<m;j++){const ej=controlBlock.slice(33+32*j,65+32*j);leafHash=0>leafHash.compare(ej)?tapBranchHash(leafHash,ej):tapBranchHash(ej,leafHash)}return leafHash};exports.toHashTree=toHashTree;exports.findScriptPath=findScriptPath;exports.tapleafHash=tapleafHash;exports.tapTweakHash=tapTweakHash;exports.tweakKey=function(pubKey,h){if(!buffer_1.Buffer.isBuffer(pubKey)||32!==pubKey.length||h&&32!==h.length)return null;h=tapTweakHash(pubKey,h);return(pubKey=(0,ecc_lib_1.getEccLib)().xOnlyPointAddTweak(pubKey,
h))&&null!==pubKey.xOnlyPubkey?{parity:pubKey.parity,x:buffer_1.Buffer.from(pubKey.xOnlyPubkey)}:null}}
//# sourceMappingURL=module$node_modules$bitcoinjs_lib$src$payments$bip341.js.map

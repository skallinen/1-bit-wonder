{
"version":3,
"file":"module$node_modules$elliptic$lib$elliptic$curve$mont.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/elliptic/lib/elliptic/curve/mont.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$elliptic$lib$elliptic$curve$mont\"] = function(global,require,module,exports) {\n'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","MontCurve","conf","Base","call","a","toRed","BN","red","b","i4","redInvm","two","a24","redMul","redAdd","Point","curve","x","z","BasePoint","one","zero","inherits","utils","prototype","validate","MontCurve.prototype.validate","point","normalize","x2","redSqr","rhs","redSqrt","y","cmp","decodePoint","MontCurve.prototype.decodePoint","bytes","enc","toArray","MontCurve.prototype.point","pointFromJSON","MontCurve.prototype.pointFromJSON","obj","fromJSON","precompute","Point.prototype.precompute","_encode","Point.prototype._encode","getX","p","byteLength","Point.fromJSON","inspect","Point.prototype.inspect","isInfinity","fromRed","toString","Point.prototype.isInfinity","cmpn","dbl","Point.prototype.dbl","aa","bb","redSub","c","nx","nz","add","Point.prototype.add","Error","diffAdd","Point.prototype.diffAdd","diff","da","d","cb","redISub","mul","Point.prototype.mul","k","t","clone","bits","iushrn","push","andln","i","length","mulAdd","Point.prototype.mulAdd","jumlAdd","Point.prototype.jumlAdd","eq","Point.prototype.eq","other","Point.prototype.normalize","Point.prototype.getX"]
}

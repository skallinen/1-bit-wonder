{
"version":3,
"file":"module$node_modules$bip174$src$lib$psbt.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/bip174/src/lib/psbt.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip174$src$lib$psbt\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst combiner_1 = require('./combiner');\nconst parser_1 = require('./parser');\nconst typeFields_1 = require('./typeFields');\nconst utils_1 = require('./utils');\nclass Psbt {\n  constructor(tx) {\n    this.inputs = [];\n    this.outputs = [];\n    this.globalMap = {\n      unsignedTx: tx,\n    };\n  }\n  static fromBase64(data, txFromBuffer) {\n    const buffer = Buffer.from(data, 'base64');\n    return this.fromBuffer(buffer, txFromBuffer);\n  }\n  static fromHex(data, txFromBuffer) {\n    const buffer = Buffer.from(data, 'hex');\n    return this.fromBuffer(buffer, txFromBuffer);\n  }\n  static fromBuffer(buffer, txFromBuffer) {\n    const results = parser_1.psbtFromBuffer(buffer, txFromBuffer);\n    const psbt = new this(results.globalMap.unsignedTx);\n    Object.assign(psbt, results);\n    return psbt;\n  }\n  toBase64() {\n    const buffer = this.toBuffer();\n    return buffer.toString('base64');\n  }\n  toHex() {\n    const buffer = this.toBuffer();\n    return buffer.toString('hex');\n  }\n  toBuffer() {\n    return parser_1.psbtToBuffer(this);\n  }\n  updateGlobal(updateData) {\n    utils_1.updateGlobal(updateData, this.globalMap);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    const input = utils_1.checkForInput(this.inputs, inputIndex);\n    utils_1.updateInput(updateData, input);\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    const output = utils_1.checkForOutput(this.outputs, outputIndex);\n    utils_1.updateOutput(updateData, output);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    utils_1.checkHasKey(\n      keyVal,\n      this.globalMap.unknownKeyVals,\n      utils_1.getEnumLength(typeFields_1.GlobalTypes),\n    );\n    if (!this.globalMap.unknownKeyVals) this.globalMap.unknownKeyVals = [];\n    this.globalMap.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    const input = utils_1.checkForInput(this.inputs, inputIndex);\n    utils_1.checkHasKey(\n      keyVal,\n      input.unknownKeyVals,\n      utils_1.getEnumLength(typeFields_1.InputTypes),\n    );\n    if (!input.unknownKeyVals) input.unknownKeyVals = [];\n    input.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    const output = utils_1.checkForOutput(this.outputs, outputIndex);\n    utils_1.checkHasKey(\n      keyVal,\n      output.unknownKeyVals,\n      utils_1.getEnumLength(typeFields_1.OutputTypes),\n    );\n    if (!output.unknownKeyVals) output.unknownKeyVals = [];\n    output.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addInput(inputData) {\n    this.globalMap.unsignedTx.addInput(inputData);\n    this.inputs.push({\n      unknownKeyVals: [],\n    });\n    const addKeyVals = inputData.unknownKeyVals || [];\n    const inputIndex = this.inputs.length - 1;\n    if (!Array.isArray(addKeyVals)) {\n      throw new Error('unknownKeyVals must be an Array');\n    }\n    addKeyVals.forEach(keyVal =>\n      this.addUnknownKeyValToInput(inputIndex, keyVal),\n    );\n    utils_1.addInputAttributes(this.inputs, inputData);\n    return this;\n  }\n  addOutput(outputData) {\n    this.globalMap.unsignedTx.addOutput(outputData);\n    this.outputs.push({\n      unknownKeyVals: [],\n    });\n    const addKeyVals = outputData.unknownKeyVals || [];\n    const outputIndex = this.outputs.length - 1;\n    if (!Array.isArray(addKeyVals)) {\n      throw new Error('unknownKeyVals must be an Array');\n    }\n    addKeyVals.forEach(keyVal =>\n      this.addUnknownKeyValToInput(outputIndex, keyVal),\n    );\n    utils_1.addOutputAttributes(this.outputs, outputData);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    const input = utils_1.checkForInput(this.inputs, inputIndex);\n    utils_1.inputCheckUncleanFinalized(inputIndex, input);\n    for (const key of Object.keys(input)) {\n      if (\n        ![\n          'witnessUtxo',\n          'nonWitnessUtxo',\n          'finalScriptSig',\n          'finalScriptWitness',\n          'unknownKeyVals',\n        ].includes(key)\n      ) {\n        // @ts-ignore\n        delete input[key];\n      }\n    }\n    return this;\n  }\n  combine(...those) {\n    // Combine this with those.\n    // Return self for chaining.\n    const result = combiner_1.combine([this].concat(those));\n    Object.assign(this, result);\n    return this;\n  }\n  getTransaction() {\n    return this.globalMap.unsignedTx.toBuffer();\n  }\n}\nexports.Psbt = Psbt;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","combiner_1","parser_1","typeFields_1","utils_1","Psbt","constructor","tx","inputs","outputs","globalMap","unsignedTx","fromBase64","data","txFromBuffer","buffer","from","fromBuffer","fromHex","results","psbtFromBuffer","psbt","assign","toBase64","toBuffer","toString","toHex","psbtToBuffer","updateGlobal","updateData","updateInput","inputIndex","input","checkForInput","updateOutput","outputIndex","output","checkForOutput","addUnknownKeyValToGlobal","keyVal","checkHasKey","unknownKeyVals","getEnumLength","GlobalTypes","push","addUnknownKeyValToInput","InputTypes","addUnknownKeyValToOutput","OutputTypes","addInput","inputData","addKeyVals","length","Array","isArray","Error","forEach","addInputAttributes","addOutput","outputData","addOutputAttributes","clearFinalizedInput","inputCheckUncleanFinalized","key","keys","includes","combine","those","result","concat","getTransaction"]
}

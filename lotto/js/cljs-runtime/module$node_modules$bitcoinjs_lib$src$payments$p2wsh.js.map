{
"version":3,
"file":"module$node_modules$bitcoinjs_lib$src$payments$p2wsh.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/bitcoinjs-lib/src/payments/p2wsh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bitcoinjs_lib$src$payments$p2wsh\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2wsh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst EMPTY_BUFFER = Buffer.alloc(0);\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\nfunction chunkHasUncompressedPubkey(chunk) {\n  if (\n    Buffer.isBuffer(chunk) &&\n    chunk.length === 65 &&\n    chunk[0] === 0x04 &&\n    (0, types_1.isPoint)(chunk)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n// input: <>\n// witness: [redeemScriptSig ...] {redeemScript}\n// output: OP_0 {sha256(redeemScript)}\nfunction p2wsh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(34)),\n      redeem: types_1.typeforce.maybe({\n        input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        network: types_1.typeforce.maybe(types_1.typeforce.Object),\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const _rchunks = lazy.value(() => {\n    return bscript.decompile(a.redeem.input);\n  });\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32_1.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32_1.bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.redeem && o.redeem.output) return bcrypto.sha256(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'redeem', () => {\n    if (!a.witness) return;\n    return {\n      output: a.witness[a.witness.length - 1],\n      input: EMPTY_BUFFER,\n      witness: a.witness.slice(0, -1),\n    };\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    // transform redeem input to witness stack?\n    if (\n      a.redeem &&\n      a.redeem.input &&\n      a.redeem.input.length > 0 &&\n      a.redeem.output &&\n      a.redeem.output.length > 0\n    ) {\n      const stack = bscript.toStack(_rchunks());\n      // assign, and blank the existing input\n      o.redeem = Object.assign({ witness: stack }, a.redeem);\n      o.redeem.input = EMPTY_BUFFER;\n      return [].concat(stack, a.redeem.output);\n    }\n    if (!a.redeem) return;\n    if (!a.redeem.output) return;\n    if (!a.redeem.witness) return;\n    return [].concat(a.redeem.witness, a.redeem.output);\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2wsh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().prefix !== network.bech32)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      // is there two redeem sources?\n      if (\n        a.redeem.input &&\n        a.redeem.input.length > 0 &&\n        a.redeem.witness &&\n        a.redeem.witness.length > 0\n      )\n        throw new TypeError('Ambiguous witness source');\n      // is the redeem output non-empty?\n      if (a.redeem.output) {\n        if (bscript.decompile(a.redeem.output).length === 0)\n          throw new TypeError('Redeem.output is invalid');\n        // match hash against other sources\n        const hash2 = bcrypto.sha256(a.redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (a.redeem.input && !bscript.isPushOnly(_rchunks()))\n        throw new TypeError('Non push-only scriptSig');\n      if (\n        a.witness &&\n        a.redeem.witness &&\n        !stacksEqual(a.witness, a.redeem.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n      if (\n        (a.redeem.input && _rchunks().some(chunkHasUncompressedPubkey)) ||\n        (a.redeem.output &&\n          (bscript.decompile(a.redeem.output) || []).some(\n            chunkHasUncompressedPubkey,\n          ))\n      ) {\n        throw new TypeError(\n          'redeem.input or redeem.output contains uncompressed pubkey',\n        );\n      }\n    }\n    if (a.witness && a.witness.length > 0) {\n      const wScript = a.witness[a.witness.length - 1];\n      if (a.redeem && a.redeem.output && !a.redeem.output.equals(wScript))\n        throw new TypeError('Witness and redeem.output mismatch');\n      if (\n        a.witness.some(chunkHasUncompressedPubkey) ||\n        (bscript.decompile(wScript) || []).some(chunkHasUncompressedPubkey)\n      )\n        throw new TypeError('Witness contains uncompressed pubkey');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wsh = p2wsh;\n\n};"],
"names":["shadow$provide","global","require","module","exports","stacksEqual","a","b","length","every","x","i","equals","chunkHasUncompressedPubkey","chunk","Buffer","isBuffer","types_1","isPoint","Object","defineProperty","value","p2wsh","bcrypto","networks_1","bscript","lazy","bech32_1","OPS","EMPTY_BUFFER","alloc","opts","address","hash","output","redeem","witness","TypeError","assign","validate","typeforce","network","maybe","String","BufferN","input","arrayOf","_address","result","bech32","decode","version","words","shift","data","fromWords","prefix","from","_rchunks","decompile","bitcoin","o","prop","toWords","unshift","encode","slice","sha256","compile","OP_0","stack","toStack","concat","nameParts","undefined","name","push","join","hash2","isPushOnly","some","wScript"]
}

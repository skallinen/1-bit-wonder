shadow$provide.module$node_modules$bitcoinjs_lib$src$script_number=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.encode=exports.decode=void 0;exports.decode=function(buffer,maxLength,minimal){minimal=void 0===minimal?!0:minimal;var length=buffer.length;if(0===length)return 0;if(length>(maxLength||4))throw new TypeError("Script number overflow");if(minimal&&0===(buffer[length-
1]&127)&&(1>=length||0===(buffer[length-2]&128)))throw Error("Non-minimally encoded script number");if(5===length)return length=buffer.readUInt32LE(0),buffer=buffer.readUInt8(4),buffer&128?-(4294967296*(buffer&-129)+length):4294967296*buffer+length;maxLength=0;for(minimal=0;minimal<length;++minimal)maxLength|=buffer[minimal]<<8*minimal;return buffer[length-1]&128?-(maxLength&~(128<<8*(length-1))):maxLength};exports.encode=function(_number){let value=Math.abs(_number);const size=2147483647<value?5:
8388607<value?4:32767<value?3:127<value?2:0<value?1:0,buffer=Buffer.allocUnsafe(size);_number=0>_number;for(let i=0;i<size;++i)buffer.writeUInt8(value&255,i),value>>=8;buffer[size-1]&128?buffer.writeUInt8(_number?128:0,size-1):_number&&(buffer[size-1]|=128);return buffer}}
//# sourceMappingURL=module$node_modules$bitcoinjs_lib$src$script_number.js.map

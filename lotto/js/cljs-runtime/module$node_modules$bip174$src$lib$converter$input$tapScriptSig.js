shadow$provide.module$node_modules$bip174$src$lib$converter$input$tapScriptSig=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const typeFields_1=require("module$node_modules$bip174$src$lib$typeFields");exports.decode=function(keyVal){if(keyVal.key[0]!==typeFields_1.InputTypes.TAP_SCRIPT_SIG)throw Error("Decode Error: could not decode tapScriptSig with key 0x"+keyVal.key.toString("hex"));
if(65!==keyVal.key.length)throw Error("Decode Error: tapScriptSig has invalid key 0x"+keyVal.key.toString("hex"));if(64!==keyVal.value.length&&65!==keyVal.value.length)throw Error("Decode Error: tapScriptSig has invalid signature in key 0x"+keyVal.key.toString("hex"));const pubkey=keyVal.key.slice(1,33),leafHash=keyVal.key.slice(33);return{pubkey,leafHash,signature:keyVal.value}};exports.encode=function(tSig){const head=Buffer.from([typeFields_1.InputTypes.TAP_SCRIPT_SIG]);return{key:Buffer.concat([head,
tSig.pubkey,tSig.leafHash]),value:tSig.signature}};exports.expected="{ pubkey: Buffer; leafHash: Buffer; signature: Buffer; }";exports.check=function(data){return Buffer.isBuffer(data.pubkey)&&Buffer.isBuffer(data.leafHash)&&Buffer.isBuffer(data.signature)&&32===data.pubkey.length&&32===data.leafHash.length&&(64===data.signature.length||65===data.signature.length)};exports.canAddToArray=function(array,item,dupeSet){const dupeString=item.pubkey.toString("hex")+item.leafHash.toString("hex");if(dupeSet.has(dupeString))return!1;
dupeSet.add(dupeString);return 0===array.filter(v=>v.pubkey.equals(item.pubkey)&&v.leafHash.equals(item.leafHash)).length}}
//# sourceMappingURL=module$node_modules$bip174$src$lib$converter$input$tapScriptSig.js.map

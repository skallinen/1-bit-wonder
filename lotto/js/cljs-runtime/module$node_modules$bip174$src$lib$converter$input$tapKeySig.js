shadow$provide.module$node_modules$bip174$src$lib$converter$input$tapKeySig=function(global,require,module,exports){function check(data){return Buffer.isBuffer(data)&&(64===data.length||65===data.length)}var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const typeFields_1=require("module$node_modules$bip174$src$lib$typeFields");exports.decode=function(keyVal){if(keyVal.key[0]!==typeFields_1.InputTypes.TAP_KEY_SIG||1!==
keyVal.key.length)throw Error("Decode Error: could not decode tapKeySig with key 0x"+keyVal.key.toString("hex"));if(!check(keyVal.value))throw Error("Decode Error: tapKeySig not a valid 64-65-byte BIP340 signature");return keyVal.value};exports.encode=function(value){return{key:Buffer.from([typeFields_1.InputTypes.TAP_KEY_SIG]),value}};exports.expected="Buffer";exports.check=check;exports.canAdd=function(currentData,newData){return!!currentData&&!!newData&&void 0===currentData.tapKeySig}}
//# sourceMappingURL=module$node_modules$bip174$src$lib$converter$input$tapKeySig.js.map

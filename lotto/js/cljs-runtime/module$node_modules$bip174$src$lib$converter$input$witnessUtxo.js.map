{
"version":3,
"file":"module$node_modules$bip174$src$lib$converter$input$witnessUtxo.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3H,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAAkBG,CAAAA,MAC/B,aACAC,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAAEI,MAAO,CAAA,CAAT,CAA7C,CACA,OAAMC,aAAeP,OAAA,CAAQ,+CAAR,CAArB,CACMQ,QAAUR,OAAA,CAAQ,oDAAR,CADhB,CAEMS,QAAUT,OAAA,CAAQ,qDAAR,CAqBhBE,QAAQQ,CAAAA,MAAR,CApBAA,QAAe,CAACC,MAAD,CAAS,CACtB,GAAIA,MAAOC,CAAAA,GAAP,CAAW,CAAX,CAAJ;AAAsBL,YAAaM,CAAAA,UAAWC,CAAAA,YAA9C,CACE,KAAUC,MAAJ,CACJ,wDADI,CAEFJ,MAAOC,CAAAA,GAAII,CAAAA,QAAX,CAAoB,KAApB,CAFE,CAAN,CAKF,MAAMV,MAAQE,OAAQS,CAAAA,YAAR,CAAqBN,MAAOL,CAAAA,KAA5B,CAAmC,CAAnC,CACd,KAAIY,QAAU,CACd,OAAMC,UAAYV,OAAQC,CAAAA,MAAR,CAAeC,MAAOL,CAAAA,KAAtB,CAA6BY,OAA7B,CAClBA,QAAA,EAAWT,OAAQW,CAAAA,cAAR,CAAuBD,SAAvB,CACLE,OAAAA,CAASV,MAAOL,CAAAA,KAAMgB,CAAAA,KAAb,CAAmBJ,OAAnB,CACf,IAAIG,MAAOE,CAAAA,MAAX,GAAsBJ,SAAtB,CACE,KAAUJ,MAAJ,CAAU,wDAAV,CAAN,CAEF,MAAO,CACLM,OAAAA,MADK,CAELf,KAFK,CAfe,CAiCxBJ,QAAQsB,CAAAA,MAAR,CAZAA,QAAe,CAACC,IAAD,CAAO,CACpB,MAAM,CAAEJ,MAAF,CAAUf,KAAV,CAAA;AAAoBmB,IACpBC,KAAAA,CAAYjB,OAAQW,CAAAA,cAAR,CAAuBC,MAAOE,CAAAA,MAA9B,CAClB,OAAMI,OAASxB,MAAOyB,CAAAA,WAAP,CAAmB,CAAnB,CAAuBF,IAAvB,CAAmCL,MAAOE,CAAAA,MAA1C,CACff,QAAQqB,CAAAA,aAAR,CAAsBF,MAAtB,CAA8BrB,KAA9B,CAAqC,CAArC,CACAG,QAAQe,CAAAA,MAAR,CAAeH,MAAOE,CAAAA,MAAtB,CAA8BI,MAA9B,CAAsC,CAAtC,CACAN,OAAOS,CAAAA,IAAP,CAAYH,MAAZ,CAAoB,CAApB,CAAwBD,IAAxB,CACA,OAAO,CACLd,IAAKT,MAAO4B,CAAAA,IAAP,CAAY,CAACxB,YAAaM,CAAAA,UAAWC,CAAAA,YAAzB,CAAZ,CADA,CAELR,MAAOqB,MAFF,CAPa,CAatBzB,QAAQ8B,CAAAA,QAAR,CAAmB,oCAInB9B,QAAQ+B,CAAAA,KAAR,CAHAA,QAAc,CAACR,IAAD,CAAO,CACnB,MAAOtB,OAAO+B,CAAAA,QAAP,CAAgBT,IAAKJ,CAAAA,MAArB,CAAP,EAA6D,QAA7D,GAAuC,MAAOI,KAAKnB,CAAAA,KADhC,CAOrBJ,QAAQiC,CAAAA,MAAR,CAHAA,QAAe,CAACC,WAAD,CAAcC,OAAd,CAAuB,CACpC,MAAO,CAAC,CAACD,WAAT,EAAwB,CAAC,CAACC,OAA1B;AAAiEC,IAAAA,EAAjE,GAAqCF,WAAYG,CAAAA,WADb,CA9CqF;",
"sources":["node_modules/bip174/src/lib/converter/input/witnessUtxo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$bip174$src$lib$converter$input$witnessUtxo\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst tools_1 = require('../tools');\nconst varuint = require('../varint');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.WITNESS_UTXO) {\n    throw new Error(\n      'Decode Error: could not decode witnessUtxo with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const value = tools_1.readUInt64LE(keyVal.value, 0);\n  let _offset = 8;\n  const scriptLen = varuint.decode(keyVal.value, _offset);\n  _offset += varuint.encodingLength(scriptLen);\n  const script = keyVal.value.slice(_offset);\n  if (script.length !== scriptLen) {\n    throw new Error('Decode Error: WITNESS_UTXO script is not proper length');\n  }\n  return {\n    script,\n    value,\n  };\n}\nexports.decode = decode;\nfunction encode(data) {\n  const { script, value } = data;\n  const varintLen = varuint.encodingLength(script.length);\n  const result = Buffer.allocUnsafe(8 + varintLen + script.length);\n  tools_1.writeUInt64LE(result, value, 0);\n  varuint.encode(script.length, result, 8);\n  script.copy(result, 8 + varintLen);\n  return {\n    key: Buffer.from([typeFields_1.InputTypes.WITNESS_UTXO]),\n    value: result,\n  };\n}\nexports.encode = encode;\nexports.expected = '{ script: Buffer; value: number; }';\nfunction check(data) {\n  return Buffer.isBuffer(data.script) && typeof data.value === 'number';\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.witnessUtxo === undefined;\n}\nexports.canAdd = canAdd;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Object","defineProperty","value","typeFields_1","tools_1","varuint","decode","keyVal","key","InputTypes","WITNESS_UTXO","Error","toString","readUInt64LE","_offset","scriptLen","encodingLength","script","slice","length","encode","data","varintLen","result","allocUnsafe","writeUInt64LE","copy","from","expected","check","isBuffer","canAdd","currentData","newData","undefined","witnessUtxo"]
}

{
"version":3,
"file":"module$node_modules$readable_stream$lib$_stream_readable.js",
"lineCount":34,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgGrHC,QAASA,gBAAe,CAACC,OAAD,CAAUC,KAAV,CAAiBC,EAAjB,CAAqB,CAG3C,GAAuC,UAAvC,GAAI,MAAOF,QAAQD,CAAAA,eAAnB,CAAmD,MAAOC,QAAQD,CAAAA,eAAR,CAAwBE,KAAxB,CAA+BC,EAA/B,CAK1D,IAAKF,OAAQG,CAAAA,OAAb,EAAyBH,OAAQG,CAAAA,OAAR,CAAgBF,KAAhB,CAAzB,CAAgFG,KAAMC,CAAAA,OAAN,CAAcL,OAAQG,CAAAA,OAAR,CAAgBF,KAAhB,CAAd,CAAJ,CAA2CD,OAAQG,CAAAA,OAAR,CAAgBF,KAAhB,CAAuBK,CAAAA,OAAvB,CAA+BJ,EAA/B,CAA3C,CAAmFF,OAAQG,CAAAA,OAAR,CAAgBF,KAAhB,CAAnF,CAA4G,CAACC,EAAD,CAAKF,OAAQG,CAAAA,OAAR,CAAgBF,KAAhB,CAAL,CAAxL,KAAiDD,QAAQO,CAAAA,EAAR,CAAWN,KAAX,CAAkBC,EAAlB,CARN,CAW7CM,QAASA,cAAa,CAACC,OAAD,CAAUC,MAAV,CAAkBC,QAAlB,CAA4B,CAChDC,MAAA,CAASA,MAAT,EAAmBhB,OAAA,CAAQ,wDAAR,CACnBa;OAAA,CAAUA,OAAV,EAAqB,EAMG,UAAxB,GAAI,MAAOE,SAAX,GAAmCA,QAAnC,CAA8CD,MAA9C,WAAgEE,OAAhE,CAGA,KAAKC,CAAAA,UAAL,CAAkB,CAAC,CAACJ,OAAQI,CAAAA,UACxBF,SAAJ,GAAc,IAAKE,CAAAA,UAAnB,CAAgC,IAAKA,CAAAA,UAArC,EAAmD,CAAC,CAACJ,OAAQK,CAAAA,kBAA7D,CAGA,KAAKC,CAAAA,aAAL,CAAqBC,gBAAA,CAAiB,IAAjB,CAAuBP,OAAvB,CAAgC,uBAAhC,CAAyDE,QAAzD,CAIrB,KAAKM,CAAAA,MAAL,CAAc,IAAIC,UAClB,KAAKC,CAAAA,MAAL,CAAc,CACd,KAAKC,CAAAA,KAAL,CAAa,IACb,KAAKC,CAAAA,UAAL,CAAkB,CAClB,KAAKC,CAAAA,OAAL,CAAe,IAGf,KAAKC,CAAAA,OAAL,CADA,IAAKC,CAAAA,UACL,CAFA,IAAKC,CAAAA,KAEL,CAFa,CAAA,CAOb,KAAKC,CAAAA,IAAL,CAAY,CAAA,CAMZ,KAAKC,CAAAA,eAAL,CADA,IAAKC,CAAAA,iBACL,CAFA,IAAKC,CAAAA,eAEL,CAHA,IAAKC,CAAAA,YAGL;AAHoB,CAAA,CAIpB,KAAKC,CAAAA,MAAL,CAAc,CAAA,CAEd,KAAKC,CAAAA,SAAL,CAAuC,CAAA,CAAvC,GAAiBvB,OAAQuB,CAAAA,SAEzB,KAAKC,CAAAA,WAAL,CAAmB,CAAC,CAACxB,OAAQwB,CAAAA,WAE7B,KAAKC,CAAAA,SAAL,CAAiB,CAAA,CAIjB,KAAKC,CAAAA,eAAL,CAAuB1B,OAAQ0B,CAAAA,eAA/B,EAAkD,MAElD,KAAKC,CAAAA,UAAL,CAAkB,CAElB,KAAKC,CAAAA,WAAL,CAAmB,CAAA,CAEnB,KAAKC,CAAAA,QAAL,CADA,IAAKC,CAAAA,OACL,CADe,IAGX9B,QAAQ6B,CAAAA,QAAZ,GACOE,aAEL,GAFoBA,aAEpB,CAFoC5C,OAAA,CAAQ,uDAAR,CAA2B4C,CAAAA,aAE/D,EADA,IAAKD,CAAAA,OACL,CADe,IAAIC,aAAJ,CAAkB/B,OAAQ6B,CAAAA,QAA1B,CACf,CAAA,IAAKA,CAAAA,QAAL,CAAgB7B,OAAQ6B,CAAAA,QAH1B,CAxDgD,CA+DlDG,QAASA,SAAQ,CAAChC,OAAD,CAAU,CACzBG,MAAA,CAASA,MAAT,EAAmBhB,OAAA,CAAQ,wDAAR,CACnB;GAAI,EAAE,IAAF,WAAkB6C,SAAlB,CAAJ,CAAiC,MAAO,KAAIA,QAAJ,CAAahC,OAAb,CAIxC,KAAKiC,CAAAA,cAAL,CAAsB,IAAIlC,aAAJ,CAAkBC,OAAlB,CAA2B,IAA3B,CADP,IACO,WADSG,OACT,CAEtB,KAAK+B,CAAAA,QAAL,CAAgB,CAAA,CAEZlC,QAAJ,GAC8B,UAC5B,GADI,MAAOA,QAAQmC,CAAAA,IACnB,GADwC,IAAKC,CAAAA,KAC7C,CADqDpC,OAAQmC,CAAAA,IAC7D,EAA+B,UAA/B,GAAI,MAAOnC,QAAQqC,CAAAA,OAAnB,GAA2C,IAAKC,CAAAA,QAAhD,CAA2DtC,OAAQqC,CAAAA,OAAnE,CAFF,CAKAE,OAAOC,CAAAA,IAAP,CAAY,IAAZ,CAfyB,CAgF3BC,QAASA,iBAAgB,CAACxC,MAAD,CAASyC,KAAT,CAAgBb,QAAhB,CAA0Bc,UAA1B,CAAsCC,cAAtC,CAAsD,CAC7EC,KAAA,CAAM,kBAAN,CAA0BH,KAA1B,CACA,KAAII,MAAQ7C,MAAOgC,CAAAA,cAEnB,IAAc,IAAd,GAAIS,KAAJ,CACEI,KAAMhC,CAAAA,OA2OR,CA3OkB,CAAA,CA2OlB,CADA+B,KAAA,CAAM,YAAN,CACA;AA1OqBC,KA0OX9B,CAAAA,KAAV,GA1OqB8B,KA4OXhB,CAAAA,OAWV,GAVMY,KAUN,CAvPqBI,KA6ODhB,CAAAA,OAAQiB,CAAAA,GAAd,EAUd,GAReL,KAAMhC,CAAAA,MAQrB,GAvPqBoC,KAgPXtC,CAAAA,MAAOwC,CAAAA,IAAb,CAAkBN,KAAlB,CACA,CAjPiBI,KAiPXpC,CAAAA,MAAN,EAjPiBoC,KAiPK1C,CAAAA,UAAN,CAAmB,CAAnB,CAAuBsC,KAAMhC,CAAAA,MAMjD,EAvPqBoC,KAqPf9B,CAAAA,KAEN,CAFc,CAAA,CAEd,CAvPqB8B,KAuPX7B,CAAAA,IAAV,CAIEgC,YAAA,CA3PWhD,MA2PX,CAJF,EAvPqB6C,KA8PbzB,CAAAA,YAEN,CAFqB,CAAA,CAErB,CAhQmByB,KAgQR1B,CAAAA,eAAX,GAhQmB0B,KAiQX1B,CAAAA,eACN,CADwB,CAAA,CACxB,CAAA8B,aAAA,CAlQSjD,MAkQT,CAFF,CATF,CAbA,CA5OA,KAGO,CAEL,GAAI,CAAC2C,cAAL,CAAqB,CAAyBF,cAAAA,CAAAA,KAoDhD,KAAIS,EA/PGC,OAAOC,CAAAA,QAAP,CAiQYX,cAjQZ,CAiQP,EAAmBA,cAAnB,WAjQ8CY,cAiQ9C,EAA8C,QAA9C,GAA6B,MAAOZ,eAApC,EAAoEa,IAAAA,EAApE,GAA0Db,cAA1D,EAtDyCI,KAsD+C1C,CAAAA,UAAxF,GACE+C,EADF,CACO,IAAIK,oBAAJ,CAAyB,OAAzB;AAAkC,CAAC,QAAD,CAAW,QAAX,CAAqB,YAArB,CAAlC,CAAsEd,cAAtE,CADP,CAIA,KAAA,YAAOS,EA1DgB,CAErB,GAAIA,WAAJ,CACEM,cAAA,CAAexD,MAAf,CAAuBkD,WAAvB,CADF,KAEO,IAAIL,KAAM1C,CAAAA,UAAV,EAAwBsC,KAAxB,EAAgD,CAAhD,CAAiCA,KAAMhC,CAAAA,MAAvC,CAKL,GAJqB,QAIjBiC,GAJA,MAAOD,MAIPC,EAJ8BG,KAAM1C,CAAAA,UAIpCuC,EAJkDe,MAAOC,CAAAA,cAAP,CAAsBjB,KAAtB,CAIlDC,GAJmFS,MAAOQ,CAAAA,SAI1FjB,GAHFD,KAGEC,CAxNDS,MAAOS,CAAAA,IAAP,CAqN2BnB,KArN3B,CAwNCC,EAAAA,UAAJ,CACMG,KAAM/B,CAAAA,UAAV,CAAsB0C,cAAA,CAAexD,MAAf,CAAuB,IAAI6D,kCAA3B,CAAtB,CAA4FC,QAAA,CAAS9D,MAAT,CAAiB6C,KAAjB,CAAwBJ,KAAxB,CAA+B,CAAA,CAA/B,CAD9F,KAEO,IAAII,KAAM9B,CAAAA,KAAV,CACLyC,cAAA,CAAexD,MAAf,CAAuB,IAAI+D,yBAA3B,CADK,KAEA,CAAA,GAAIlB,KAAMrB,CAAAA,SAAV,CACL,MAAO,CAAA,CAEPqB;KAAMhC,CAAAA,OAAN,CAAgB,CAAA,CAEZgC,MAAMhB,CAAAA,OAAV,EAAqB,CAACD,QAAtB,EACEa,KACA,CADQI,KAAMhB,CAAAA,OAAQmC,CAAAA,KAAd,CAAoBvB,KAApB,CACR,CAAII,KAAM1C,CAAAA,UAAV,EAAyC,CAAzC,GAAwBsC,KAAMhC,CAAAA,MAA9B,CAA4CqD,QAAA,CAAS9D,MAAT,CAAiB6C,KAAjB,CAAwBJ,KAAxB,CAA+B,CAAA,CAA/B,CAA5C,CAAuFwB,aAAA,CAAcjE,MAAd,CAAsB6C,KAAtB,CAFzF,EAIEiB,QAAA,CAAS9D,MAAT,CAAiB6C,KAAjB,CAAwBJ,KAAxB,CAA+B,CAAA,CAA/B,CATG,CATF,IAqBKC,WAAL,GACLG,KAAMhC,CAAAA,OACN,CADgB,CAAA,CAChB,CAAAoD,aAAA,CAAcjE,MAAd,CAAsB6C,KAAtB,CAFK,CA3BF,CAoCP,MAAO,CAACA,KAAM9B,CAAAA,KAAd,GAAwB8B,KAAMpC,CAAAA,MAA9B,CAAuCoC,KAAMxC,CAAAA,aAA7C,EAA+E,CAA/E,GAA8DwC,KAAMpC,CAAAA,MAApE,CA3C6E,CA8C/EqD,QAASA,SAAQ,CAAC9D,MAAD,CAAS6C,KAAT,CAAgBJ,KAAhB,CAAuBC,UAAvB,CAAmC,CAC9CG,KAAMjC,CAAAA,OAAV,EAAsC,CAAtC,GAAqBiC,KAAMpC,CAAAA,MAA3B,EAA2C,CAACoC,KAAM7B,CAAAA,IAAlD,EACE6B,KAAMnB,CAAAA,UACN,CADmB,CACnB,CAAA1B,MAAOkE,CAAAA,IAAP,CAAY,MAAZ,CAAoBzB,KAApB,CAFF,GAKEI,KAAMpC,CAAAA,MAEN,EAFgBoC,KAAM1C,CAAAA,UAAN;AAAmB,CAAnB,CAAuBsC,KAAMhC,CAAAA,MAE7C,CADIiC,UAAJ,CAAgBG,KAAMtC,CAAAA,MAAOX,CAAAA,OAAb,CAAqB6C,KAArB,CAAhB,CAAiDI,KAAMtC,CAAAA,MAAOwC,CAAAA,IAAb,CAAkBN,KAAlB,CACjD,CAAII,KAAMzB,CAAAA,YAAV,EAAwB4B,YAAA,CAAahD,MAAb,CAP1B,CAUAiE,cAAA,CAAcjE,MAAd,CAAsB6C,KAAtB,CAXkD,CA2EpDsB,QAASA,cAAa,CAACC,UAAD,CAAIvB,KAAJ,CAAW,CAC/B,GAAS,CAAT,EAAIuB,UAAJ,EAA+B,CAA/B,GAAcvB,KAAMpC,CAAAA,MAApB,EAAoCoC,KAAM9B,CAAAA,KAA1C,CAAiD,MAAO,EACxD,IAAI8B,KAAM1C,CAAAA,UAAV,CAAsB,MAAO,EAE7B,IAAIiE,UAAJ,GAAUA,UAAV,CAEE,MAAIvB,MAAMjC,CAAAA,OAAV,EAAqBiC,KAAMpC,CAAAA,MAA3B,CAA0CoC,KAAMtC,CAAAA,MAAO8D,CAAAA,IAAKC,CAAAA,IAAK7D,CAAAA,MAAjE,CAAoFoC,KAAMpC,CAAAA,MAI5F,IAAI2D,UAAJ,CAAQvB,KAAMxC,CAAAA,aAAd,CAA6B,CAA8C+D,IAAAA,EAAAA,UAjC/DG,WAGZ,EAAIH,CAAJ,CAEEA,CAFF,CAHYG,UAGZ,EAMEH,CAAA,EAMA,CALAA,CAKA,EALKA,CAKL,GALW,CAKX,CAJAA,CAIA,EAJKA,CAIL,GAJW,CAIX,CAHAA,CAGA,EAHKA,CAGL,GAHW,CAGX,CAFAA,CAEA,EAFKA,CAEL,GAFW,CAEX;AADAA,CACA,EADKA,CACL,GADW,EACX,CAAAA,CAAA,EAZF,CA8B6BvB,MAAMxC,CAAAA,aAAN,CAftB+D,CAesB,CAC7B,MAAIA,WAAJ,EAASvB,KAAMpC,CAAAA,MAAf,CAA8B2D,UAA9B,CAEKvB,KAAM9B,CAAAA,KAAX,CAKO8B,KAAMpC,CAAAA,MALb,EACEoC,KAAMzB,CAAAA,YACC,CADc,CAAA,CACd,CAAA,CAFT,CAb+B,CAuJjC4B,QAASA,aAAY,CAAChD,MAAD,CAAS,CAC5B,IAAI6C,MAAQ7C,MAAOgC,CAAAA,cACnBY,MAAA,CAAM,cAAN,CAAsBC,KAAMzB,CAAAA,YAA5B,CAA0CyB,KAAM1B,CAAAA,eAAhD,CACA0B,MAAMzB,CAAAA,YAAN,CAAqB,CAAA,CAEhByB,MAAM1B,CAAAA,eAAX,GACEyB,KAAA,CAAM,cAAN,CAAsBC,KAAMjC,CAAAA,OAA5B,CAEA,CADAiC,KAAM1B,CAAAA,eACN,CADwB,CAAA,CACxB,CAAAqD,OAAQC,CAAAA,QAAR,CAAiBxB,aAAjB,CAAgCjD,MAAhC,CAHF,CAL4B,CAY9BiD,QAASA,cAAa,CAACjD,MAAD,CAAS,CAC7B,IAAI6C,MAAQ7C,MAAOgC,CAAAA,cACnBY,MAAA,CAAM,eAAN,CAAuBC,KAAMrB,CAAAA,SAA7B;AAAwCqB,KAAMpC,CAAAA,MAA9C,CAAsDoC,KAAM9B,CAAAA,KAA5D,CAEK8B,MAAMrB,CAAAA,SAAX,EAA+Bf,CAANoC,KAAMpC,CAAAA,MAA/B,EAA+CM,CAAN8B,KAAM9B,CAAAA,KAA/C,GACEf,MAAOkE,CAAAA,IAAP,CAAY,UAAZ,CACA,CAAArB,KAAM1B,CAAAA,eAAN,CAAwB,CAAA,CAF1B,CAWA0B,MAAMzB,CAAAA,YAAN,CAAqB,CAACyB,KAAMjC,CAAAA,OAA5B,EAAuC,CAACiC,KAAM9B,CAAAA,KAA9C,EAAuD8B,KAAMpC,CAAAA,MAA7D,EAAuEoC,KAAMxC,CAAAA,aAC7EqE,KAAA,CAAK1E,MAAL,CAhB6B,CAyB/BiE,QAASA,cAAa,CAACjE,MAAD,CAAS6C,KAAT,CAAgB,CAC/BA,KAAMlB,CAAAA,WAAX,GACEkB,KAAMlB,CAAAA,WACN,CADoB,CAAA,CACpB,CAAA6C,OAAQC,CAAAA,QAAR,CAAiBE,cAAjB,CAAiC3E,MAAjC,CAAyC6C,KAAzC,CAFF,CADoC,CAOtC8B,QAASA,eAAc,CAAC3E,MAAD,CAAS6C,KAAT,CAAgB,CAwBrC,IAAA,CAAO,CAACA,KAAMhC,CAAAA,OAAd,EAAyB,CAACgC,KAAM9B,CAAAA,KAAhC,GAA0C8B,KAAMpC,CAAAA,MAAhD,CAAyDoC,KAAMxC,CAAAA,aAA/D,EAAgFwC,KAAMjC,CAAAA,OAAtF,EAAkH,CAAlH,GAAiGiC,KAAMpC,CAAAA,MAAvG,EAAA,CAAsH,CACpH,IAAImE,IAAM/B,KAAMpC,CAAAA,MAChBmC;KAAA,CAAM,sBAAN,CACA5C,OAAOkC,CAAAA,IAAP,CAAY,CAAZ,CACA,IAAI0C,GAAJ,GAAY/B,KAAMpC,CAAAA,MAAlB,CACE,KALkH,CAQtHoC,KAAMlB,CAAAA,WAAN,CAAoB,CAAA,CAhCiB,CAgLvCkD,QAASA,YAAW,CAACC,GAAD,CAAM,CACxB,MAAOC,SAAkC,EAAG,CAC1C,IAAIlC,MAAQiC,GAAI9C,CAAAA,cAChBY,MAAA,CAAM,aAAN,CAAqBC,KAAMnB,CAAAA,UAA3B,CACImB,MAAMnB,CAAAA,UAAV,EAAsBmB,KAAMnB,CAAAA,UAAN,EAEG,EAAzB,GAAImB,KAAMnB,CAAAA,UAAV,EAA8CoD,GAxsBjCE,CAAAA,SAAR,CAwsB8CC,MAxsB9C,CAAwBxE,CAAAA,MAwsB7B,GACEoC,KAAMjC,CAAAA,OACN,CADgB,CAAA,CAChB,CAAA8D,IAAA,CAAKI,GAAL,CAFF,CAL0C,CADpB,CA6H1BI,QAASA,wBAAuB,CAACC,IAAD,CAAO,CACrC,IAAItC,MAAQsC,IAAKnD,CAAAA,cACjBa,MAAM3B,CAAAA,iBAAN,CAA2D,CAA3D,CAA0BiE,IAAKC,CAAAA,aAAL,CAAmB,UAAnB,CAEtBvC,MAAM5B,CAAAA,eAAV,EAA6B,CAAC4B,KAAMxB,CAAAA,MAApC,CAGEwB,KAAMjC,CAAAA,OAHR;AAGkB,CAAA,CAHlB,CAIwC,CAJxC,CAIWuE,IAAKC,CAAAA,aAAL,CAAmB,MAAnB,CAJX,EAKED,IAAKE,CAAAA,MAAL,EATmC,CAavCC,QAASA,iBAAgB,CAACH,IAAD,CAAO,CAC9BvC,KAAA,CAAM,0BAAN,CACAuC,KAAKjD,CAAAA,IAAL,CAAU,CAAV,CAF8B,CA8BhCqD,QAASA,QAAO,CAACvF,MAAD,CAAS6C,KAAT,CAAgB,CAC9BD,KAAA,CAAM,QAAN,CAAgBC,KAAMhC,CAAAA,OAAtB,CAEKgC,MAAMhC,CAAAA,OAAX,EACEb,MAAOkC,CAAAA,IAAP,CAAY,CAAZ,CAGFW,MAAM5B,CAAAA,eAAN,CAAwB,CAAA,CACxBjB,OAAOkE,CAAAA,IAAP,CAAY,QAAZ,CACAQ,KAAA,CAAK1E,MAAL,CACI6C,MAAMjC,CAAAA,OAAV,EAAqB,CAACiC,KAAMhC,CAAAA,OAA5B,EAAqCb,MAAOkC,CAAAA,IAAP,CAAY,CAAZ,CAVP,CA0BhCwC,QAASA,KAAI,CAAC1E,MAAD,CAAS,CACpB,IAAI6C,MAAQ7C,MAAOgC,CAAAA,cAGnB,KAFAY,KAAA,CAAM,MAAN,CAAcC,KAAMjC,CAAAA,OAApB,CAEA,CAAOiC,KAAMjC,CAAAA,OAAb,EAA0C,IAA1C,GAAwBZ,MAAOkC,CAAAA,IAAP,EAAxB,CAAA,EAJoB,CAgItBsD,QAASA,SAAQ,CAACpB,CAAD,CAAIvB,KAAJ,CAAW,CAE1B,GAAqB,CAArB,GAAIA,KAAMpC,CAAAA,MAAV,CAAwB,MAAO,KAE3BoC;KAAM1C,CAAAA,UAAV,CAAsBsF,CAAtB,CAA4B5C,KAAMtC,CAAAA,MAAOmF,CAAAA,KAAb,EAA5B,CAA0D,CAACtB,CAAL,EAAUA,CAAV,EAAevB,KAAMpC,CAAAA,MAArB,EAEjCgF,CACnB,CADI5C,KAAMhB,CAAAA,OAAV,CAAyBgB,KAAMtC,CAAAA,MAAOoF,CAAAA,IAAb,CAAkB,EAAlB,CAAzB,CAAgF,CAA5B,GAAI9C,KAAMtC,CAAAA,MAAOE,CAAAA,MAAjB,CAAqCoC,KAAMtC,CAAAA,MAAOqF,CAAAA,KAAb,EAArC,CAAqE/C,KAAMtC,CAAAA,MAAOsF,CAAAA,MAAb,CAAoBhD,KAAMpC,CAAAA,MAA1B,CACzH,CAAAoC,KAAMtC,CAAAA,MAAOuF,CAAAA,KAAb,EAHoD,EAMpDL,CANoD,CAM9C5C,KAAMtC,CAAAA,MAAOwF,CAAAA,OAAb,CAAqB3B,CAArB,CAAwBvB,KAAMhB,CAAAA,OAA9B,CAER,OAAO4D,EAZmB,CAe5BO,QAASA,YAAW,CAAChG,MAAD,CAAS,CAC3B,IAAI6C,MAAQ7C,MAAOgC,CAAAA,cACnBY,MAAA,CAAM,aAAN,CAAqBC,KAAM/B,CAAAA,UAA3B,CAEK+B,MAAM/B,CAAAA,UAAX,GACE+B,KAAM9B,CAAAA,KACN,CADc,CAAA,CACd,CAAAyD,OAAQC,CAAAA,QAAR,CAAiBwB,aAAjB,CAAgCpD,KAAhC,CAAuC7C,MAAvC,CAFF,CAJ2B,CAU7BiG,QAASA,cAAa,CAACpD,KAAD,CAAQ7C,MAAR,CAAgB,CACpC4C,KAAA,CAAM,eAAN,CAAuBC,KAAM/B,CAAAA,UAA7B;AAAyC+B,KAAMpC,CAAAA,MAA/C,CAEKoC,MAAM/B,CAAAA,UAAX,EAA0C,CAA1C,GAAyB+B,KAAMpC,CAAAA,MAA/B,GACEoC,KAAM/B,CAAAA,UAIN,CAJmB,CAAA,CAInB,CAHAd,MAAOiC,CAAAA,QAGP,CAHkB,CAAA,CAGlB,CAFAjC,MAAOkE,CAAAA,IAAP,CAAY,KAAZ,CAEA,CAAIrB,KAAMtB,CAAAA,WAAV,GAGM2E,KAEJ,CAFalG,MAAOmG,CAAAA,cAEpB,EAAI,CAACD,KAAL,EAAeA,KAAO3E,CAAAA,WAAtB,EAAqC2E,KAAOE,CAAAA,QAA5C,GACEpG,MAAOoC,CAAAA,OAAP,EANJ,CALF,CAHoC,CA8BtCiE,QAASA,QAAO,CAACC,EAAD,CAAKC,CAAL,CAAQ,CACtB,IADsB,IACbC,EAAI,CADS,CACNC,EAAIH,EAAG7F,CAAAA,MAAvB,CAA+B+F,CAA/B,CAAmCC,CAAnC,CAAsCD,CAAA,EAAtC,CACE,GAAIF,EAAA,CAAGE,CAAH,CAAJ,GAAcD,CAAd,CAAiB,MAAOC,EAG1B,OAAO,CAAC,CALc,CA9lCxB,IAAIhC,QAAUtF,OAAA,CAAQ,qCAAR,CAqBd,aAEAC,OAAOC,CAAAA,OAAP,CAAiB2C,QAGjB,KAAI7B,MAGJ6B,SAASjC,CAAAA,aAAT,CAAyBA,aAGhBZ,QAAA,CAAQ,mCAAR,CAUT,KAAIoD;AAASpD,OAAA,CAAQ,yEAAR,CAAb,CAIIiE,OAASjE,OAAA,CAAQ,kCAAR,CAAkBiE,CAAAA,MAJ/B,CAMIE,cAAgBpE,MAAOyH,CAAAA,UAAvBrD,EAAqC,QAAS,EAAG,EAYjDsD,OAAAA,CAAYzH,OAAA,CAAQ,cAAR,CAKd,KAAA0D,MADE+D,MAAJ,EAAiBA,MAAUC,CAAAA,QAA3B,CACUD,MAAUC,CAAAA,QAAV,CAAmB,QAAnB,CADV,CAGUhE,QAAc,EAAG,EAK3B,KAAIpC,WAAatB,OAAA,CAAQ,sEAAR,CAEb2H,OAAAA,CAAc3H,OAAA,CAAQ,kEAAR,CAElB,KACIoB,iBADWpB,OAAA4H,CAAQ,gEAARA,CACiBxG,CAAAA,gBAE5ByG;MAAAA,CAAiB7H,OAAA,CAAQ,4CAAR,CAAqB8H,CAAAA,KAhF2E,KAiFjHzD,qBAAuBwD,MAAexD,CAAAA,oBAjF2E,CAkFjHQ,0BAA4BgD,MAAehD,CAAAA,yBAlFsE,CAmFjHkD,2BAA6BF,MAAeE,CAAAA,0BAnFqE,CAoFjHpD,mCAAqCkD,MAAelD,CAAAA,kCApF6D,CAuFjH/B,aAvFiH,CAwFjHoF,iCAxFiH,CAyFjHtD,IAEJ1E,QAAA,CAAQ,+CAAR,CAAA,CAAoB6C,QAApB,CAA8BO,MAA9B,CAEA,KAAIkB,eAAiBqD,MAAYrD,CAAAA,cAAjC,CACI2D,aAAe,CAAC,OAAD;AAAU,OAAV,CAAmB,SAAnB,CAA8B,OAA9B,CAAuC,QAAvC,CA8FnB1D,OAAO2D,CAAAA,cAAP,CAAsBrF,QAAS4B,CAAAA,SAA/B,CAA0C,WAA1C,CAAuD,CAIrD0D,WAAY,CAAA,CAJyC,CAKrDC,IAAKA,QAAY,EAAG,CAClB,MAA4BhE,KAAAA,EAA5B,GAAI,IAAKtB,CAAAA,cAAT,CACS,CAAA,CADT,CAIO,IAAKA,CAAAA,cAAeR,CAAAA,SALT,CALiC,CAYrD+F,IAAKA,QAAY,CAACC,KAAD,CAAQ,CAGlB,IAAKxF,CAAAA,cAAV,GAMA,IAAKA,CAAAA,cAAeR,CAAAA,SANpB,CAMgCgG,KANhC,CAHuB,CAZ4B,CAAvD,CAwBAzF,SAAS4B,CAAAA,SAAUvB,CAAAA,OAAnB,CAA6ByE,MAAYzE,CAAAA,OACzCL,SAAS4B,CAAAA,SAAU8D,CAAAA,UAAnB,CAAgCZ,MAAYa,CAAAA,SAE5C3F,SAAS4B,CAAAA,SAAUtB,CAAAA,QAAnB,CAA8BsF,QAAS,CAACC,GAAD,CAAMC,EAAN,CAAU,CAC/CA,EAAA,CAAGD,GAAH,CAD+C,CAQjD7F,SAAS4B,CAAAA,SAAUZ,CAAAA,IAAnB,CAA0B+E,QAAS,CAACrF,KAAD,CAAQb,QAAR,CAAkB,CACnD,IAAIiB,MAAQ,IAAKb,CAAAA,cAGjB,IAAKa,KAAM1C,CAAAA,UAAX,CAYE,IAAAwC;AAAiB,CAAA,CAZnB,KACuB,QAArB,GAAI,MAAOF,MAAX,GACEb,QAOA,CAPWA,QAOX,EAPuBiB,KAAMpB,CAAAA,eAO7B,CALIG,QAKJ,GALiBiB,KAAMjB,CAAAA,QAKvB,GAJEa,KACA,CADQU,MAAOS,CAAAA,IAAP,CAAYnB,KAAZ,CAAmBb,QAAnB,CACR,CAAAA,QAAA,CAAW,EAGb,EAAAe,cAAA,CAAiB,CAAA,CARnB,CAcF,OAAOH,iBAAA,CAAiB,IAAjB,CAAuBC,KAAvB,CAA8Bb,QAA9B,CAAwC,CAAA,CAAxC,CAA+Ce,cAA/C,CAnB4C,CAuBrDZ,SAAS4B,CAAAA,SAAU/D,CAAAA,OAAnB,CAA6BmI,QAAS,CAACtF,KAAD,CAAQ,CAC5C,MAAOD,iBAAA,CAAiB,IAAjB,CAAuBC,KAAvB,CAA8B,IAA9B,CAAoC,CAAA,CAApC,CAA0C,CAAA,CAA1C,CADqC,CA0E9CV,SAAS4B,CAAAA,SAAUqE,CAAAA,QAAnB,CAA8BC,QAAS,EAAG,CACxC,MAAuC,CAAA,CAAvC,GAAO,IAAKjG,CAAAA,cAAepB,CAAAA,OADa,CAK1CmB,SAAS4B,CAAAA,SAAUuE,CAAAA,WAAnB,CAAiCC,QAAS,CAACC,GAAD,CAAM,CACzCtG,aAAL,GAAoBA,aAApB,CAAoC5C,OAAA,CAAQ,uDAAR,CAA2B4C,CAAAA,aAA/D,CACID;GAAAA,CAAU,IAAIC,aAAJ,CAAkBsG,GAAlB,CACd,KAAKpG,CAAAA,cAAeH,CAAAA,OAApB,CAA8BA,GAE9B,KAAKG,CAAAA,cAAeJ,CAAAA,QAApB,CAA+B,IAAKI,CAAAA,cAAeH,CAAAA,OAAQD,CAAAA,QAK3D,KAHA,IAAIyG,EAAI,IAAKrG,CAAAA,cAAezB,CAAAA,MAAO8D,CAAAA,IAAnC,CACIiE,QAAU,EAEd,CAAa,IAAb,GAAOD,CAAP,CAAA,CACEC,OACA,EADWzG,GAAQmC,CAAAA,KAAR,CAAcqE,CAAE/D,CAAAA,IAAhB,CACX,CAAA+D,CAAA,CAAIA,CAAEE,CAAAA,IAGR,KAAKvG,CAAAA,cAAezB,CAAAA,MAAOuF,CAAAA,KAA3B,EAEgB,GAAhB,GAAIwC,OAAJ,EAAoB,IAAKtG,CAAAA,cAAezB,CAAAA,MAAOwC,CAAAA,IAA3B,CAAgCuF,OAAhC,CACpB,KAAKtG,CAAAA,cAAevB,CAAAA,MAApB,CAA6B6H,OAAQ7H,CAAAA,MACrC,OAAO,KAnBuC,CAoEhDsB,SAAS4B,CAAAA,SAAUzB,CAAAA,IAAnB,CAA0BsG,QAAS,CAACpE,CAAD,CAAI,CACrCxB,KAAA,CAAM,MAAN,CAAcwB,CAAd,CACAA,EAAA,CAAIqE,QAAA,CAASrE,CAAT,CAAY,EAAZ,CACJ,KAAIvB,MAAQ,IAAKb,CAAAA,cAAjB,CACI0G,MAAQtE,CACF,EAAV,GAAIA,CAAJ,GAAavB,KAAM1B,CAAAA,eAAnB;AAAqC,CAAA,CAArC,CAIA,IAAU,CAAV,GAAIiD,CAAJ,EAAevB,KAAMzB,CAAAA,YAArB,IAA+D,CAAxB,GAAAyB,KAAMxC,CAAAA,aAAN,CAA4BwC,KAAMpC,CAAAA,MAAlC,EAA4CoC,KAAMxC,CAAAA,aAAlD,CAAiF,CAAjF,CAAkEwC,KAAMpC,CAAAA,MAA/G,GAA8HoC,KAAM9B,CAAAA,KAApI,EAGE,MAFA6B,MAAA,CAAM,oBAAN,CAA4BC,KAAMpC,CAAAA,MAAlC,CAA0CoC,KAAM9B,CAAAA,KAAhD,CAEO,CADc,CAArB,GAAI8B,KAAMpC,CAAAA,MAAV,EAA0BoC,KAAM9B,CAAAA,KAAhC,CAAuCiF,WAAA,CAAY,IAAZ,CAAvC,CAA8DhD,YAAA,CAAa,IAAb,CACvD,CAAA,IAGToB,EAAA,CAAID,aAAA,CAAcC,CAAd,CAAiBvB,KAAjB,CAEJ,IAAU,CAAV,GAAIuB,CAAJ,EAAevB,KAAM9B,CAAAA,KAArB,CAEE,MADqB,EACd,GADH8B,KAAMpC,CAAAA,MACH,EADiBuF,WAAA,CAAY,IAAZ,CACjB,CAAA,IAyBT,KAAI2C,OAAS9F,KAAMzB,CAAAA,YACnBwB,MAAA,CAAM,eAAN,CAAuB+F,MAAvB,CAEA,IAAqB,CAArB,GAAI9F,KAAMpC,CAAAA,MAAV,EAA0BoC,KAAMpC,CAAAA,MAAhC,CAAyC2D,CAAzC,CAA6CvB,KAAMxC,CAAAA,aAAnD,CACEsI,MACA,CADS,CAAA,CACT,CAAA/F,KAAA,CAAM,4BAAN;AAAoC+F,MAApC,CAKE9F,MAAM9B,CAAAA,KAAV,EAAmB8B,KAAMhC,CAAAA,OAAzB,CAEE+B,KAAA,CAAM,kBAAN,CADS+F,CAAAA,CACT,CAFF,CAGWA,MAHX,GAIE/F,KAAA,CAAM,SAAN,CAWA,CAVAC,KAAMhC,CAAAA,OAUN,CAVgB,CAAA,CAUhB,CATAgC,KAAM7B,CAAAA,IASN,CATa,CAAA,CASb,CAPqB,CAOrB,GAPI6B,KAAMpC,CAAAA,MAOV,GAPwBoC,KAAMzB,CAAAA,YAO9B,CAP6C,CAAA,CAO7C,EALA,IAAKe,CAAAA,KAAL,CAAWU,KAAMxC,CAAAA,aAAjB,CAKA,CAHAwC,KAAM7B,CAAAA,IAGN,CAHa,CAAA,CAGb,CAAK6B,KAAMhC,CAAAA,OAAX,GAAoBuD,CAApB,CAAwBD,aAAA,CAAcuE,KAAd,CAAqB7F,KAArB,CAAxB,CAfF,CAmBW4C,OAAA,CAAH,CAAR,CAAIrB,CAAJ,CAAiBoB,QAAA,CAASpB,CAAT,CAAYvB,KAAZ,CAAjB,CAA+C,IAEnC,KAAZ,GAAI4C,MAAJ,EACE5C,KAAMzB,CAAAA,YACN,CADqByB,KAAMpC,CAAAA,MAC3B,EADqCoC,KAAMxC,CAAAA,aAC3C,CAAA+D,CAAA,CAAI,CAFN,GAIEvB,KAAMpC,CAAAA,MACN,EADgB2D,CAChB,CAAAvB,KAAMnB,CAAAA,UAAN,CAAmB,CALrB,CAQqB,EAArB,GAAImB,KAAMpC,CAAAA,MAAV,GAGOoC,KAAM9B,CAAAA,KAEX,GAFkB8B,KAAMzB,CAAAA,YAExB,CAFuC,CAAA,CAEvC,EAAIsH,KAAJ,GAActE,CAAd,EAAmBvB,KAAM9B,CAAAA,KAAzB,EAAgCiF,WAAA,CAAY,IAAZ,CALlC,CAQY,KAAZ;AAAIP,MAAJ,EAAkB,IAAKvB,CAAAA,IAAL,CAAU,MAAV,CAAkBuB,MAAlB,CAClB,OAAOA,OA5F8B,CAoNvC1D,SAAS4B,CAAAA,SAAUxB,CAAAA,KAAnB,CAA2ByG,QAAS,CAACxE,CAAD,CAAI,CACtCZ,cAAA,CAAe,IAAf,CAAqB,IAAIyD,0BAAJ,CAA+B,SAA/B,CAArB,CADsC,CAIxClF,SAAS4B,CAAAA,SAAUkF,CAAAA,IAAnB,CAA0BC,QAAS,CAACC,IAAD,CAAOC,QAAP,CAAiB,CAyBlDC,QAASA,SAAQ,CAAChH,QAAD,CAAWiH,UAAX,CAAuB,CACtCtG,KAAA,CAAM,UAAN,CAEIX,SAAJ,GAAiB6C,GAAjB,EACMoE,UADN,EAC8C,CAAA,CAD9C,GACoBA,UAAWC,CAAAA,UAD/B,GAEID,UAAWC,CAAAA,UAoCf,CApC4B,CAAA,CAoC5B,CAhBAvG,KAAA,CAAM,SAAN,CAgBA,CAdAmG,IAAKK,CAAAA,cAAL,CAAoB,OAApB,CAA6BC,OAA7B,CAcA,CAbAN,IAAKK,CAAAA,cAAL,CAAoB,QAApB,CAA8BE,QAA9B,CAaA,CAZAP,IAAKK,CAAAA,cAAL,CAAoB,OAApB,CAA6BG,OAA7B,CAYA,CAXAR,IAAKK,CAAAA,cAAL,CAAoB,OAApB,CAA6BI,OAA7B,CAWA;AAVAT,IAAKK,CAAAA,cAAL,CAAoB,QAApB,CAA8BH,QAA9B,CAUA,CATAnE,GAAIsE,CAAAA,cAAJ,CAAmB,KAAnB,CAA0BK,KAA1B,CASA,CARA3E,GAAIsE,CAAAA,cAAJ,CAAmB,KAAnB,CAA0BM,MAA1B,CAQA,CAPA5E,GAAIsE,CAAAA,cAAJ,CAAmB,MAAnB,CAA2BO,MAA3B,CAOA,CANAC,SAMA,CANY,CAAA,CAMZ,CAAUlI,CAANmB,KAAMnB,CAAAA,UAAV,EAA0BqH,IAAK5C,CAAAA,cAA/B,EAAqE0D,CAApBd,IAAK5C,CAAAA,cAAe0D,CAAAA,SAArE,EAAiFN,OAAA,EAtCjF,CAHsC,CAWxCE,QAASA,MAAK,EAAG,CACf7G,KAAA,CAAM,OAAN,CACAmG,KAAKjG,CAAAA,GAAL,EAFe,CAmCjB6G,QAASA,OAAM,CAAClH,KAAD,CAAQ,CACrBG,KAAA,CAAM,QAAN,CACI6C,MAAAA,CAAMsD,IAAK/E,CAAAA,KAAL,CAAWvB,KAAX,CACVG,MAAA,CAAM,YAAN,CAAoB6C,KAApB,CAEY,EAAA,CAAZ,GAAIA,KAAJ,GAUE,CAL0B,CAK1B,GALK5C,KAAMlC,CAAAA,UAKX,EAL+BkC,KAAMnC,CAAAA,KAKrC,GAL+CqI,IAK/C,EAL0E,CAK1E,CALuDlG,KAAMlC,CAAAA,UAK7D,EAL8G,CAAC,CAK/G,GAL+E0F,OAAA,CAAQxD,KAAMnC,CAAAA,KAAd,CAAqBqI,IAArB,CAK/E,GALqH,CAACa,SAKtH,GAJEhH,KAAA,CAAM,6BAAN;AAAqCC,KAAMnB,CAAAA,UAA3C,CACA,CAAAmB,KAAMnB,CAAAA,UAAN,EAGF,EAAAoD,GAAIgF,CAAAA,KAAJ,EAVF,CALqB,CAqBvBN,QAASA,QAAO,CAACtG,EAAD,CAAK,CACnBN,KAAA,CAAM,SAAN,CAAiBM,EAAjB,CACAwG,OAAA,EACAX,KAAKK,CAAAA,cAAL,CAAoB,OAApB,CAA6BI,OAA7B,CACuC,EAAvC,GAAoBT,IA7pBP/D,CAAAA,SAAR,CA6pBqBC,OA7pBrB,CAAwBxE,CAAAA,MA6pB7B,EAA0C+C,cAAA,CAAeuF,IAAf,CAAqB7F,EAArB,CAJvB,CAUrBmG,QAASA,QAAO,EAAG,CACjBN,IAAKK,CAAAA,cAAL,CAAoB,QAApB,CAA8BE,QAA9B,CACAI,OAAA,EAFiB,CAOnBJ,QAASA,SAAQ,EAAG,CAClB1G,KAAA,CAAM,UAAN,CACAmG,KAAKK,CAAAA,cAAL,CAAoB,OAApB,CAA6BC,OAA7B,CACAK,OAAA,EAHkB,CAQpBA,QAASA,OAAM,EAAG,CAChB9G,KAAA,CAAM,QAAN,CACAkC,IAAI4E,CAAAA,MAAJ,CAAWX,IAAX,CAFgB,CApHlB,IAAIjE,IAAM,IAAV,CACIjC,MAAQ,IAAKb,CAAAA,cAEjB,QAAQa,KAAMlC,CAAAA,UAAd,EACE,KAAK,CAAL,CACEkC,KAAMnC,CAAAA,KAAN,CAAcqI,IACd,MAEF,MAAK,CAAL,CACElG,KAAMnC,CAAAA,KAAN;AAAc,CAACmC,KAAMnC,CAAAA,KAAP,CAAcqI,IAAd,CACd,MAEF,SACElG,KAAMnC,CAAAA,KAAMqC,CAAAA,IAAZ,CAAiBgG,IAAjB,CAVJ,CAcAlG,KAAMlC,CAAAA,UAAN,EAAoB,CACpBiC,MAAA,CAAM,6BAAN,CAA+BC,KAAMlC,CAAAA,UAArC,CAAiDqI,QAAjD,CAEIe,SAAAA,CADUf,QACF,EAD+B,CAAA,CAC/B,GADcA,QAASlG,CAAAA,GACvB,EADyCiG,IACzC,GADkDvE,OAAQwF,CAAAA,MAC1D,EADoEjB,IACpE,GAD6EvE,OAAQyF,CAAAA,MACrF,CAAgBP,MAAhB,CAAQD,KACpB,IAAI5G,KAAM/B,CAAAA,UAAV,CAAsB0D,OAAQC,CAAAA,QAAR,CAAiBsF,QAAjB,CAAtB,KAAmDjF,IAAIoF,CAAAA,IAAJ,CAAS,KAAT,CAAgBH,QAAhB,CACnDhB,KAAKlJ,CAAAA,EAAL,CAAQ,QAAR,CAAkBoJ,QAAlB,CAsBA,KAAIM,QAAU1E,WAAA,CAAYC,GAAZ,CACdiE,KAAKlJ,CAAAA,EAAL,CAAQ,OAAR,CAAiB0J,OAAjB,CACA,KAAIK,UAAY,CAAA,CAsBhB9E,IAAIjF,CAAAA,EAAJ,CAAO,MAAP,CAAe8J,MAAf,CA+BAtK,gBAAA,CAAgB0J,IAAhB,CAAsB,OAAtB,CAA+BS,OAA/B,CAOAT,KAAKmB,CAAAA,IAAL,CAAU,OAAV,CAAmBb,OAAnB,CAQAN,KAAKmB,CAAAA,IAAL,CAAU,QAAV;AAAoBZ,QAApB,CAQAP,KAAK7E,CAAAA,IAAL,CAAU,MAAV,CAAkBY,GAAlB,CAEKjC,MAAMjC,CAAAA,OAAX,GACEgC,KAAA,CAAM,aAAN,CACA,CAAAkC,GAAIO,CAAAA,MAAJ,EAFF,CAKA,OAAO0D,KAlI2C,CAkJpDhH,SAAS4B,CAAAA,SAAU+F,CAAAA,MAAnB,CAA4BS,QAAS,CAACpB,IAAD,CAAO,CAC1C,IAAIlG,MAAQ,IAAKb,CAAAA,cAAjB,CACIkH,WAAa,CACfC,WAAY,CAAA,CADG,CAIjB,IAAyB,CAAzB,GAAItG,KAAMlC,CAAAA,UAAV,CAA4B,MAAO,KAEnC,IAAyB,CAAzB,GAAIkC,KAAMlC,CAAAA,UAAV,CAA4B,CAE1B,GAAIoI,IAAJ,EAAYA,IAAZ,GAAqBlG,KAAMnC,CAAAA,KAA3B,CAAkC,MAAO,KACpCqI,KAAL,GAAWA,IAAX,CAAkBlG,KAAMnC,CAAAA,KAAxB,CAEAmC,MAAMnC,CAAAA,KAAN,CAAc,IACdmC,MAAMlC,CAAAA,UAAN,CAAmB,CACnBkC,MAAMjC,CAAAA,OAAN,CAAgB,CAAA,CACZmI,KAAJ,EAAUA,IAAK7E,CAAAA,IAAL,CAAU,QAAV,CAAoB,IAApB,CAA0BgF,UAA1B,CACV,OAAO,KATmB,CAa5B,GAAI,CAACH,IAAL,CAAW,CAELqB,IAAAA,CAAQvH,KAAMnC,CAAAA,KACdkE,WAAAA,CAAM/B,KAAMlC,CAAAA,UAChBkC,MAAMnC,CAAAA,KAAN,CAAc,IACdmC,MAAMlC,CAAAA,UAAN;AAAmB,CACnBkC,MAAMjC,CAAAA,OAAN,CAAgB,CAAA,CAEhB,KAAS4F,KAAT,CAAa,CAAb,CAAgBA,KAAhB,CAAoB5B,UAApB,CAAyB4B,KAAA,EAAzB,CACE4D,IAAA,CAAM5D,KAAN,CAAStC,CAAAA,IAAT,CAAc,QAAd,CAAwB,IAAxB,CAA8B,CAC5BiF,WAAY,CAAA,CADgB,CAA9B,CAKF,OAAO,KAdE,CAkBX,IAAIkB,MAAQhE,OAAA,CAAQxD,KAAMnC,CAAAA,KAAd,CAAqBqI,IAArB,CACZ,IAAc,CAAC,CAAf,GAAIsB,KAAJ,CAAkB,MAAO,KACzBxH,MAAMnC,CAAAA,KAAM4J,CAAAA,MAAZ,CAAmBD,KAAnB,CAA0B,CAA1B,CACA,GAAAxH,KAAMlC,CAAAA,UACmB,EAAzB,GAAIkC,KAAMlC,CAAAA,UAAV,GAA4BkC,KAAMnC,CAAAA,KAAlC,CAA0CmC,KAAMnC,CAAAA,KAAN,CAAY,CAAZ,CAA1C,CACAqI,KAAK7E,CAAAA,IAAL,CAAU,QAAV,CAAoB,IAApB,CAA0BgF,UAA1B,CACA,OAAO,KA7CmC,CAkD5CnH,SAAS4B,CAAAA,SAAU9D,CAAAA,EAAnB,CAAwB0K,QAAS,CAACC,EAAD,CAAKhL,EAAL,CAAS,CACpCiL,EAAAA,CAAMnI,MAAOqB,CAAAA,SAAU9D,CAAAA,EAAG0C,CAAAA,IAApB,CAAyB,IAAzB,CAA+BiI,EAA/B,CAAmChL,EAAnC,CACV,KAAIqD,MAAQ,IAAKb,CAAAA,cAEN,OAAX,GAAIwI,EAAJ,EAGE3H,KAAM3B,CAAAA,iBAEN,CAF2D,CAE3D,CAF0B,IAAKkE,CAAAA,aAAL,CAAmB,UAAnB,CAE1B;AAAsB,CAAA,CAAtB,GAAIvC,KAAMjC,CAAAA,OAAV,EAA6B,IAAKyE,CAAAA,MAAL,EAL/B,EAMkB,UANlB,GAMWmF,EANX,EAOO3H,KAAM/B,CAAAA,UAPb,EAO4B+B,KAAM3B,CAAAA,iBAPlC,GAQI2B,KAAM3B,CAAAA,iBAKN,CAL0B2B,KAAMzB,CAAAA,YAKhC,CAL+C,CAAA,CAK/C,CAJAyB,KAAMjC,CAAAA,OAIN,CAJgB,CAAA,CAIhB,CAHAiC,KAAM1B,CAAAA,eAGN,CAHwB,CAAA,CAGxB,CAFAyB,KAAA,CAAM,aAAN,CAAqBC,KAAMpC,CAAAA,MAA3B,CAAmCoC,KAAMhC,CAAAA,OAAzC,CAEA,CAAIgC,KAAMpC,CAAAA,MAAV,CACEuC,YAAA,CAAa,IAAb,CADF,CAEYH,KAAMhC,CAAAA,OAFlB,EAGE2D,OAAQC,CAAAA,QAAR,CAAiBa,gBAAjB,CAAmC,IAAnC,CAhBN,CAqBA,OAAOmF,GAzBiC,CA4B1C1I,SAAS4B,CAAAA,SAAU+G,CAAAA,WAAnB,CAAiC3I,QAAS4B,CAAAA,SAAU9D,CAAAA,EAEpDkC,SAAS4B,CAAAA,SAAUyF,CAAAA,cAAnB,CAAoCuB,QAAS,CAACH,EAAD,CAAKhL,EAAL,CAAS,CAChDiL,EAAAA,CAAMnI,MAAOqB,CAAAA,SAAUyF,CAAAA,cAAe7G,CAAAA,IAAhC,CAAqC,IAArC,CAA2CiI,EAA3C,CAA+ChL,EAA/C,CAEC,WAAX,GAAIgL,EAAJ;AAOEhG,OAAQC,CAAAA,QAAR,CAAiBS,uBAAjB,CAA0C,IAA1C,CAGF,OAAOuF,GAb6C,CAgBtD1I,SAAS4B,CAAAA,SAAUiH,CAAAA,kBAAnB,CAAwCC,QAAS,CAACL,EAAD,CAAK,CACpD,IAAIC,IAAMnI,MAAOqB,CAAAA,SAAUiH,CAAAA,kBAAmBE,CAAAA,KAApC,CAA0C,IAA1C,CAAgDC,SAAhD,CAEC,WAAX,GAAIP,EAAJ,EAAgClH,IAAAA,EAAhC,GAAyBkH,EAAzB,EAOEhG,OAAQC,CAAAA,QAAR,CAAiBS,uBAAjB,CAA0C,IAA1C,CAGF,OAAOuF,IAb6C,CAoCtD1I,SAAS4B,CAAAA,SAAU0B,CAAAA,MAAnB,CAA4B2F,QAAS,EAAG,CACtC,IAAInI,MAAQ,IAAKb,CAAAA,cAEZa,MAAMjC,CAAAA,OAAX,GACEgC,KAAA,CAAM,QAAN,CAaF,CATEC,KAAMjC,CAAAA,OASR,CATkB,CAACiC,KAAM3B,CAAAA,iBASzB,CARe2B,KAQJ5B,CAAAA,eAAX,GARe4B,KASP5B,CAAAA,eACN,CADwB,CAAA,CACxB,CAAAuD,OAAQC,CAAAA,QAAR,CAAiBc,OAAjB,CAVOvF,IAUP,CAVa6C,KAUb,CAFF,CAdA,CASAA,MAAMxB,CAAAA,MAAN;AAAe,CAAA,CACf,OAAO,KAb+B,CAoCxCU,SAAS4B,CAAAA,SAAUmG,CAAAA,KAAnB,CAA2BmB,QAAS,EAAG,CACrCrI,KAAA,CAAM,0BAAN,CAA+B,IAAKZ,CAAAA,cAAepB,CAAAA,OAAnD,CAEoC,EAAA,CAApC,GAAI,IAAKoB,CAAAA,cAAepB,CAAAA,OAAxB,GACEgC,KAAA,CAAM,OAAN,CAEA,CADA,IAAKZ,CAAAA,cAAepB,CAAAA,OACpB,CAD8B,CAAA,CAC9B,CAAA,IAAKsD,CAAAA,IAAL,CAAU,OAAV,CAHF,CAMA,KAAKlC,CAAAA,cAAeX,CAAAA,MAApB,CAA6B,CAAA,CAC7B,OAAO,KAV8B,CAyBvCU,SAAS4B,CAAAA,SAAUuH,CAAAA,IAAnB,CAA0BC,QAAS,CAACnL,MAAD,CAAS,CAC1C,IAAIoL,MAAQ,IAAZ,CAEIvI,MAAQ,IAAKb,CAAAA,cAFjB,CAGIX,OAAS,CAAA,CACbrB,OAAOH,CAAAA,EAAP,CAAU,KAAV,CAAiB,QAAS,EAAG,CAC3B+C,KAAA,CAAM,aAAN,CAEA,IAAIC,KAAMhB,CAAAA,OAAV,EAAqB,CAACgB,KAAM9B,CAAAA,KAA5B,CAAmC,CACjC,IAAI0B,MAAQI,KAAMhB,CAAAA,OAAQiB,CAAAA,GAAd,EACRL,MAAJ,EAAaA,KAAMhC,CAAAA,MAAnB,EAA2B2K,KAAMrI,CAAAA,IAAN,CAAWN,KAAX,CAFM,CAKnC2I,KAAMrI,CAAAA,IAAN,CAAW,IAAX,CAR2B,CAA7B,CAUA/C;MAAOH,CAAAA,EAAP,CAAU,MAAV,CAAkB,QAAS,CAAC4C,KAAD,CAAQ,CACjCG,KAAA,CAAM,cAAN,CACIC,MAAMhB,CAAAA,OAAV,GAAmBY,KAAnB,CAA2BI,KAAMhB,CAAAA,OAAQmC,CAAAA,KAAd,CAAoBvB,KAApB,CAA3B,CAEII,MAAM1C,CAAAA,UAAV,GAAmC,IAAnC,GAAyBsC,KAAzB,EAAqDa,IAAAA,EAArD,GAA2Cb,KAA3C,GAAiF,EAACI,KAAM1C,CAAAA,UAAP,EAAuBsC,KAAvB,EAAiCA,KAAMhC,CAAAA,MAAvC,CAAjF,EAEU2K,KAAMrI,CAAAA,IAAN0C,CAAWhD,KAAXgD,CAFV,GAKEpE,MACA,CADS,CAAA,CACT,CAAArB,MAAO8J,CAAAA,KAAP,EANF,CAJiC,CAAnC,CAeA,KAAKtD,IAAIA,CAAT,GAAcxG,OAAd,CACkBsD,IAAAA,EAAhB,GAAI,IAAA,CAAKkD,CAAL,CAAJ,EAAkD,UAAlD,GAA6B,MAAOxG,OAAA,CAAOwG,CAAP,CAApC,GACE,IAAA,CAAKA,CAAL,CADF,CACY6E,QAAmB,CAACC,MAAD,CAAS,CACpC,MAAOC,SAAiC,EAAG,CACzC,MAAOvL,OAAA,CAAOsL,MAAP,CAAeR,CAAAA,KAAf,CAAqB9K,MAArB,CAA6B+K,SAA7B,CADkC,CADP,CAA5B,CAIRvE,CAJQ,CADZ,CAUF,KAASpC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB+C,YAAa1G,CAAAA,MAAjC,CAAyC2D,CAAA,EAAzC,CACEpE,MAAOH,CAAAA,EAAP,CAAUsH,YAAA,CAAa/C,CAAb,CAAV,CAA2B,IAAKF,CAAAA,IAAKsH,CAAAA,IAAV,CAAe,IAAf,CAAqBrE,YAAA,CAAa/C,CAAb,CAArB,CAA3B,CAKF;IAAKjC,CAAAA,KAAL,CAAasJ,QAAS,CAACrH,CAAD,CAAI,CACxBxB,KAAA,CAAM,eAAN,CAAuBwB,CAAvB,CAEI/C,OAAJ,GACEA,MACA,CADS,CAAA,CACT,CAAArB,MAAOqF,CAAAA,MAAP,EAFF,CAHwB,CAS1B,OAAO,KAxDmC,CA2DtB,WAAtB,GAAI,MAAOqG,OAAX,GACE3J,QAAS4B,CAAAA,SAAT,CAAmB+H,MAAOC,CAAAA,aAA1B,CADF,CAC6C,QAAS,EAAG,CACXrI,IAAAA,EAA1C,GAAI4D,iCAAJ,GACEA,iCADF,CACsChI,OAAA,CAAQ,yEAAR,CADtC,CAIA,OAAOgI,kCAAA,CAAkC,IAAlC,CAL8C,CADzD,CAUAzD,OAAO2D,CAAAA,cAAP,CAAsBrF,QAAS4B,CAAAA,SAA/B,CAA0C,uBAA1C,CAAmE,CAIjE0D,WAAY,CAAA,CAJqD,CAKjEC,IAAKA,QAAY,EAAG,CAClB,MAAO,KAAKtF,CAAAA,cAAe3B,CAAAA,aADT,CAL6C,CAAnE,CASAoD;MAAO2D,CAAAA,cAAP,CAAsBrF,QAAS4B,CAAAA,SAA/B,CAA0C,gBAA1C,CAA4D,CAI1D0D,WAAY,CAAA,CAJ8C,CAK1DC,IAAKA,QAAY,EAAG,CAClB,MAAO,KAAKtF,CAAAA,cAAZ,EAA8B,IAAKA,CAAAA,cAAezB,CAAAA,MADhC,CALsC,CAA5D,CASAkD,OAAO2D,CAAAA,cAAP,CAAsBrF,QAAS4B,CAAAA,SAA/B,CAA0C,iBAA1C,CAA6D,CAI3D0D,WAAY,CAAA,CAJ+C,CAK3DC,IAAKA,QAAY,EAAG,CAClB,MAAO,KAAKtF,CAAAA,cAAepB,CAAAA,OADT,CALuC,CAQ3D2G,IAAKA,QAAY,CAAC1E,KAAD,CAAQ,CACnB,IAAKb,CAAAA,cAAT,GACE,IAAKA,CAAAA,cAAepB,CAAAA,OADtB,CACgCiC,KADhC,CADuB,CARkC,CAA7D,CAeAd,SAAS6J,CAAAA,SAAT,CAAqBpG,QACrB/B,OAAO2D,CAAAA,cAAP,CAAsBrF,QAAS4B,CAAAA,SAA/B,CAA0C,gBAA1C,CAA4D,CAI1D0D,WAAY,CAAA,CAJ8C,CAK1DC,IAAKA,QAAY,EAAG,CAClB,MAAO,KAAKtF,CAAAA,cAAevB,CAAAA,MADT,CALsC,CAA5D,CA0DsB;UAAtB,GAAI,MAAOiL,OAAX,GACE3J,QAAS6B,CAAAA,IADX,CACkBiI,QAAS,CAACC,QAAD,CAAWC,IAAX,CAAiB,CAC3BzI,IAAAA,EAAb,GAAIM,IAAJ,GACEA,IADF,CACS1E,OAAA,CAAQ,uEAAR,CADT,CAIA,OAAO0E,KAAA,CAAK7B,QAAL,CAAe+J,QAAf,CAAyBC,IAAzB,CALiC,CAD5C,CArlCqH;",
"sources":["node_modules/readable-stream/lib/_stream_readable.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$readable_stream$lib$_stream_readable\"] = function(global,require,module,exports) {\nvar process = require('process');\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","prependListener","emitter","event","fn","_events","Array","isArray","unshift","on","ReadableState","options","stream","isDuplex","Duplex","objectMode","readableObjectMode","highWaterMark","getHighWaterMark","buffer","BufferList","length","pipes","pipesCount","flowing","reading","endEmitted","ended","sync","resumeScheduled","readableListening","emittedReadable","needReadable","paused","emitClose","autoDestroy","destroyed","defaultEncoding","awaitDrain","readingMore","encoding","decoder","StringDecoder","Readable","_readableState","readable","read","_read","destroy","_destroy","Stream","call","readableAddChunk","chunk","addToFront","skipChunkCheck","debug","state","end","push","emitReadable","emitReadable_","er","Buffer","isBuffer","OurUint8Array","undefined","ERR_INVALID_ARG_TYPE","errorOrDestroy","Object","getPrototypeOf","prototype","from","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","addChunk","ERR_STREAM_PUSH_AFTER_EOF","write","maybeReadMore","emit","howMuchToRead","n","head","data","MAX_HWM","process","nextTick","flow","maybeReadMore_","len","pipeOnDrain","src","pipeOnDrainFunctionResult","listeners","type","updateReadableListening","self","listenerCount","resume","nReadingNextTick","resume_","fromList","ret","shift","join","first","concat","clear","consume","endReadable","endReadableNT","wState","_writableState","finished","indexOf","xs","x","i","l","Uint8Array","debugUtil","debuglog","destroyImpl","_require","_require$codes","codes","ERR_METHOD_NOT_IMPLEMENTED","createReadableStreamAsyncIterator","kProxyEvents","defineProperty","enumerable","get","set","value","_undestroy","undestroy","Readable.prototype._destroy","err","cb","Readable.prototype.push","Readable.prototype.unshift","isPaused","Readable.prototype.isPaused","setEncoding","Readable.prototype.setEncoding","enc","p","content","next","Readable.prototype.read","parseInt","nOrig","doRead","Readable.prototype._read","pipe","Readable.prototype.pipe","dest","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","onerror","onend","unpipe","ondata","cleanedUp","needDrain","pause","endFn","stdout","stderr","once","Readable.prototype.unpipe","dests","index","splice","Readable.prototype.on","ev","res","addListener","Readable.prototype.removeListener","removeAllListeners","Readable.prototype.removeAllListeners","apply","arguments","Readable.prototype.resume","Readable.prototype.pause","wrap","Readable.prototype.wrap","_this","methodWrap","method","methodWrapReturnFunction","bind","this._read","Symbol","asyncIterator","_fromList","Readable.from","iterable","opts"]
}
